ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_dcmpge
  20              		.global	__aeabi_dcmple
  21              		.global	__aeabi_dcmplt
  22              		.global	__aeabi_ui2f
  23              		.global	__aeabi_fmul
  24              		.global	__aeabi_f2d
  25              		.global	__aeabi_dsub
  26              		.global	__aeabi_ddiv
  27              		.global	__aeabi_dmul
  28              		.global	__aeabi_d2uiz
  29              		.global	__aeabi_uidiv
  30              		.section	.text.main,"ax",%progbits
  31              		.align	2
  32              		.global	main
  33              		.code	16
  34              		.thumb_func
  35              		.type	main, %function
  36              	main:
  37              	.LFB32:
  38              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * Project Name		: Sensored BLDC Motor Control
   3:main.c        **** * File Name			: main.c
   4:main.c        **** * Version			: 1.0
   5:main.c        **** * Device Used		: CY8C4245AXI-483     
   6:main.c        **** * Software Used		: PSoC Creator 4.2
   7:main.c        **** * Compiler Used		: ARM GCC 5.4.1 
   8:main.c        **** * Related Hardware  : CY8CKIT-042 PSoC 4 Pioneer Kit + CY8CKIT-037 PSoC 4
   9:main.c        **** *                     Motor Control Evaluation Kit
  10:main.c        **** ******************************************************************************
  11:main.c        **** * Copyright (2018), Cypress Semiconductor Corporation. All rights reserved.
  12:main.c        **** *******************************************************************************
  13:main.c        **** * This software, including source code, documentation and related materials
  14:main.c        **** * (“Software”), is owned by Cypress Semiconductor Corporation or one of its
  15:main.c        **** * subsidiaries (“Cypress”) and is protected by and subject to worldwide patent
  16:main.c        **** * protection (United States and foreign), United States copyright laws and
  17:main.c        **** * international treaty provisions. Therefore, you may use this Software only
  18:main.c        **** * as provided in the license agreement accompanying the software package from
  19:main.c        **** * which you obtained this Software (“EULA”).
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 2


  20:main.c        **** *
  21:main.c        **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  22:main.c        **** * non-transferable license to copy, modify, and compile the Software source
  23:main.c        **** * code solely for use in connection with Cypress’s integrated circuit products.
  24:main.c        **** * Any reproduction, modification, translation, compilation, or representation
  25:main.c        **** * of this Software except as specified above is prohibited without the express
  26:main.c        **** * written permission of Cypress.
  27:main.c        **** *
  28:main.c        **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND, 
  29:main.c        **** * EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED 
  30:main.c        **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress 
  31:main.c        **** * reserves the right to make changes to the Software without notice. Cypress 
  32:main.c        **** * does not assume any liability arising out of the application or use of the 
  33:main.c        **** * Software or any product or circuit described in the Software. Cypress does 
  34:main.c        **** * not authorize its products for use in any products where a malfunction or 
  35:main.c        **** * failure of the Cypress product may reasonably be expected to result in 
  36:main.c        **** * significant property damage, injury or death (“High Risk Product”). By 
  37:main.c        **** * including Cypress’s product in a High Risk Product, the manufacturer of such 
  38:main.c        **** * system or application assumes all risk of such use and in doing so agrees to 
  39:main.c        **** * indemnify Cypress against all liability.
  40:main.c        **** *******************************************************************************/
  41:main.c        **** #include <project.h>
  42:main.c        **** #include "motor.h"
  43:main.c        **** #include "speed.h"
  44:main.c        **** #include "userinterface.h"
  45:main.c        **** #include "getvalue.h"
  46:main.c        **** 
  47:main.c        **** #define myFloor(x) ((int)(x) - ((x) < 0 && (x) != (int)(x)));
  48:main.c        **** #define myAbs(x) ((x) < 0.0 ? -(x) : (x));
  49:main.c        **** 
  50:main.c        **** /* 1 = brace control, 0 = simple speed control */
  51:main.c        **** #define NORMALCONTROL 1
  52:main.c        **** #define SPEEDCONTROL (!NORMALCONTROL)
  53:main.c        **** 
  54:main.c        **** int main()
  55:main.c        **** {  
  39              		.loc 1 55 0
  40              		.cfi_startproc
  41              		@ args = 0, pretend = 0, frame = 40
  42              		@ frame_needed = 1, uses_anonymous_args = 0
  43 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  44              		.cfi_def_cfa_offset 20
  45              		.cfi_offset 4, -20
  46              		.cfi_offset 5, -16
  47              		.cfi_offset 6, -12
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 8BB0     		sub	sp, sp, #44
  51              		.cfi_def_cfa_offset 64
  52 0004 00AF     		add	r7, sp, #0
  53              		.cfi_def_cfa_register 7
  56:main.c        ****     uint8 HallReader = 0;    
  54              		.loc 1 56 0
  55 0006 0F23     		movs	r3, #15
  56 0008 1022     		movs	r2, #16
  57 000a 9446     		mov	ip, r2
  58 000c BC44     		add	ip, ip, r7
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 3


  59 000e 6344     		add	r3, r3, ip
  60 0010 0022     		movs	r2, #0
  61 0012 1A70     		strb	r2, [r3]
  57:main.c        **** 	uint16 pwmCntLocal = 0;
  62              		.loc 1 57 0
  63 0014 1623     		movs	r3, #22
  64 0016 1022     		movs	r2, #16
  65 0018 9446     		mov	ip, r2
  66 001a BC44     		add	ip, ip, r7
  67 001c 6344     		add	r3, r3, ip
  68 001e 0022     		movs	r2, #0
  69 0020 1A80     		strh	r2, [r3]
  58:main.c        ****     
  59:main.c        ****     /* initialize parameters in UI FW */
  60:main.c        ****     Init_UI_FW();    
  70              		.loc 1 60 0
  71 0022 FFF7FEFF 		bl	Init_UI_FW
  61:main.c        ****     /* disable global interrupt */ 
  62:main.c        **** 	CyGlobalIntDisable;	
  72              		.loc 1 62 0
  73              		.syntax divided
  74              	@ 62 "main.c" 1
  75 0026 72B6     		CPSID   i
  76              	@ 0 "" 2
  63:main.c        ****     /* initialize system hardware components */	
  64:main.c        ****     Init_HW();   	
  77              		.loc 1 64 0
  78              		.thumb
  79              		.syntax unified
  80 0028 FFF7FEFF 		bl	Init_HW
  65:main.c        ****     /*Enable Global interrupt*/
  66:main.c        **** 	CyGlobalIntEnable;    
  81              		.loc 1 66 0
  82              		.syntax divided
  83              	@ 66 "main.c" 1
  84 002c 62B6     		CPSIE   i
  85              	@ 0 "" 2
  67:main.c        ****     /* initialize UI hardware components */ 
  68:main.c        **** 	Init_UI_HW();
  86              		.loc 1 68 0
  87              		.thumb
  88              		.syntax unified
  89 002e FFF7FEFF 		bl	Init_UI_HW
  69:main.c        ****     
  70:main.c        ****     /* stop motor as default */
  71:main.c        **** 	UI_Cmd.run =  FALSE;     
  90              		.loc 1 71 0
  91 0032 C24B     		ldr	r3, .L39
  92 0034 0022     		movs	r2, #0
  93 0036 1A70     		strb	r2, [r3]
  72:main.c        ****     /* Set Motor Direction */
  73:main.c        ****     /* CLOCK_WISE = 0x01, and COUNTER_CLOCK_WISE = 0x00 */ 
  74:main.c        ****     
  75:main.c        ****     #if SPEEDCONTROL
  76:main.c        **** 	UI_Data.Dir = CLOCK_WISE;	
  77:main.c        ****     #endif
  78:main.c        ****         
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 4


  79:main.c        ****     CtrlReg_Dir_Write(UI_Data.Dir);
  94              		.loc 1 79 0
  95 0038 C14B     		ldr	r3, .L39+4
  96 003a 1B79     		ldrb	r3, [r3, #4]
  97 003c 1800     		movs	r0, r3
  98 003e FFF7FEFF 		bl	CtrlReg_Dir_Write
  99              	.L36:
  80:main.c        ****     
  81:main.c        ****     for(;;)
  82:main.c        ****     {
  83:main.c        ****         /* Scan sensors and handle event */
  84:main.c        **** 	    ButtonProcess();
 100              		.loc 1 84 0
 101 0042 FFF7FEFF 		bl	ButtonProcess
  85:main.c        **** 		
  86:main.c        ****         /* Measure bus voltage */
  87:main.c        ****         VoltageCheck();	
 102              		.loc 1 87 0
 103 0046 FFF7FEFF 		bl	VoltageCheck
  88:main.c        ****         
  89:main.c        ****         #if NORMALCONTROL
  90:main.c        ****         /* Change direction of brace movement at +45 and -45 degrees of arc */
  91:main.c        ****         if (
  92:main.c        ****             (UI_Data.programStateManchineState > 1) &&
 104              		.loc 1 92 0
 105 004a BD4B     		ldr	r3, .L39+4
 106 004c 2322     		movs	r2, #35
 107 004e 9B5C     		ldrb	r3, [r3, r2]
  91:main.c        ****             (UI_Data.programStateManchineState > 1) &&
 108              		.loc 1 91 0
 109 0050 012B     		cmp	r3, #1
 110 0052 28D9     		bls	.L2
  93:main.c        ****             (
  94:main.c        ****             ((UI_Data.Dir == CLOCK_WISE) && (UI_Data.angularPos >= 45.0)) || 
 111              		.loc 1 94 0
 112 0054 BA4B     		ldr	r3, .L39+4
 113 0056 1B79     		ldrb	r3, [r3, #4]
  92:main.c        ****             (
 114              		.loc 1 92 0
 115 0058 002B     		cmp	r3, #0
 116 005a 08D1     		bne	.L3
 117              		.loc 1 94 0
 118 005c B84B     		ldr	r3, .L39+4
 119 005e 9869     		ldr	r0, [r3, #24]
 120 0060 D969     		ldr	r1, [r3, #28]
 121 0062 0022     		movs	r2, #0
 122 0064 B74B     		ldr	r3, .L39+8
 123 0066 FFF7FEFF 		bl	__aeabi_dcmpge
 124 006a 031E     		subs	r3, r0, #0
 125 006c 0CD1     		bne	.L4
 126              	.L3:
  95:main.c        ****             ((UI_Data.Dir == COUNTER_CLOCK_WISE) && (UI_Data.angularPos <= -45.0))
 127              		.loc 1 95 0 discriminator 1
 128 006e B44B     		ldr	r3, .L39+4
 129 0070 1B79     		ldrb	r3, [r3, #4]
  94:main.c        ****             ((UI_Data.Dir == COUNTER_CLOCK_WISE) && (UI_Data.angularPos <= -45.0))
 130              		.loc 1 94 0 discriminator 1
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 5


 131 0072 012B     		cmp	r3, #1
 132 0074 17D1     		bne	.L2
 133              		.loc 1 95 0
 134 0076 B24B     		ldr	r3, .L39+4
 135 0078 9869     		ldr	r0, [r3, #24]
 136 007a D969     		ldr	r1, [r3, #28]
 137 007c 0022     		movs	r2, #0
 138 007e B24B     		ldr	r3, .L39+12
 139 0080 FFF7FEFF 		bl	__aeabi_dcmple
 140 0084 031E     		subs	r3, r0, #0
 141 0086 0ED0     		beq	.L2
 142              	.L4:
  96:main.c        ****             )
  97:main.c        ****         ) {
  98:main.c        ****             UI_Data.changeDirection = TRUE;
 143              		.loc 1 98 0
 144 0088 AD4B     		ldr	r3, .L39+4
 145 008a 2222     		movs	r2, #34
 146 008c 0121     		movs	r1, #1
 147 008e 9954     		strb	r1, [r3, r2]
  99:main.c        ****             UI_Cmd.run = FALSE;
 148              		.loc 1 99 0
 149 0090 AA4B     		ldr	r3, .L39
 150 0092 0022     		movs	r2, #0
 151 0094 1A70     		strb	r2, [r3]
 100:main.c        ****             
 101:main.c        ****             UI_Data.programStateManchineState++;
 152              		.loc 1 101 0
 153 0096 AA4B     		ldr	r3, .L39+4
 154 0098 2322     		movs	r2, #35
 155 009a 9B5C     		ldrb	r3, [r3, r2]
 156 009c 0133     		adds	r3, r3, #1
 157 009e D9B2     		uxtb	r1, r3
 158 00a0 A74B     		ldr	r3, .L39+4
 159 00a2 2322     		movs	r2, #35
 160 00a4 9954     		strb	r1, [r3, r2]
 161              	.L2:
 102:main.c        ****         }
 103:main.c        ****         
 104:main.c        ****         /* wait period before begining of exercise arc - COMPLETE THIS CODE */
 105:main.c        ****         if (UI_Data.programStateManchineState == 1) { // make this a condition depending on a timer
 162              		.loc 1 105 0
 163 00a6 A64B     		ldr	r3, .L39+4
 164 00a8 2322     		movs	r2, #35
 165 00aa 9B5C     		ldrb	r3, [r3, r2]
 166 00ac 012B     		cmp	r3, #1
 167 00ae 03D1     		bne	.L6
 106:main.c        ****             UI_Data.programStateManchineState = 2;
 168              		.loc 1 106 0
 169 00b0 A34B     		ldr	r3, .L39+4
 170 00b2 2322     		movs	r2, #35
 171 00b4 0221     		movs	r1, #2
 172 00b6 9954     		strb	r1, [r3, r2]
 173              	.L6:
 107:main.c        ****         }
 108:main.c        ****         
 109:main.c        ****         /* wait period after direction change of excercise arc - COMPLETE THIS CODE */
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 6


 110:main.c        ****         if (UI_Data.programStateManchineState == 5) { // make this a condition depending on a timer
 174              		.loc 1 110 0
 175 00b8 A14B     		ldr	r3, .L39+4
 176 00ba 2322     		movs	r2, #35
 177 00bc 9B5C     		ldrb	r3, [r3, r2]
 178 00be 052B     		cmp	r3, #5
 179 00c0 03D1     		bne	.L7
 111:main.c        ****             UI_Data.programStateManchineState = 6;
 180              		.loc 1 111 0
 181 00c2 9F4B     		ldr	r3, .L39+4
 182 00c4 2322     		movs	r2, #35
 183 00c6 0621     		movs	r1, #6
 184 00c8 9954     		strb	r1, [r3, r2]
 185              	.L7:
 112:main.c        ****         }
 113:main.c        ****             
 114:main.c        ****         /* Change acceleration of brace response at start and end of arc by incrementing state mach
 115:main.c        ****         if ( 
 116:main.c        ****             ((UI_Data.programStateManchineState == 2) && (UI_Data.angularPos >= -10.0)) ||
 186              		.loc 1 116 0
 187 00ca 9D4B     		ldr	r3, .L39+4
 188 00cc 2322     		movs	r2, #35
 189 00ce 9B5C     		ldrb	r3, [r3, r2]
 115:main.c        ****             ((UI_Data.programStateManchineState == 2) && (UI_Data.angularPos >= -10.0)) ||
 190              		.loc 1 115 0
 191 00d0 022B     		cmp	r3, #2
 192 00d2 08D1     		bne	.L8
 193              		.loc 1 116 0
 194 00d4 9A4B     		ldr	r3, .L39+4
 195 00d6 9869     		ldr	r0, [r3, #24]
 196 00d8 D969     		ldr	r1, [r3, #28]
 197 00da 0022     		movs	r2, #0
 198 00dc 9B4B     		ldr	r3, .L39+16
 199 00de FFF7FEFF 		bl	__aeabi_dcmpge
 200 00e2 031E     		subs	r3, r0, #0
 201 00e4 29D1     		bne	.L9
 202              	.L8:
 117:main.c        ****             ((UI_Data.programStateManchineState == 3) && (UI_Data.angularPos >= 10.0)) ||
 203              		.loc 1 117 0 discriminator 1
 204 00e6 964B     		ldr	r3, .L39+4
 205 00e8 2322     		movs	r2, #35
 206 00ea 9B5C     		ldrb	r3, [r3, r2]
 116:main.c        ****             ((UI_Data.programStateManchineState == 3) && (UI_Data.angularPos >= 10.0)) ||
 207              		.loc 1 116 0 discriminator 1
 208 00ec 032B     		cmp	r3, #3
 209 00ee 08D1     		bne	.L10
 210              		.loc 1 117 0
 211 00f0 934B     		ldr	r3, .L39+4
 212 00f2 9869     		ldr	r0, [r3, #24]
 213 00f4 D969     		ldr	r1, [r3, #28]
 214 00f6 0022     		movs	r2, #0
 215 00f8 954B     		ldr	r3, .L39+20
 216 00fa FFF7FEFF 		bl	__aeabi_dcmpge
 217 00fe 031E     		subs	r3, r0, #0
 218 0100 1BD1     		bne	.L9
 219              	.L10:
 118:main.c        ****             ((UI_Data.programStateManchineState == 6) && (UI_Data.angularPos <= 10.0)) ||
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 7


 220              		.loc 1 118 0 discriminator 1
 221 0102 8F4B     		ldr	r3, .L39+4
 222 0104 2322     		movs	r2, #35
 223 0106 9B5C     		ldrb	r3, [r3, r2]
 117:main.c        ****             ((UI_Data.programStateManchineState == 3) && (UI_Data.angularPos >= 10.0)) ||
 224              		.loc 1 117 0 discriminator 1
 225 0108 062B     		cmp	r3, #6
 226 010a 08D1     		bne	.L11
 227              		.loc 1 118 0
 228 010c 8C4B     		ldr	r3, .L39+4
 229 010e 9869     		ldr	r0, [r3, #24]
 230 0110 D969     		ldr	r1, [r3, #28]
 231 0112 0022     		movs	r2, #0
 232 0114 8E4B     		ldr	r3, .L39+20
 233 0116 FFF7FEFF 		bl	__aeabi_dcmple
 234 011a 031E     		subs	r3, r0, #0
 235 011c 0DD1     		bne	.L9
 236              	.L11:
 119:main.c        ****             ((UI_Data.programStateManchineState == 7) && (UI_Data.angularPos <= -10.0))
 237              		.loc 1 119 0 discriminator 1
 238 011e 884B     		ldr	r3, .L39+4
 239 0120 2322     		movs	r2, #35
 240 0122 9B5C     		ldrb	r3, [r3, r2]
 118:main.c        ****             ((UI_Data.programStateManchineState == 6) && (UI_Data.angularPos <= 10.0)) ||
 241              		.loc 1 118 0 discriminator 1
 242 0124 072B     		cmp	r3, #7
 243 0126 10D1     		bne	.L12
 244              		.loc 1 119 0
 245 0128 854B     		ldr	r3, .L39+4
 246 012a 9869     		ldr	r0, [r3, #24]
 247 012c D969     		ldr	r1, [r3, #28]
 248 012e 0022     		movs	r2, #0
 249 0130 864B     		ldr	r3, .L39+16
 250 0132 FFF7FEFF 		bl	__aeabi_dcmple
 251 0136 031E     		subs	r3, r0, #0
 252 0138 07D0     		beq	.L12
 253              	.L9:
 120:main.c        ****         ) {
 121:main.c        ****             UI_Data.programStateManchineState++;
 254              		.loc 1 121 0
 255 013a 814B     		ldr	r3, .L39+4
 256 013c 2322     		movs	r2, #35
 257 013e 9B5C     		ldrb	r3, [r3, r2]
 258 0140 0133     		adds	r3, r3, #1
 259 0142 D9B2     		uxtb	r1, r3
 260 0144 7E4B     		ldr	r3, .L39+4
 261 0146 2322     		movs	r2, #35
 262 0148 9954     		strb	r1, [r3, r2]
 263              	.L12:
 122:main.c        ****         }
 123:main.c        ****         
 124:main.c        ****         /* End of exercise - stop program */
 125:main.c        ****         if (UI_Data.programStateManchineState == 9) {
 264              		.loc 1 125 0
 265 014a 7D4B     		ldr	r3, .L39+4
 266 014c 2322     		movs	r2, #35
 267 014e 9B5C     		ldrb	r3, [r3, r2]
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 8


 268 0150 092B     		cmp	r3, #9
 269 0152 02D1     		bne	.L14
 126:main.c        ****             UI_Cmd.run = FALSE;
 270              		.loc 1 126 0
 271 0154 794B     		ldr	r3, .L39
 272 0156 0022     		movs	r2, #0
 273 0158 1A70     		strb	r2, [r3]
 274              	.L14:
 127:main.c        ****         }
 128:main.c        ****         #endif
 129:main.c        ****         
 130:main.c        ****         /* Erroneus state machine state*/
 131:main.c        ****         if (UI_Data.programStateManchineState > 9) {
 275              		.loc 1 131 0
 276 015a 794B     		ldr	r3, .L39+4
 277 015c 2322     		movs	r2, #35
 278 015e 9B5C     		ldrb	r3, [r3, r2]
 279 0160 092B     		cmp	r3, #9
 280 0162 02D9     		bls	.L15
 132:main.c        ****             errorState = stateMachineError;
 281              		.loc 1 132 0
 282 0164 7B4B     		ldr	r3, .L39+24
 283 0166 0622     		movs	r2, #6
 284 0168 1A70     		strb	r2, [r3]
 285              	.L15:
 133:main.c        ****         }
 134:main.c        **** 
 135:main.c        ****         if ((UI_Cmd.run == FALSE) && (UI_Data.changeDirection == TRUE)) {
 286              		.loc 1 135 0
 287 016a 744B     		ldr	r3, .L39
 288 016c 1B78     		ldrb	r3, [r3]
 289 016e 002B     		cmp	r3, #0
 290 0170 42D1     		bne	.L16
 291              		.loc 1 135 0 is_stmt 0 discriminator 1
 292 0172 734B     		ldr	r3, .L39+4
 293 0174 2222     		movs	r2, #34
 294 0176 9B5C     		ldrb	r3, [r3, r2]
 295 0178 012B     		cmp	r3, #1
 296 017a 3DD1     		bne	.L16
 136:main.c        ****             CtrlReg_PWMOut_Write(0x00);  
 297              		.loc 1 136 0 is_stmt 1
 298 017c 0020     		movs	r0, #0
 299 017e FFF7FEFF 		bl	CtrlReg_PWMOut_Write
 137:main.c        ****             
 138:main.c        ****             #if NORMALCONTROL
 139:main.c        ****             if (UI_Data.Dir == CLOCK_WISE) {
 300              		.loc 1 139 0
 301 0182 6F4B     		ldr	r3, .L39+4
 302 0184 1B79     		ldrb	r3, [r3, #4]
 303 0186 002B     		cmp	r3, #0
 304 0188 03D1     		bne	.L17
 140:main.c        ****                 UI_Data.Dir = COUNTER_CLOCK_WISE;
 305              		.loc 1 140 0
 306 018a 6D4B     		ldr	r3, .L39+4
 307 018c 0122     		movs	r2, #1
 308 018e 1A71     		strb	r2, [r3, #4]
 309 0190 0AE0     		b	.L18
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 9


 310              	.L17:
 141:main.c        ****             } else if (UI_Data.Dir == COUNTER_CLOCK_WISE) {
 311              		.loc 1 141 0
 312 0192 6B4B     		ldr	r3, .L39+4
 313 0194 1B79     		ldrb	r3, [r3, #4]
 314 0196 012B     		cmp	r3, #1
 315 0198 03D1     		bne	.L19
 142:main.c        ****                 UI_Data.Dir = CLOCK_WISE;
 316              		.loc 1 142 0
 317 019a 694B     		ldr	r3, .L39+4
 318 019c 0022     		movs	r2, #0
 319 019e 1A71     		strb	r2, [r3, #4]
 320 01a0 02E0     		b	.L18
 321              	.L19:
 143:main.c        ****             } else {
 144:main.c        ****                 errorState = dirError;
 322              		.loc 1 144 0
 323 01a2 6C4B     		ldr	r3, .L39+24
 324 01a4 0522     		movs	r2, #5
 325 01a6 1A70     		strb	r2, [r3]
 326              	.L18:
 145:main.c        ****             }
 146:main.c        ****             #endif
 147:main.c        **** 
 148:main.c        ****         	pwmCntLocal = 0;
 327              		.loc 1 148 0
 328 01a8 1623     		movs	r3, #22
 329 01aa 1022     		movs	r2, #16
 330 01ac 9446     		mov	ip, r2
 331 01ae BC44     		add	ip, ip, r7
 332 01b0 6344     		add	r3, r3, ip
 333 01b2 0022     		movs	r2, #0
 334 01b4 1A80     		strh	r2, [r3]
 149:main.c        ****             pwmCnt = 0;
 335              		.loc 1 149 0
 336 01b6 684B     		ldr	r3, .L39+28
 337 01b8 0022     		movs	r2, #0
 338 01ba 1A80     		strh	r2, [r3]
 150:main.c        ****              
 151:main.c        ****             CtrlReg_Dir_Write(UI_Data.Dir);
 339              		.loc 1 151 0
 340 01bc 604B     		ldr	r3, .L39+4
 341 01be 1B79     		ldrb	r3, [r3, #4]
 342 01c0 1800     		movs	r0, r3
 343 01c2 FFF7FEFF 		bl	CtrlReg_Dir_Write
 152:main.c        ****             
 153:main.c        ****             UI_Data.changeDirection = FALSE;
 344              		.loc 1 153 0
 345 01c6 5E4B     		ldr	r3, .L39+4
 346 01c8 2222     		movs	r2, #34
 347 01ca 0021     		movs	r1, #0
 348 01cc 9954     		strb	r1, [r3, r2]
 154:main.c        ****             
 155:main.c        ****             CyDelay(2000);
 349              		.loc 1 155 0
 350 01ce FA23     		movs	r3, #250
 351 01d0 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 10


 352 01d2 1800     		movs	r0, r3
 353 01d4 FFF7FEFF 		bl	CyDelay
 156:main.c        ****               
 157:main.c        ****             drive_reset();
 354              		.loc 1 157 0
 355 01d8 FFF7FEFF 		bl	drive_reset
 158:main.c        ****             
 159:main.c        ****         	pwmCntLocal = 0;
 356              		.loc 1 159 0
 357 01dc 1623     		movs	r3, #22
 358 01de 1022     		movs	r2, #16
 359 01e0 9446     		mov	ip, r2
 360 01e2 BC44     		add	ip, ip, r7
 361 01e4 6344     		add	r3, r3, ip
 362 01e6 0022     		movs	r2, #0
 363 01e8 1A80     		strh	r2, [r3]
 160:main.c        ****             pwmCnt = 0;
 364              		.loc 1 160 0
 365 01ea 5B4B     		ldr	r3, .L39+28
 366 01ec 0022     		movs	r2, #0
 367 01ee 1A80     		strh	r2, [r3]
 161:main.c        ****             
 162:main.c        ****             UI_Cmd.run = TRUE;
 368              		.loc 1 162 0
 369 01f0 524B     		ldr	r3, .L39
 370 01f2 0122     		movs	r2, #1
 371 01f4 1A70     		strb	r2, [r3]
 372 01f6 1BE0     		b	.L20
 373              	.L16:
 163:main.c        ****                 
 164:main.c        ****         } else if(UI_Cmd.run == FALSE) {
 374              		.loc 1 164 0
 375 01f8 504B     		ldr	r3, .L39
 376 01fa 1B78     		ldrb	r3, [r3]
 377 01fc 002B     		cmp	r3, #0
 378 01fe 17D1     		bne	.L20
 165:main.c        ****             /*Stop motor by disabling PWM output */
 166:main.c        ****             /* Turning off LED when motor stopping */
 167:main.c        **** 			STATUS_LED_Write(1);			
 379              		.loc 1 167 0
 380 0200 0120     		movs	r0, #1
 381 0202 FFF7FEFF 		bl	STATUS_LED_Write
 168:main.c        ****         	CtrlReg_PWMOut_Write(0x00);  
 382              		.loc 1 168 0
 383 0206 0020     		movs	r0, #0
 384 0208 FFF7FEFF 		bl	CtrlReg_PWMOut_Write
 169:main.c        **** 			PWM_Drive_WriteCompare(PWM_Drive_ReadPeriod()>>16);
 385              		.loc 1 169 0
 386 020c FFF7FEFF 		bl	PWM_Drive_ReadPeriod
 387 0210 0300     		movs	r3, r0
 388 0212 1B0C     		lsrs	r3, r3, #16
 389 0214 1800     		movs	r0, r3
 390 0216 FFF7FEFF 		bl	PWM_Drive_WriteCompare
 170:main.c        ****             
 171:main.c        ****         	piOut = INIT_PIOUT;
 391              		.loc 1 171 0
 392 021a 504B     		ldr	r3, .L39+32
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 11


 393 021c A022     		movs	r2, #160
 394 021e D202     		lsls	r2, r2, #11
 395 0220 1A60     		str	r2, [r3]
 172:main.c        ****         	HallReader = TRUE;
 396              		.loc 1 172 0
 397 0222 0F23     		movs	r3, #15
 398 0224 1022     		movs	r2, #16
 399 0226 9446     		mov	ip, r2
 400 0228 BC44     		add	ip, ip, r7
 401 022a 6344     		add	r3, r3, ip
 402 022c 0122     		movs	r2, #1
 403 022e 1A70     		strb	r2, [r3]
 404              	.L20:
 173:main.c        ****         } 
 174:main.c        **** 		
 175:main.c        **** 		/* Error Protection: Disable PWM and shining LED at 1Hz */
 176:main.c        **** 		if(errorState != 0)
 405              		.loc 1 176 0
 406 0230 484B     		ldr	r3, .L39+24
 407 0232 1B78     		ldrb	r3, [r3]
 408 0234 002B     		cmp	r3, #0
 409 0236 39D0     		beq	.L21
 177:main.c        **** 		{
 178:main.c        **** 			CtrlReg_PWMOut_Write(0x00);
 410              		.loc 1 178 0
 411 0238 0020     		movs	r0, #0
 412 023a FFF7FEFF 		bl	CtrlReg_PWMOut_Write
 179:main.c        ****             
 180:main.c        ****             /* Shining LED at 0.1Hz */
 181:main.c        ****             // errorState values: no_error = 0, overCur, hallError, lowVolt, highVolt, dirError, st
 182:main.c        ****             if(errorState == overCur) {
 413              		.loc 1 182 0
 414 023e 454B     		ldr	r3, .L39+24
 415 0240 1B78     		ldrb	r3, [r3]
 416 0242 012B     		cmp	r3, #1
 417 0244 18D1     		bne	.L22
 183:main.c        ****                 STATUS_LED_Write(~(STATUS_LED_Read()));
 418              		.loc 1 183 0
 419 0246 FFF7FEFF 		bl	STATUS_LED_Read
 420 024a 0300     		movs	r3, r0
 421 024c DB43     		mvns	r3, r3
 422 024e DBB2     		uxtb	r3, r3
 423 0250 1800     		movs	r0, r3
 424 0252 FFF7FEFF 		bl	STATUS_LED_Write
 184:main.c        ****                 CyDelay(5000);
 425              		.loc 1 184 0
 426 0256 424B     		ldr	r3, .L39+36
 427 0258 1800     		movs	r0, r3
 428 025a FFF7FEFF 		bl	CyDelay
 185:main.c        ****                 STATUS_LED_Write(~(STATUS_LED_Read()));
 429              		.loc 1 185 0
 430 025e FFF7FEFF 		bl	STATUS_LED_Read
 431 0262 0300     		movs	r3, r0
 432 0264 DB43     		mvns	r3, r3
 433 0266 DBB2     		uxtb	r3, r3
 434 0268 1800     		movs	r0, r3
 435 026a FFF7FEFF 		bl	STATUS_LED_Write
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 12


 186:main.c        ****                 CyDelay(5000);
 436              		.loc 1 186 0
 437 026e 3C4B     		ldr	r3, .L39+36
 438 0270 1800     		movs	r0, r3
 439 0272 FFF7FEFF 		bl	CyDelay
 440 0276 19E0     		b	.L21
 441              	.L22:
 187:main.c        ****             }
 188:main.c        **** 
 189:main.c        ****             /* Shining LED at 1Hz */
 190:main.c        ****             else{
 191:main.c        ****                 STATUS_LED_Write(~(STATUS_LED_Read()));
 442              		.loc 1 191 0
 443 0278 FFF7FEFF 		bl	STATUS_LED_Read
 444 027c 0300     		movs	r3, r0
 445 027e DB43     		mvns	r3, r3
 446 0280 DBB2     		uxtb	r3, r3
 447 0282 1800     		movs	r0, r3
 448 0284 FFF7FEFF 		bl	STATUS_LED_Write
 192:main.c        ****                 CyDelay(500);
 449              		.loc 1 192 0
 450 0288 FA23     		movs	r3, #250
 451 028a 5B00     		lsls	r3, r3, #1
 452 028c 1800     		movs	r0, r3
 453 028e FFF7FEFF 		bl	CyDelay
 193:main.c        ****                 STATUS_LED_Write(~(STATUS_LED_Read()));
 454              		.loc 1 193 0
 455 0292 FFF7FEFF 		bl	STATUS_LED_Read
 456 0296 0300     		movs	r3, r0
 457 0298 DB43     		mvns	r3, r3
 458 029a DBB2     		uxtb	r3, r3
 459 029c 1800     		movs	r0, r3
 460 029e FFF7FEFF 		bl	STATUS_LED_Write
 194:main.c        ****                 CyDelay(500);
 461              		.loc 1 194 0
 462 02a2 FA23     		movs	r3, #250
 463 02a4 5B00     		lsls	r3, r3, #1
 464 02a6 1800     		movs	r0, r3
 465 02a8 FFF7FEFF 		bl	CyDelay
 466              	.L21:
 195:main.c        ****             }
 196:main.c        **** 		}		
 197:main.c        ****         
 198:main.c        **** 		/* Motor Running */
 199:main.c        ****         if(UI_Cmd.run == TRUE && errorState == 0)
 467              		.loc 1 199 0
 468 02ac 234B     		ldr	r3, .L39
 469 02ae 1B78     		ldrb	r3, [r3]
 470 02b0 012B     		cmp	r3, #1
 471 02b2 00D0     		beq	.LCB362
 472 02b4 4BE1     		b	.L23	@long jump
 473              	.LCB362:
 474              		.loc 1 199 0 is_stmt 0 discriminator 1
 475 02b6 274B     		ldr	r3, .L39+24
 476 02b8 1B78     		ldrb	r3, [r3]
 477 02ba 002B     		cmp	r3, #0
 478 02bc 00D0     		beq	.LCB366
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 13


 479 02be 46E1     		b	.L23	@long jump
 480              	.LCB366:
 200:main.c        ****         {
 201:main.c        **** 			/* Lighting LED when motor running */
 202:main.c        **** 			STATUS_LED_Write(0);
 481              		.loc 1 202 0 is_stmt 1
 482 02c0 0020     		movs	r0, #0
 483 02c2 FFF7FEFF 		bl	STATUS_LED_Write
 203:main.c        **** 			
 204:main.c        ****             /* only send out UART data when motor is running */
 205:main.c        **** 		    BCPPoll();
 484              		.loc 1 205 0
 485 02c6 FFF7FEFF 		bl	BCPPoll
 206:main.c        ****             
 207:main.c        ****             CtrlReg_PWMOut_Write(0x03);  
 486              		.loc 1 207 0
 487 02ca 0320     		movs	r0, #3
 488 02cc FFF7FEFF 		bl	CtrlReg_PWMOut_Write
 208:main.c        ****             
 209:main.c        ****             pwmCntLocal = pwmCnt;
 489              		.loc 1 209 0
 490 02d0 1623     		movs	r3, #22
 491 02d2 1022     		movs	r2, #16
 492 02d4 9446     		mov	ip, r2
 493 02d6 BC44     		add	ip, ip, r7
 494 02d8 6344     		add	r3, r3, ip
 495 02da 1F4A     		ldr	r2, .L39+28
 496 02dc 1288     		ldrh	r2, [r2]
 497 02de 1A80     		strh	r2, [r3]
 210:main.c        ****             
 211:main.c        **** 
 212:main.c        ****             /* Update every 12.5mS*/
 213:main.c        ****            	if((pwmCntLocal & 0xff) == 0xff) /*if the number of PWM periods is 256, this if code ru
 498              		.loc 1 213 0
 499 02e0 1623     		movs	r3, #22
 500 02e2 1022     		movs	r2, #16
 501 02e4 9446     		mov	ip, r2
 502 02e6 BC44     		add	ip, ip, r7
 503 02e8 6344     		add	r3, r3, ip
 504 02ea 1B88     		ldrh	r3, [r3]
 505 02ec FF22     		movs	r2, #255
 506 02ee 1340     		ands	r3, r2
 507 02f0 FF2B     		cmp	r3, #255
 508 02f2 00D0     		beq	.LCB389
 509 02f4 15E1     		b	.L24	@long jump
 510              	.LCB389:
 511              	.LBB2:
 214:main.c        ****     	    {
 215:main.c        ****                 pwmCntLocal++;
 512              		.loc 1 215 0
 513 02f6 1623     		movs	r3, #22
 514 02f8 1022     		movs	r2, #16
 515 02fa 9446     		mov	ip, r2
 516 02fc BC44     		add	ip, ip, r7
 517 02fe 6344     		add	r3, r3, ip
 518 0300 1A88     		ldrh	r2, [r3]
 519 0302 1623     		movs	r3, #22
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 14


 520 0304 1021     		movs	r1, #16
 521 0306 8C46     		mov	ip, r1
 522 0308 BC44     		add	ip, ip, r7
 523 030a 6344     		add	r3, r3, ip
 524 030c 0132     		adds	r2, r2, #1
 525 030e 1A80     		strh	r2, [r3]
 216:main.c        **** 
 217:main.c        ****                 uint32 temp = 0;
 526              		.loc 1 217 0
 527 0310 0023     		movs	r3, #0
 528 0312 3B62     		str	r3, [r7, #32]
 218:main.c        ****                 float64 temp2 = myAbs(UI_Data.angularPos);
 529              		.loc 1 218 0
 530 0314 0A4B     		ldr	r3, .L39+4
 531 0316 9869     		ldr	r0, [r3, #24]
 532 0318 D969     		ldr	r1, [r3, #28]
 533 031a 0022     		movs	r2, #0
 534 031c 0023     		movs	r3, #0
 535 031e FFF7FEFF 		bl	__aeabi_dcmplt
 536 0322 031E     		subs	r3, r0, #0
 537 0324 1ED0     		beq	.L38
 538              		.loc 1 218 0 is_stmt 0 discriminator 1
 539 0326 064B     		ldr	r3, .L39+4
 540 0328 9A69     		ldr	r2, [r3, #24]
 541 032a DB69     		ldr	r3, [r3, #28]
 542 032c 1100     		movs	r1, r2
 543 032e 0C00     		movs	r4, r1
 544 0330 8021     		movs	r1, #128
 545 0332 0906     		lsls	r1, r1, #24
 546 0334 5940     		eors	r1, r3
 547 0336 0D00     		movs	r5, r1
 548 0338 17E0     		b	.L27
 549              	.L40:
 550 033a C046     		.align	2
 551              	.L39:
 552 033c 00000000 		.word	UI_Cmd
 553 0340 00000000 		.word	UI_Data
 554 0344 00804640 		.word	1078362112
 555 0348 008046C0 		.word	-1069121536
 556 034c 000024C0 		.word	-1071382528
 557 0350 00002440 		.word	1076101120
 558 0354 00000000 		.word	errorState
 559 0358 00000000 		.word	pwmCnt
 560 035c 00000000 		.word	piOut
 561 0360 88130000 		.word	5000
 562              	.L38:
 563              		.loc 1 218 0 discriminator 2
 564 0364 7B4B     		ldr	r3, .L41
 565 0366 9C69     		ldr	r4, [r3, #24]
 566 0368 DD69     		ldr	r5, [r3, #28]
 567              	.L27:
 568              		.loc 1 218 0 discriminator 4
 569 036a 3C61     		str	r4, [r7, #16]
 570 036c 7D61     		str	r5, [r7, #20]
 219:main.c        ****                 
 220:main.c        ****                 #if NORMALCONTROL
 221:main.c        ****                 if ((UI_Data.programStateManchineState == 2) || (UI_Data.programStateManchineState 
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 15


 571              		.loc 1 221 0 is_stmt 1 discriminator 4
 572 036e 794B     		ldr	r3, .L41
 573 0370 2322     		movs	r2, #35
 574 0372 9B5C     		ldrb	r3, [r3, r2]
 575 0374 022B     		cmp	r3, #2
 576 0376 04D0     		beq	.L28
 577              		.loc 1 221 0 is_stmt 0 discriminator 1
 578 0378 764B     		ldr	r3, .L41
 579 037a 2322     		movs	r2, #35
 580 037c 9B5C     		ldrb	r3, [r3, r2]
 581 037e 062B     		cmp	r3, #6
 582 0380 4AD1     		bne	.L29
 583              	.L28:
 222:main.c        ****                     temp = (uint32) ((float)UI_Data.speedRpmRef * ((float)UI_Data.gearRatio) * (1.0
 584              		.loc 1 222 0 is_stmt 1
 585 0382 744B     		ldr	r3, .L41
 586 0384 5B89     		ldrh	r3, [r3, #10]
 587 0386 1800     		movs	r0, r3
 588 0388 FFF7FEFF 		bl	__aeabi_ui2f
 589 038c 061C     		adds	r6, r0, #0
 590 038e 714B     		ldr	r3, .L41
 591 0390 DB88     		ldrh	r3, [r3, #6]
 592 0392 1800     		movs	r0, r3
 593 0394 FFF7FEFF 		bl	__aeabi_ui2f
 594 0398 031C     		adds	r3, r0, #0
 595 039a 191C     		adds	r1, r3, #0
 596 039c 301C     		adds	r0, r6, #0
 597 039e FFF7FEFF 		bl	__aeabi_fmul
 598 03a2 031C     		adds	r3, r0, #0
 599 03a4 181C     		adds	r0, r3, #0
 600 03a6 FFF7FEFF 		bl	__aeabi_f2d
 601 03aa B860     		str	r0, [r7, #8]
 602 03ac F960     		str	r1, [r7, #12]
 603 03ae 694B     		ldr	r3, .L41
 604 03b0 5B6A     		ldr	r3, [r3, #36]
 605 03b2 181C     		adds	r0, r3, #0
 606 03b4 FFF7FEFF 		bl	__aeabi_f2d
 607 03b8 0200     		movs	r2, r0
 608 03ba 0B00     		movs	r3, r1
 609 03bc 3869     		ldr	r0, [r7, #16]
 610 03be 7969     		ldr	r1, [r7, #20]
 611 03c0 FFF7FEFF 		bl	__aeabi_dsub
 612 03c4 0200     		movs	r2, r0
 613 03c6 0B00     		movs	r3, r1
 614 03c8 3A60     		str	r2, [r7]
 615 03ca 7B60     		str	r3, [r7, #4]
 616 03cc 614B     		ldr	r3, .L41
 617 03ce 5B6A     		ldr	r3, [r3, #36]
 618 03d0 181C     		adds	r0, r3, #0
 619 03d2 FFF7FEFF 		bl	__aeabi_f2d
 620 03d6 0200     		movs	r2, r0
 621 03d8 0B00     		movs	r3, r1
 622 03da 0020     		movs	r0, #0
 623 03dc 5E49     		ldr	r1, .L41+4
 624 03de FFF7FEFF 		bl	__aeabi_dsub
 625 03e2 0200     		movs	r2, r0
 626 03e4 0B00     		movs	r3, r1
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 16


 627 03e6 3868     		ldr	r0, [r7]
 628 03e8 7968     		ldr	r1, [r7, #4]
 629 03ea FFF7FEFF 		bl	__aeabi_ddiv
 630 03ee 0200     		movs	r2, r0
 631 03f0 0B00     		movs	r3, r1
 632 03f2 0020     		movs	r0, #0
 633 03f4 5949     		ldr	r1, .L41+8
 634 03f6 FFF7FEFF 		bl	__aeabi_dsub
 635 03fa 0200     		movs	r2, r0
 636 03fc 0B00     		movs	r3, r1
 637 03fe B868     		ldr	r0, [r7, #8]
 638 0400 F968     		ldr	r1, [r7, #12]
 639 0402 FFF7FEFF 		bl	__aeabi_dmul
 640 0406 0200     		movs	r2, r0
 641 0408 0B00     		movs	r3, r1
 642 040a 1000     		movs	r0, r2
 643 040c 1900     		movs	r1, r3
 644 040e FFF7FEFF 		bl	__aeabi_d2uiz
 645 0412 0300     		movs	r3, r0
 646 0414 3B62     		str	r3, [r7, #32]
 647 0416 5BE0     		b	.L30
 648              	.L29:
 223:main.c        ****                 }
 224:main.c        ****                 else if ((UI_Data.programStateManchineState == 4) || (UI_Data.programStateManchineS
 649              		.loc 1 224 0
 650 0418 4E4B     		ldr	r3, .L41
 651 041a 2322     		movs	r2, #35
 652 041c 9B5C     		ldrb	r3, [r3, r2]
 653 041e 042B     		cmp	r3, #4
 654 0420 04D0     		beq	.L31
 655              		.loc 1 224 0 is_stmt 0 discriminator 1
 656 0422 4C4B     		ldr	r3, .L41
 657 0424 2322     		movs	r2, #35
 658 0426 9B5C     		ldrb	r3, [r3, r2]
 659 0428 082B     		cmp	r3, #8
 660 042a 4AD1     		bne	.L32
 661              	.L31:
 225:main.c        ****                     temp = (uint32) ((float)UI_Data.speedRpmRef * ((float)UI_Data.gearRatio) * (1.0
 662              		.loc 1 225 0 is_stmt 1
 663 042c 494B     		ldr	r3, .L41
 664 042e 5B89     		ldrh	r3, [r3, #10]
 665 0430 1800     		movs	r0, r3
 666 0432 FFF7FEFF 		bl	__aeabi_ui2f
 667 0436 061C     		adds	r6, r0, #0
 668 0438 464B     		ldr	r3, .L41
 669 043a DB88     		ldrh	r3, [r3, #6]
 670 043c 1800     		movs	r0, r3
 671 043e FFF7FEFF 		bl	__aeabi_ui2f
 672 0442 031C     		adds	r3, r0, #0
 673 0444 191C     		adds	r1, r3, #0
 674 0446 301C     		adds	r0, r6, #0
 675 0448 FFF7FEFF 		bl	__aeabi_fmul
 676 044c 031C     		adds	r3, r0, #0
 677 044e 181C     		adds	r0, r3, #0
 678 0450 FFF7FEFF 		bl	__aeabi_f2d
 679 0454 B860     		str	r0, [r7, #8]
 680 0456 F960     		str	r1, [r7, #12]
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 17


 681 0458 3E4B     		ldr	r3, .L41
 682 045a 5B6A     		ldr	r3, [r3, #36]
 683 045c 181C     		adds	r0, r3, #0
 684 045e FFF7FEFF 		bl	__aeabi_f2d
 685 0462 0200     		movs	r2, r0
 686 0464 0B00     		movs	r3, r1
 687 0466 3869     		ldr	r0, [r7, #16]
 688 0468 7969     		ldr	r1, [r7, #20]
 689 046a FFF7FEFF 		bl	__aeabi_dsub
 690 046e 0200     		movs	r2, r0
 691 0470 0B00     		movs	r3, r1
 692 0472 3A60     		str	r2, [r7]
 693 0474 7B60     		str	r3, [r7, #4]
 694 0476 374B     		ldr	r3, .L41
 695 0478 5B6A     		ldr	r3, [r3, #36]
 696 047a 181C     		adds	r0, r3, #0
 697 047c FFF7FEFF 		bl	__aeabi_f2d
 698 0480 0200     		movs	r2, r0
 699 0482 0B00     		movs	r3, r1
 700 0484 0020     		movs	r0, #0
 701 0486 3449     		ldr	r1, .L41+4
 702 0488 FFF7FEFF 		bl	__aeabi_dsub
 703 048c 0200     		movs	r2, r0
 704 048e 0B00     		movs	r3, r1
 705 0490 3868     		ldr	r0, [r7]
 706 0492 7968     		ldr	r1, [r7, #4]
 707 0494 FFF7FEFF 		bl	__aeabi_ddiv
 708 0498 0200     		movs	r2, r0
 709 049a 0B00     		movs	r3, r1
 710 049c 0020     		movs	r0, #0
 711 049e 2F49     		ldr	r1, .L41+8
 712 04a0 FFF7FEFF 		bl	__aeabi_dsub
 713 04a4 0200     		movs	r2, r0
 714 04a6 0B00     		movs	r3, r1
 715 04a8 B868     		ldr	r0, [r7, #8]
 716 04aa F968     		ldr	r1, [r7, #12]
 717 04ac FFF7FEFF 		bl	__aeabi_dmul
 718 04b0 0200     		movs	r2, r0
 719 04b2 0B00     		movs	r3, r1
 720 04b4 1000     		movs	r0, r2
 721 04b6 1900     		movs	r1, r3
 722 04b8 FFF7FEFF 		bl	__aeabi_d2uiz
 723 04bc 0300     		movs	r3, r0
 724 04be 3B62     		str	r3, [r7, #32]
 725 04c0 06E0     		b	.L30
 726              	.L32:
 226:main.c        ****                 } else {
 227:main.c        ****                     temp = (uint32) (UI_Data.speedRpmRef * UI_Data.gearRatio);
 727              		.loc 1 227 0
 728 04c2 244B     		ldr	r3, .L41
 729 04c4 5B89     		ldrh	r3, [r3, #10]
 730 04c6 1A00     		movs	r2, r3
 731 04c8 224B     		ldr	r3, .L41
 732 04ca DB88     		ldrh	r3, [r3, #6]
 733 04cc 5343     		muls	r3, r2
 734 04ce 3B62     		str	r3, [r7, #32]
 735              	.L30:
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 18


 228:main.c        ****                 }
 229:main.c        ****                 
 230:main.c        **** //                if (temp <= 10) {temp = 10;}
 231:main.c        **** //                if (temp >= 500) {temp = 500;}
 232:main.c        ****                 #else
 233:main.c        **** //                if (temp2 >= 200.0){temp = 400;} else {temp = 300;};
 234:main.c        ****                 temp = 200;
 235:main.c        ****                 #endif
 236:main.c        ****                 
 237:main.c        ****                 
 238:main.c        ****                 speedRef = (60*FREQ_CAPTURE_CLK)/(uint32)(MOTOR_POLE_PAIRS*temp);
 736              		.loc 1 238 0
 737 04d0 3B6A     		ldr	r3, [r7, #32]
 738 04d2 9B00     		lsls	r3, r3, #2
 739 04d4 1900     		movs	r1, r3
 740 04d6 2248     		ldr	r0, .L41+12
 741 04d8 FFF7FEFF 		bl	__aeabi_uidiv
 742 04dc 0300     		movs	r3, r0
 743 04de 9AB2     		uxth	r2, r3
 744 04e0 204B     		ldr	r3, .L41+16
 745 04e2 1A80     		strh	r2, [r3]
 239:main.c        ****     			UI_Data.test = (uint16) temp;
 746              		.loc 1 239 0
 747 04e4 3B6A     		ldr	r3, [r7, #32]
 748 04e6 1AB2     		sxth	r2, r3
 749 04e8 1A4B     		ldr	r3, .L41
 750 04ea 1A80     		strh	r2, [r3]
 240:main.c        ****                 
 241:main.c        ****                 if(UI_Cmd.run == TRUE)
 751              		.loc 1 241 0
 752 04ec 1E4B     		ldr	r3, .L41+20
 753 04ee 1B78     		ldrb	r3, [r3]
 754 04f0 012B     		cmp	r3, #1
 755 04f2 01D1     		bne	.L33
 242:main.c        ****                 {
 243:main.c        ****                 /*Speed close loop control */            
 244:main.c        ****                 	SpeedPID();  
 756              		.loc 1 244 0
 757 04f4 FFF7FEFF 		bl	SpeedPID
 758              	.L33:
 245:main.c        ****                 }	 
 246:main.c        ****     			
 247:main.c        ****                 /* Hall Error Detection*/
 248:main.c        ****                 HallReader  = Hall_Error_Read();
 759              		.loc 1 248 0
 760 04f8 0F23     		movs	r3, #15
 761 04fa 1022     		movs	r2, #16
 762 04fc BA18     		adds	r2, r7, r2
 763 04fe D618     		adds	r6, r2, r3
 764 0500 FFF7FEFF 		bl	Hall_Error_Read
 765 0504 0300     		movs	r3, r0
 766 0506 3370     		strb	r3, [r6]
 249:main.c        ****                 if(HallReader == TRUE)
 767              		.loc 1 249 0
 768 0508 0F23     		movs	r3, #15
 769 050a 1022     		movs	r2, #16
 770 050c 9446     		mov	ip, r2
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 19


 771 050e BC44     		add	ip, ip, r7
 772 0510 6344     		add	r3, r3, ip
 773 0512 1B78     		ldrb	r3, [r3]
 774 0514 012B     		cmp	r3, #1
 775 0516 04D1     		bne	.L24
 250:main.c        ****                 {               
 251:main.c        ****     				errorState = hallError;
 776              		.loc 1 251 0
 777 0518 144B     		ldr	r3, .L41+24
 778 051a 0222     		movs	r2, #2
 779 051c 1A70     		strb	r2, [r3]
 252:main.c        ****                 	UpdateStatusError();
 780              		.loc 1 252 0
 781 051e FFF7FEFF 		bl	UpdateStatusError
 782              	.L24:
 783              	.LBE2:
 253:main.c        ****                 }			
 254:main.c        ****     		}
 255:main.c        ****             
 256:main.c        ****             if(pwmCntLocal >= 500) {
 784              		.loc 1 256 0
 785 0522 1623     		movs	r3, #22
 786 0524 1022     		movs	r2, #16
 787 0526 9446     		mov	ip, r2
 788 0528 BC44     		add	ip, ip, r7
 789 052a 6344     		add	r3, r3, ip
 790 052c 1A88     		ldrh	r2, [r3]
 791 052e F423     		movs	r3, #244
 792 0530 FF33     		adds	r3, r3, #255
 793 0532 9A42     		cmp	r2, r3
 794 0534 02D9     		bls	.L34
 257:main.c        ****                 UI_Data.motorWindupOvercurrentDisable = 0; //enable overcurrent protection
 795              		.loc 1 257 0
 796 0536 074B     		ldr	r3, .L41
 797 0538 0022     		movs	r2, #0
 798 053a 1A85     		strh	r2, [r3, #40]
 799              	.L34:
 258:main.c        ****             }
 259:main.c        ****             
 260:main.c        ****             pwmCnt = pwmCntLocal;
 800              		.loc 1 260 0
 801 053c 0C4B     		ldr	r3, .L41+28
 802 053e 1622     		movs	r2, #22
 803 0540 1021     		movs	r1, #16
 804 0542 8C46     		mov	ip, r1
 805 0544 BC44     		add	ip, ip, r7
 806 0546 6244     		add	r2, r2, ip
 807 0548 1288     		ldrh	r2, [r2]
 808 054a 1A80     		strh	r2, [r3]
 809 054c 01E0     		b	.L35
 810              	.L23:
 261:main.c        ****         }	
 262:main.c        ****         
 263:main.c        ****         /* Motor Not Running */
 264:main.c        ****         else {
 265:main.c        ****             BCPRxPoll();
 811              		.loc 1 265 0
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 20


 812 054e FFF7FEFF 		bl	BCPRxPoll
 813              	.L35:
 266:main.c        ****         }
 267:main.c        ****     }
 814              		.loc 1 267 0
 815 0552 76E5     		b	.L36
 816              	.L42:
 817              		.align	2
 818              	.L41:
 819 0554 00000000 		.word	UI_Data
 820 0558 00804640 		.word	1078362112
 821 055c 0000F03F 		.word	1072693248
 822 0560 808D5B00 		.word	6000000
 823 0564 00000000 		.word	speedRef
 824 0568 00000000 		.word	UI_Cmd
 825 056c 00000000 		.word	errorState
 826 0570 00000000 		.word	pwmCnt
 827              		.cfi_endproc
 828              	.LFE32:
 829              		.size	main, .-main
 830              		.text
 831              	.Letext0:
 832              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 833              		.file 3 "motor.h"
 834              		.file 4 "speed.h"
 835              		.section	.debug_info,"",%progbits
 836              	.Ldebug_info0:
 837 0000 CD020000 		.4byte	0x2cd
 838 0004 0400     		.2byte	0x4
 839 0006 00000000 		.4byte	.Ldebug_abbrev0
 840 000a 04       		.byte	0x4
 841 000b 01       		.uleb128 0x1
 842 000c 0F010000 		.4byte	.LASF56
 843 0010 0C       		.byte	0xc
 844 0011 7C020000 		.4byte	.LASF57
 845 0015 38020000 		.4byte	.LASF58
 846 0019 00000000 		.4byte	.Ldebug_ranges0+0
 847 001d 00000000 		.4byte	0
 848 0021 00000000 		.4byte	.Ldebug_line0
 849 0025 02       		.uleb128 0x2
 850 0026 01       		.byte	0x1
 851 0027 06       		.byte	0x6
 852 0028 CF010000 		.4byte	.LASF0
 853 002c 02       		.uleb128 0x2
 854 002d 01       		.byte	0x1
 855 002e 08       		.byte	0x8
 856 002f B5010000 		.4byte	.LASF1
 857 0033 02       		.uleb128 0x2
 858 0034 02       		.byte	0x2
 859 0035 05       		.byte	0x5
 860 0036 39000000 		.4byte	.LASF2
 861 003a 02       		.uleb128 0x2
 862 003b 02       		.byte	0x2
 863 003c 07       		.byte	0x7
 864 003d 06020000 		.4byte	.LASF3
 865 0041 02       		.uleb128 0x2
 866 0042 04       		.byte	0x4
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 21


 867 0043 05       		.byte	0x5
 868 0044 06010000 		.4byte	.LASF4
 869 0048 02       		.uleb128 0x2
 870 0049 04       		.byte	0x4
 871 004a 07       		.byte	0x7
 872 004b 83020000 		.4byte	.LASF5
 873 004f 02       		.uleb128 0x2
 874 0050 08       		.byte	0x8
 875 0051 05       		.byte	0x5
 876 0052 F8000000 		.4byte	.LASF6
 877 0056 02       		.uleb128 0x2
 878 0057 08       		.byte	0x8
 879 0058 07       		.byte	0x7
 880 0059 DB010000 		.4byte	.LASF7
 881 005d 03       		.uleb128 0x3
 882 005e 04       		.byte	0x4
 883 005f 05       		.byte	0x5
 884 0060 696E7400 		.ascii	"int\000"
 885 0064 02       		.uleb128 0x2
 886 0065 04       		.byte	0x4
 887 0066 07       		.byte	0x7
 888 0067 F2010000 		.4byte	.LASF8
 889 006b 04       		.uleb128 0x4
 890 006c 9C000000 		.4byte	.LASF9
 891 0070 02       		.byte	0x2
 892 0071 E401     		.2byte	0x1e4
 893 0073 2C000000 		.4byte	0x2c
 894 0077 04       		.uleb128 0x4
 895 0078 7B000000 		.4byte	.LASF10
 896 007c 02       		.byte	0x2
 897 007d E501     		.2byte	0x1e5
 898 007f 3A000000 		.4byte	0x3a
 899 0083 04       		.uleb128 0x4
 900 0084 75020000 		.4byte	.LASF11
 901 0088 02       		.byte	0x2
 902 0089 E601     		.2byte	0x1e6
 903 008b 48000000 		.4byte	0x48
 904 008f 04       		.uleb128 0x4
 905 0090 96000000 		.4byte	.LASF12
 906 0094 02       		.byte	0x2
 907 0095 E801     		.2byte	0x1e8
 908 0097 33000000 		.4byte	0x33
 909 009b 04       		.uleb128 0x4
 910 009c 1A000000 		.4byte	.LASF13
 911 00a0 02       		.byte	0x2
 912 00a1 EA01     		.2byte	0x1ea
 913 00a3 A7000000 		.4byte	0xa7
 914 00a7 02       		.uleb128 0x2
 915 00a8 04       		.byte	0x4
 916 00a9 04       		.byte	0x4
 917 00aa D5000000 		.4byte	.LASF14
 918 00ae 04       		.uleb128 0x4
 919 00af AD020000 		.4byte	.LASF15
 920 00b3 02       		.byte	0x2
 921 00b4 EE01     		.2byte	0x1ee
 922 00b6 BA000000 		.4byte	0xba
 923 00ba 02       		.uleb128 0x2
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 22


 924 00bb 08       		.byte	0x8
 925 00bc 04       		.byte	0x4
 926 00bd 95020000 		.4byte	.LASF16
 927 00c1 02       		.uleb128 0x2
 928 00c2 01       		.byte	0x1
 929 00c3 08       		.byte	0x8
 930 00c4 23020000 		.4byte	.LASF17
 931 00c8 02       		.uleb128 0x2
 932 00c9 08       		.byte	0x8
 933 00ca 04       		.byte	0x4
 934 00cb A9010000 		.4byte	.LASF18
 935 00cf 02       		.uleb128 0x2
 936 00d0 04       		.byte	0x4
 937 00d1 07       		.byte	0x7
 938 00d2 43000000 		.4byte	.LASF19
 939 00d6 05       		.uleb128 0x5
 940 00d7 01       		.byte	0x1
 941 00d8 03       		.byte	0x3
 942 00d9 49       		.byte	0x49
 943 00da EB000000 		.4byte	0xeb
 944 00de 06       		.uleb128 0x6
 945 00df 72756E00 		.ascii	"run\000"
 946 00e3 03       		.byte	0x3
 947 00e4 4B       		.byte	0x4b
 948 00e5 6B000000 		.4byte	0x6b
 949 00e9 00       		.byte	0
 950 00ea 00       		.byte	0
 951 00eb 07       		.uleb128 0x7
 952 00ec 74000000 		.4byte	.LASF20
 953 00f0 03       		.byte	0x3
 954 00f1 4C       		.byte	0x4c
 955 00f2 D6000000 		.4byte	0xd6
 956 00f6 05       		.uleb128 0x5
 957 00f7 30       		.byte	0x30
 958 00f8 03       		.byte	0x3
 959 00f9 4F       		.byte	0x4f
 960 00fa E1010000 		.4byte	0x1e1
 961 00fe 08       		.uleb128 0x8
 962 00ff 70020000 		.4byte	.LASF21
 963 0103 03       		.byte	0x3
 964 0104 51       		.byte	0x51
 965 0105 8F000000 		.4byte	0x8f
 966 0109 00       		.byte	0
 967 010a 08       		.uleb128 0x8
 968 010b A2000000 		.4byte	.LASF22
 969 010f 03       		.byte	0x3
 970 0110 52       		.byte	0x52
 971 0111 8F000000 		.4byte	0x8f
 972 0115 02       		.byte	0x2
 973 0116 06       		.uleb128 0x6
 974 0117 44697200 		.ascii	"Dir\000"
 975 011b 03       		.byte	0x3
 976 011c 54       		.byte	0x54
 977 011d 6B000000 		.4byte	0x6b
 978 0121 04       		.byte	0x4
 979 0122 08       		.uleb128 0x8
 980 0123 E3000000 		.4byte	.LASF23
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 23


 981 0127 03       		.byte	0x3
 982 0128 56       		.byte	0x56
 983 0129 77000000 		.4byte	0x77
 984 012d 06       		.byte	0x6
 985 012e 08       		.uleb128 0x8
 986 012f FE020000 		.4byte	.LASF24
 987 0133 03       		.byte	0x3
 988 0134 57       		.byte	0x57
 989 0135 77000000 		.4byte	0x77
 990 0139 08       		.byte	0x8
 991 013a 08       		.uleb128 0x8
 992 013b 9D010000 		.4byte	.LASF25
 993 013f 03       		.byte	0x3
 994 0140 58       		.byte	0x58
 995 0141 77000000 		.4byte	0x77
 996 0145 0A       		.byte	0xa
 997 0146 06       		.uleb128 0x6
 998 0147 6B7000   		.ascii	"kp\000"
 999 014a 03       		.byte	0x3
 1000 014b 5A       		.byte	0x5a
 1001 014c 77000000 		.4byte	0x77
 1002 0150 0C       		.byte	0xc
 1003 0151 06       		.uleb128 0x6
 1004 0152 6B6900   		.ascii	"ki\000"
 1005 0155 03       		.byte	0x3
 1006 0156 5B       		.byte	0x5b
 1007 0157 77000000 		.4byte	0x77
 1008 015b 0E       		.byte	0xe
 1009 015c 08       		.uleb128 0x8
 1010 015d 4C000000 		.4byte	.LASF26
 1011 0161 03       		.byte	0x3
 1012 0162 5D       		.byte	0x5d
 1013 0163 77000000 		.4byte	0x77
 1014 0167 10       		.byte	0x10
 1015 0168 08       		.uleb128 0x8
 1016 0169 C3010000 		.4byte	.LASF27
 1017 016d 03       		.byte	0x3
 1018 016e 5E       		.byte	0x5e
 1019 016f 77000000 		.4byte	0x77
 1020 0173 12       		.byte	0x12
 1021 0174 08       		.uleb128 0x8
 1022 0175 19020000 		.4byte	.LASF28
 1023 0179 03       		.byte	0x3
 1024 017a 5F       		.byte	0x5f
 1025 017b 6B000000 		.4byte	0x6b
 1026 017f 14       		.byte	0x14
 1027 0180 08       		.uleb128 0x8
 1028 0181 C6000000 		.4byte	.LASF29
 1029 0185 03       		.byte	0x3
 1030 0186 60       		.byte	0x60
 1031 0187 6B000000 		.4byte	0x6b
 1032 018b 15       		.byte	0x15
 1033 018c 08       		.uleb128 0x8
 1034 018d E7020000 		.4byte	.LASF30
 1035 0191 03       		.byte	0x3
 1036 0192 62       		.byte	0x62
 1037 0193 77000000 		.4byte	0x77
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 24


 1038 0197 16       		.byte	0x16
 1039 0198 08       		.uleb128 0x8
 1040 0199 2D020000 		.4byte	.LASF31
 1041 019d 03       		.byte	0x3
 1042 019e 63       		.byte	0x63
 1043 019f AE000000 		.4byte	0xae
 1044 01a3 18       		.byte	0x18
 1045 01a4 08       		.uleb128 0x8
 1046 01a5 00000000 		.4byte	.LASF32
 1047 01a9 03       		.byte	0x3
 1048 01aa 64       		.byte	0x64
 1049 01ab 8F000000 		.4byte	0x8f
 1050 01af 20       		.byte	0x20
 1051 01b0 08       		.uleb128 0x8
 1052 01b1 0A000000 		.4byte	.LASF33
 1053 01b5 03       		.byte	0x3
 1054 01b6 65       		.byte	0x65
 1055 01b7 6B000000 		.4byte	0x6b
 1056 01bb 22       		.byte	0x22
 1057 01bc 08       		.uleb128 0x8
 1058 01bd 07030000 		.4byte	.LASF34
 1059 01c1 03       		.byte	0x3
 1060 01c2 66       		.byte	0x66
 1061 01c3 6B000000 		.4byte	0x6b
 1062 01c7 23       		.byte	0x23
 1063 01c8 08       		.uleb128 0x8
 1064 01c9 28000000 		.4byte	.LASF35
 1065 01cd 03       		.byte	0x3
 1066 01ce 67       		.byte	0x67
 1067 01cf 9B000000 		.4byte	0x9b
 1068 01d3 24       		.byte	0x24
 1069 01d4 08       		.uleb128 0x8
 1070 01d5 A8000000 		.4byte	.LASF36
 1071 01d9 03       		.byte	0x3
 1072 01da 69       		.byte	0x69
 1073 01db 77000000 		.4byte	0x77
 1074 01df 28       		.byte	0x28
 1075 01e0 00       		.byte	0
 1076 01e1 07       		.uleb128 0x7
 1077 01e2 82000000 		.4byte	.LASF37
 1078 01e6 03       		.byte	0x3
 1079 01e7 6A       		.byte	0x6a
 1080 01e8 F6000000 		.4byte	0xf6
 1081 01ec 09       		.uleb128 0x9
 1082 01ed CE000000 		.4byte	.LASF59
 1083 01f1 01       		.byte	0x1
 1084 01f2 2C000000 		.4byte	0x2c
 1085 01f6 03       		.byte	0x3
 1086 01f7 6E       		.byte	0x6e
 1087 01f8 27020000 		.4byte	0x227
 1088 01fc 0A       		.uleb128 0xa
 1089 01fd C4020000 		.4byte	.LASF38
 1090 0201 00       		.byte	0
 1091 0202 0A       		.uleb128 0xa
 1092 0203 DB000000 		.4byte	.LASF39
 1093 0207 01       		.byte	0x1
 1094 0208 0A       		.uleb128 0xa
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 25


 1095 0209 58000000 		.4byte	.LASF40
 1096 020d 02       		.byte	0x2
 1097 020e 0A       		.uleb128 0xa
 1098 020f 9C020000 		.4byte	.LASF41
 1099 0213 03       		.byte	0x3
 1100 0214 0A       		.uleb128 0xa
 1101 0215 BB020000 		.4byte	.LASF42
 1102 0219 04       		.byte	0x4
 1103 021a 0A       		.uleb128 0xa
 1104 021b A4020000 		.4byte	.LASF43
 1105 021f 05       		.byte	0x5
 1106 0220 0A       		.uleb128 0xa
 1107 0221 CD020000 		.4byte	.LASF44
 1108 0225 06       		.byte	0x6
 1109 0226 00       		.byte	0
 1110 0227 07       		.uleb128 0x7
 1111 0228 DF020000 		.4byte	.LASF45
 1112 022c 03       		.byte	0x3
 1113 022d 76       		.byte	0x76
 1114 022e EC010000 		.4byte	0x1ec
 1115 0232 0B       		.uleb128 0xb
 1116 0233 28020000 		.4byte	.LASF60
 1117 0237 01       		.byte	0x1
 1118 0238 36       		.byte	0x36
 1119 0239 5D000000 		.4byte	0x5d
 1120 023d 00000000 		.4byte	.LFB32
 1121 0241 74050000 		.4byte	.LFE32-.LFB32
 1122 0245 01       		.uleb128 0x1
 1123 0246 9C       		.byte	0x9c
 1124 0247 8E020000 		.4byte	0x28e
 1125 024b 0C       		.uleb128 0xc
 1126 024c 62000000 		.4byte	.LASF46
 1127 0250 01       		.byte	0x1
 1128 0251 38       		.byte	0x38
 1129 0252 6B000000 		.4byte	0x6b
 1130 0256 02       		.uleb128 0x2
 1131 0257 91       		.byte	0x91
 1132 0258 5F       		.sleb128 -33
 1133 0259 0C       		.uleb128 0xc
 1134 025a 8A000000 		.4byte	.LASF47
 1135 025e 01       		.byte	0x1
 1136 025f 39       		.byte	0x39
 1137 0260 77000000 		.4byte	0x77
 1138 0264 02       		.uleb128 0x2
 1139 0265 91       		.byte	0x91
 1140 0266 66       		.sleb128 -26
 1141 0267 0D       		.uleb128 0xd
 1142 0268 F6020000 		.4byte	.LBB2
 1143 026c 2C020000 		.4byte	.LBE2-.LBB2
 1144 0270 0C       		.uleb128 0xc
 1145 0271 34000000 		.4byte	.LASF48
 1146 0275 01       		.byte	0x1
 1147 0276 D9       		.byte	0xd9
 1148 0277 83000000 		.4byte	0x83
 1149 027b 02       		.uleb128 0x2
 1150 027c 91       		.byte	0x91
 1151 027d 60       		.sleb128 -32
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 26


 1152 027e 0C       		.uleb128 0xc
 1153 027f B5020000 		.4byte	.LASF49
 1154 0283 01       		.byte	0x1
 1155 0284 DA       		.byte	0xda
 1156 0285 AE000000 		.4byte	0xae
 1157 0289 02       		.uleb128 0x2
 1158 028a 91       		.byte	0x91
 1159 028b 50       		.sleb128 -48
 1160 028c 00       		.byte	0
 1161 028d 00       		.byte	0
 1162 028e 0E       		.uleb128 0xe
 1163 028f ED000000 		.4byte	.LASF50
 1164 0293 03       		.byte	0x3
 1165 0294 78       		.byte	0x78
 1166 0295 27020000 		.4byte	0x227
 1167 0299 0E       		.uleb128 0xe
 1168 029a 6D000000 		.4byte	.LASF51
 1169 029e 03       		.byte	0x3
 1170 029f 79       		.byte	0x79
 1171 02a0 EB000000 		.4byte	0xeb
 1172 02a4 0E       		.uleb128 0xe
 1173 02a5 68020000 		.4byte	.LASF52
 1174 02a9 03       		.byte	0x3
 1175 02aa 7A       		.byte	0x7a
 1176 02ab E1010000 		.4byte	0x1e1
 1177 02af 0E       		.uleb128 0xe
 1178 02b0 21030000 		.4byte	.LASF53
 1179 02b4 03       		.byte	0x3
 1180 02b5 7E       		.byte	0x7e
 1181 02b6 77000000 		.4byte	0x77
 1182 02ba 0E       		.uleb128 0xe
 1183 02bb FF010000 		.4byte	.LASF54
 1184 02bf 03       		.byte	0x3
 1185 02c0 88       		.byte	0x88
 1186 02c1 77000000 		.4byte	0x77
 1187 02c5 0E       		.uleb128 0xe
 1188 02c6 22000000 		.4byte	.LASF55
 1189 02ca 04       		.byte	0x4
 1190 02cb 34       		.byte	0x34
 1191 02cc 41000000 		.4byte	0x41
 1192 02d0 00       		.byte	0
 1193              		.section	.debug_abbrev,"",%progbits
 1194              	.Ldebug_abbrev0:
 1195 0000 01       		.uleb128 0x1
 1196 0001 11       		.uleb128 0x11
 1197 0002 01       		.byte	0x1
 1198 0003 25       		.uleb128 0x25
 1199 0004 0E       		.uleb128 0xe
 1200 0005 13       		.uleb128 0x13
 1201 0006 0B       		.uleb128 0xb
 1202 0007 03       		.uleb128 0x3
 1203 0008 0E       		.uleb128 0xe
 1204 0009 1B       		.uleb128 0x1b
 1205 000a 0E       		.uleb128 0xe
 1206 000b 55       		.uleb128 0x55
 1207 000c 17       		.uleb128 0x17
 1208 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 27


 1209 000e 01       		.uleb128 0x1
 1210 000f 10       		.uleb128 0x10
 1211 0010 17       		.uleb128 0x17
 1212 0011 00       		.byte	0
 1213 0012 00       		.byte	0
 1214 0013 02       		.uleb128 0x2
 1215 0014 24       		.uleb128 0x24
 1216 0015 00       		.byte	0
 1217 0016 0B       		.uleb128 0xb
 1218 0017 0B       		.uleb128 0xb
 1219 0018 3E       		.uleb128 0x3e
 1220 0019 0B       		.uleb128 0xb
 1221 001a 03       		.uleb128 0x3
 1222 001b 0E       		.uleb128 0xe
 1223 001c 00       		.byte	0
 1224 001d 00       		.byte	0
 1225 001e 03       		.uleb128 0x3
 1226 001f 24       		.uleb128 0x24
 1227 0020 00       		.byte	0
 1228 0021 0B       		.uleb128 0xb
 1229 0022 0B       		.uleb128 0xb
 1230 0023 3E       		.uleb128 0x3e
 1231 0024 0B       		.uleb128 0xb
 1232 0025 03       		.uleb128 0x3
 1233 0026 08       		.uleb128 0x8
 1234 0027 00       		.byte	0
 1235 0028 00       		.byte	0
 1236 0029 04       		.uleb128 0x4
 1237 002a 16       		.uleb128 0x16
 1238 002b 00       		.byte	0
 1239 002c 03       		.uleb128 0x3
 1240 002d 0E       		.uleb128 0xe
 1241 002e 3A       		.uleb128 0x3a
 1242 002f 0B       		.uleb128 0xb
 1243 0030 3B       		.uleb128 0x3b
 1244 0031 05       		.uleb128 0x5
 1245 0032 49       		.uleb128 0x49
 1246 0033 13       		.uleb128 0x13
 1247 0034 00       		.byte	0
 1248 0035 00       		.byte	0
 1249 0036 05       		.uleb128 0x5
 1250 0037 13       		.uleb128 0x13
 1251 0038 01       		.byte	0x1
 1252 0039 0B       		.uleb128 0xb
 1253 003a 0B       		.uleb128 0xb
 1254 003b 3A       		.uleb128 0x3a
 1255 003c 0B       		.uleb128 0xb
 1256 003d 3B       		.uleb128 0x3b
 1257 003e 0B       		.uleb128 0xb
 1258 003f 01       		.uleb128 0x1
 1259 0040 13       		.uleb128 0x13
 1260 0041 00       		.byte	0
 1261 0042 00       		.byte	0
 1262 0043 06       		.uleb128 0x6
 1263 0044 0D       		.uleb128 0xd
 1264 0045 00       		.byte	0
 1265 0046 03       		.uleb128 0x3
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 28


 1266 0047 08       		.uleb128 0x8
 1267 0048 3A       		.uleb128 0x3a
 1268 0049 0B       		.uleb128 0xb
 1269 004a 3B       		.uleb128 0x3b
 1270 004b 0B       		.uleb128 0xb
 1271 004c 49       		.uleb128 0x49
 1272 004d 13       		.uleb128 0x13
 1273 004e 38       		.uleb128 0x38
 1274 004f 0B       		.uleb128 0xb
 1275 0050 00       		.byte	0
 1276 0051 00       		.byte	0
 1277 0052 07       		.uleb128 0x7
 1278 0053 16       		.uleb128 0x16
 1279 0054 00       		.byte	0
 1280 0055 03       		.uleb128 0x3
 1281 0056 0E       		.uleb128 0xe
 1282 0057 3A       		.uleb128 0x3a
 1283 0058 0B       		.uleb128 0xb
 1284 0059 3B       		.uleb128 0x3b
 1285 005a 0B       		.uleb128 0xb
 1286 005b 49       		.uleb128 0x49
 1287 005c 13       		.uleb128 0x13
 1288 005d 00       		.byte	0
 1289 005e 00       		.byte	0
 1290 005f 08       		.uleb128 0x8
 1291 0060 0D       		.uleb128 0xd
 1292 0061 00       		.byte	0
 1293 0062 03       		.uleb128 0x3
 1294 0063 0E       		.uleb128 0xe
 1295 0064 3A       		.uleb128 0x3a
 1296 0065 0B       		.uleb128 0xb
 1297 0066 3B       		.uleb128 0x3b
 1298 0067 0B       		.uleb128 0xb
 1299 0068 49       		.uleb128 0x49
 1300 0069 13       		.uleb128 0x13
 1301 006a 38       		.uleb128 0x38
 1302 006b 0B       		.uleb128 0xb
 1303 006c 00       		.byte	0
 1304 006d 00       		.byte	0
 1305 006e 09       		.uleb128 0x9
 1306 006f 04       		.uleb128 0x4
 1307 0070 01       		.byte	0x1
 1308 0071 03       		.uleb128 0x3
 1309 0072 0E       		.uleb128 0xe
 1310 0073 0B       		.uleb128 0xb
 1311 0074 0B       		.uleb128 0xb
 1312 0075 49       		.uleb128 0x49
 1313 0076 13       		.uleb128 0x13
 1314 0077 3A       		.uleb128 0x3a
 1315 0078 0B       		.uleb128 0xb
 1316 0079 3B       		.uleb128 0x3b
 1317 007a 0B       		.uleb128 0xb
 1318 007b 01       		.uleb128 0x1
 1319 007c 13       		.uleb128 0x13
 1320 007d 00       		.byte	0
 1321 007e 00       		.byte	0
 1322 007f 0A       		.uleb128 0xa
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 29


 1323 0080 28       		.uleb128 0x28
 1324 0081 00       		.byte	0
 1325 0082 03       		.uleb128 0x3
 1326 0083 0E       		.uleb128 0xe
 1327 0084 1C       		.uleb128 0x1c
 1328 0085 0B       		.uleb128 0xb
 1329 0086 00       		.byte	0
 1330 0087 00       		.byte	0
 1331 0088 0B       		.uleb128 0xb
 1332 0089 2E       		.uleb128 0x2e
 1333 008a 01       		.byte	0x1
 1334 008b 3F       		.uleb128 0x3f
 1335 008c 19       		.uleb128 0x19
 1336 008d 03       		.uleb128 0x3
 1337 008e 0E       		.uleb128 0xe
 1338 008f 3A       		.uleb128 0x3a
 1339 0090 0B       		.uleb128 0xb
 1340 0091 3B       		.uleb128 0x3b
 1341 0092 0B       		.uleb128 0xb
 1342 0093 49       		.uleb128 0x49
 1343 0094 13       		.uleb128 0x13
 1344 0095 11       		.uleb128 0x11
 1345 0096 01       		.uleb128 0x1
 1346 0097 12       		.uleb128 0x12
 1347 0098 06       		.uleb128 0x6
 1348 0099 40       		.uleb128 0x40
 1349 009a 18       		.uleb128 0x18
 1350 009b 9642     		.uleb128 0x2116
 1351 009d 19       		.uleb128 0x19
 1352 009e 01       		.uleb128 0x1
 1353 009f 13       		.uleb128 0x13
 1354 00a0 00       		.byte	0
 1355 00a1 00       		.byte	0
 1356 00a2 0C       		.uleb128 0xc
 1357 00a3 34       		.uleb128 0x34
 1358 00a4 00       		.byte	0
 1359 00a5 03       		.uleb128 0x3
 1360 00a6 0E       		.uleb128 0xe
 1361 00a7 3A       		.uleb128 0x3a
 1362 00a8 0B       		.uleb128 0xb
 1363 00a9 3B       		.uleb128 0x3b
 1364 00aa 0B       		.uleb128 0xb
 1365 00ab 49       		.uleb128 0x49
 1366 00ac 13       		.uleb128 0x13
 1367 00ad 02       		.uleb128 0x2
 1368 00ae 18       		.uleb128 0x18
 1369 00af 00       		.byte	0
 1370 00b0 00       		.byte	0
 1371 00b1 0D       		.uleb128 0xd
 1372 00b2 0B       		.uleb128 0xb
 1373 00b3 01       		.byte	0x1
 1374 00b4 11       		.uleb128 0x11
 1375 00b5 01       		.uleb128 0x1
 1376 00b6 12       		.uleb128 0x12
 1377 00b7 06       		.uleb128 0x6
 1378 00b8 00       		.byte	0
 1379 00b9 00       		.byte	0
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 30


 1380 00ba 0E       		.uleb128 0xe
 1381 00bb 34       		.uleb128 0x34
 1382 00bc 00       		.byte	0
 1383 00bd 03       		.uleb128 0x3
 1384 00be 0E       		.uleb128 0xe
 1385 00bf 3A       		.uleb128 0x3a
 1386 00c0 0B       		.uleb128 0xb
 1387 00c1 3B       		.uleb128 0x3b
 1388 00c2 0B       		.uleb128 0xb
 1389 00c3 49       		.uleb128 0x49
 1390 00c4 13       		.uleb128 0x13
 1391 00c5 3F       		.uleb128 0x3f
 1392 00c6 19       		.uleb128 0x19
 1393 00c7 3C       		.uleb128 0x3c
 1394 00c8 19       		.uleb128 0x19
 1395 00c9 00       		.byte	0
 1396 00ca 00       		.byte	0
 1397 00cb 00       		.byte	0
 1398              		.section	.debug_aranges,"",%progbits
 1399 0000 1C000000 		.4byte	0x1c
 1400 0004 0200     		.2byte	0x2
 1401 0006 00000000 		.4byte	.Ldebug_info0
 1402 000a 04       		.byte	0x4
 1403 000b 00       		.byte	0
 1404 000c 0000     		.2byte	0
 1405 000e 0000     		.2byte	0
 1406 0010 00000000 		.4byte	.LFB32
 1407 0014 74050000 		.4byte	.LFE32-.LFB32
 1408 0018 00000000 		.4byte	0
 1409 001c 00000000 		.4byte	0
 1410              		.section	.debug_ranges,"",%progbits
 1411              	.Ldebug_ranges0:
 1412 0000 00000000 		.4byte	.LFB32
 1413 0004 74050000 		.4byte	.LFE32
 1414 0008 00000000 		.4byte	0
 1415 000c 00000000 		.4byte	0
 1416              		.section	.debug_line,"",%progbits
 1417              	.Ldebug_line0:
 1418 0000 2A010000 		.section	.debug_str,"MS",%progbits,1
 1418      02005700 
 1418      00000201 
 1418      FB0E0D00 
 1418      01010101 
 1419              	.LASF32:
 1420 0000 7370696E 		.ascii	"spinCount\000"
 1420      436F756E 
 1420      7400
 1421              	.LASF33:
 1422 000a 6368616E 		.ascii	"changeDirection\000"
 1422      67654469 
 1422      72656374 
 1422      696F6E00 
 1423              	.LASF13:
 1424 001a 666C6F61 		.ascii	"float32\000"
 1424      74333200 
 1425              	.LASF55:
 1426 0022 70694F75 		.ascii	"piOut\000"
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 31


 1426      7400
 1427              	.LASF35:
 1428 0028 73776974 		.ascii	"switchAngle\000"
 1428      6368416E 
 1428      676C6500 
 1429              	.LASF48:
 1430 0034 74656D70 		.ascii	"temp\000"
 1430      00
 1431              	.LASF2:
 1432 0039 73686F72 		.ascii	"short int\000"
 1432      7420696E 
 1432      7400
 1433              	.LASF19:
 1434 0043 73697A65 		.ascii	"sizetype\000"
 1434      74797065 
 1434      00
 1435              	.LASF26:
 1436 004c 6D617853 		.ascii	"maxSpeedRpm\000"
 1436      70656564 
 1436      52706D00 
 1437              	.LASF40:
 1438 0058 68616C6C 		.ascii	"hallError\000"
 1438      4572726F 
 1438      7200
 1439              	.LASF46:
 1440 0062 48616C6C 		.ascii	"HallReader\000"
 1440      52656164 
 1440      657200
 1441              	.LASF51:
 1442 006d 55495F43 		.ascii	"UI_Cmd\000"
 1442      6D6400
 1443              	.LASF20:
 1444 0074 55495F43 		.ascii	"UI_CMD\000"
 1444      4D4400
 1445              	.LASF10:
 1446 007b 75696E74 		.ascii	"uint16\000"
 1446      313600
 1447              	.LASF37:
 1448 0082 55495F44 		.ascii	"UI_DATA\000"
 1448      41544100 
 1449              	.LASF47:
 1450 008a 70776D43 		.ascii	"pwmCntLocal\000"
 1450      6E744C6F 
 1450      63616C00 
 1451              	.LASF12:
 1452 0096 696E7431 		.ascii	"int16\000"
 1452      3600
 1453              	.LASF9:
 1454 009c 75696E74 		.ascii	"uint8\000"
 1454      3800
 1455              	.LASF22:
 1456 00a2 74657374 		.ascii	"test2\000"
 1456      3200
 1457              	.LASF36:
 1458 00a8 6D6F746F 		.ascii	"motorWindupOvercurrentDisable\000"
 1458      7257696E 
 1458      6475704F 
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 32


 1458      76657263 
 1458      75727265 
 1459              	.LASF29:
 1460 00c6 6D617843 		.ascii	"maxCurr\000"
 1460      75727200 
 1461              	.LASF59:
 1462 00ce 5F457272 		.ascii	"_Error\000"
 1462      6F7200
 1463              	.LASF14:
 1464 00d5 666C6F61 		.ascii	"float\000"
 1464      7400
 1465              	.LASF39:
 1466 00db 6F766572 		.ascii	"overCur\000"
 1466      43757200 
 1467              	.LASF23:
 1468 00e3 67656172 		.ascii	"gearRatio\000"
 1468      52617469 
 1468      6F00
 1469              	.LASF50:
 1470 00ed 6572726F 		.ascii	"errorState\000"
 1470      72537461 
 1470      746500
 1471              	.LASF6:
 1472 00f8 6C6F6E67 		.ascii	"long long int\000"
 1472      206C6F6E 
 1472      6720696E 
 1472      7400
 1473              	.LASF4:
 1474 0106 6C6F6E67 		.ascii	"long int\000"
 1474      20696E74 
 1474      00
 1475              	.LASF56:
 1476 010f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1476      43313120 
 1476      352E342E 
 1476      31203230 
 1476      31363036 
 1477 0142 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1477      20726576 
 1477      6973696F 
 1477      6E203233 
 1477      37373135 
 1478 0175 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1478      66756E63 
 1478      74696F6E 
 1478      2D736563 
 1478      74696F6E 
 1479              	.LASF25:
 1480 019d 73706565 		.ascii	"speedRpmRef\000"
 1480      6452706D 
 1480      52656600 
 1481              	.LASF18:
 1482 01a9 6C6F6E67 		.ascii	"long double\000"
 1482      20646F75 
 1482      626C6500 
 1483              	.LASF1:
 1484 01b5 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 33


 1484      676E6564 
 1484      20636861 
 1484      7200
 1485              	.LASF27:
 1486 01c3 6D696E53 		.ascii	"minSpeedRpm\000"
 1486      70656564 
 1486      52706D00 
 1487              	.LASF0:
 1488 01cf 7369676E 		.ascii	"signed char\000"
 1488      65642063 
 1488      68617200 
 1489              	.LASF7:
 1490 01db 6C6F6E67 		.ascii	"long long unsigned int\000"
 1490      206C6F6E 
 1490      6720756E 
 1490      7369676E 
 1490      65642069 
 1491              	.LASF8:
 1492 01f2 756E7369 		.ascii	"unsigned int\000"
 1492      676E6564 
 1492      20696E74 
 1492      00
 1493              	.LASF54:
 1494 01ff 70776D43 		.ascii	"pwmCnt\000"
 1494      6E7400
 1495              	.LASF3:
 1496 0206 73686F72 		.ascii	"short unsigned int\000"
 1496      7420756E 
 1496      7369676E 
 1496      65642069 
 1496      6E7400
 1497              	.LASF28:
 1498 0219 706F6C65 		.ascii	"polePairs\000"
 1498      50616972 
 1498      7300
 1499              	.LASF17:
 1500 0223 63686172 		.ascii	"char\000"
 1500      00
 1501              	.LASF60:
 1502 0228 6D61696E 		.ascii	"main\000"
 1502      00
 1503              	.LASF31:
 1504 022d 616E6775 		.ascii	"angularPos\000"
 1504      6C617250 
 1504      6F7300
 1505              	.LASF58:
 1506 0238 443A5C53 		.ascii	"D:\\Sensored BLDC Motor Control\\control_v3.cydsn\000"
 1506      656E736F 
 1506      72656420 
 1506      424C4443 
 1506      204D6F74 
 1507              	.LASF52:
 1508 0268 55495F44 		.ascii	"UI_Data\000"
 1508      61746100 
 1509              	.LASF21:
 1510 0270 74657374 		.ascii	"test\000"
 1510      00
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 34


 1511              	.LASF11:
 1512 0275 75696E74 		.ascii	"uint32\000"
 1512      333200
 1513              	.LASF57:
 1514 027c 6D61696E 		.ascii	"main.c\000"
 1514      2E6300
 1515              	.LASF5:
 1516 0283 6C6F6E67 		.ascii	"long unsigned int\000"
 1516      20756E73 
 1516      69676E65 
 1516      6420696E 
 1516      7400
 1517              	.LASF16:
 1518 0295 646F7562 		.ascii	"double\000"
 1518      6C6500
 1519              	.LASF41:
 1520 029c 6C6F7756 		.ascii	"lowVolt\000"
 1520      6F6C7400 
 1521              	.LASF43:
 1522 02a4 64697245 		.ascii	"dirError\000"
 1522      72726F72 
 1522      00
 1523              	.LASF15:
 1524 02ad 666C6F61 		.ascii	"float64\000"
 1524      74363400 
 1525              	.LASF49:
 1526 02b5 74656D70 		.ascii	"temp2\000"
 1526      3200
 1527              	.LASF42:
 1528 02bb 68696768 		.ascii	"highVolt\000"
 1528      566F6C74 
 1528      00
 1529              	.LASF38:
 1530 02c4 6E6F5F65 		.ascii	"no_error\000"
 1530      72726F72 
 1530      00
 1531              	.LASF44:
 1532 02cd 73746174 		.ascii	"stateMachineError\000"
 1532      654D6163 
 1532      68696E65 
 1532      4572726F 
 1532      7200
 1533              	.LASF45:
 1534 02df 4572726F 		.ascii	"Error_T\000"
 1534      725F5400 
 1535              	.LASF30:
 1536 02e7 74696D65 		.ascii	"timeBetweenHallSamples\000"
 1536      42657477 
 1536      65656E48 
 1536      616C6C53 
 1536      616D706C 
 1537              	.LASF24:
 1538 02fe 73706565 		.ascii	"speedRpm\000"
 1538      6452706D 
 1538      00
 1539              	.LASF34:
 1540 0307 70726F67 		.ascii	"programStateManchineState\000"
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cc6FPBDd.s 			page 35


 1540      72616D53 
 1540      74617465 
 1540      4D616E63 
 1540      68696E65 
 1541              	.LASF53:
 1542 0321 73706565 		.ascii	"speedRef\000"
 1542      64526566 
 1542      00
 1543              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
