ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cckoZmZh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"getvalue.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.VoltageCheck,"ax",%progbits
  20              		.align	2
  21              		.global	VoltageCheck
  22              		.code	16
  23              		.thumb_func
  24              		.type	VoltageCheck, %function
  25              	VoltageCheck:
  26              	.LFB32:
  27              		.file 1 "getvalue.c"
   1:getvalue.c    **** /*******************************************************************************
   2:getvalue.c    **** * Project Name		: Sensored BLDC Motor Control
   3:getvalue.c    **** * File Name			: getvalue.c
   4:getvalue.c    **** * Version			: 1.0
   5:getvalue.c    **** * Device Used		: CY8C4245AXI-483     
   6:getvalue.c    **** * Software Used		: PSoC Creator 4.2
   7:getvalue.c    **** * Compiler Used		: ARM GCC 5.4.1 
   8:getvalue.c    **** * Related Hardware  : CY8CKIT-042 PSoC 4 Pioneer Kit + CY8CKIT-037 PSoC 4
   9:getvalue.c    **** *                     Motor Control Evaluation Kit
  10:getvalue.c    **** ******************************************************************************
  11:getvalue.c    **** * Copyright (2018), Cypress Semiconductor Corporation. All rights reserved.
  12:getvalue.c    **** *******************************************************************************
  13:getvalue.c    **** * This software, including source code, documentation and related materials
  14:getvalue.c    **** * (“Software”), is owned by Cypress Semiconductor Corporation or one of its
  15:getvalue.c    **** * subsidiaries (“Cypress”) and is protected by and subject to worldwide patent
  16:getvalue.c    **** * protection (United States and foreign), United States copyright laws and
  17:getvalue.c    **** * international treaty provisions. Therefore, you may use this Software only
  18:getvalue.c    **** * as provided in the license agreement accompanying the software package from
  19:getvalue.c    **** * which you obtained this Software (“EULA”).
  20:getvalue.c    **** *
  21:getvalue.c    **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  22:getvalue.c    **** * non-transferable license to copy, modify, and compile the Software source
  23:getvalue.c    **** * code solely for use in connection with Cypress’s integrated circuit products.
  24:getvalue.c    **** * Any reproduction, modification, translation, compilation, or representation
  25:getvalue.c    **** * of this Software except as specified above is prohibited without the express
  26:getvalue.c    **** * written permission of Cypress.
  27:getvalue.c    **** *
  28:getvalue.c    **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND, 
  29:getvalue.c    **** * EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED 
  30:getvalue.c    **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress 
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cckoZmZh.s 			page 2


  31:getvalue.c    **** * reserves the right to make changes to the Software without notice. Cypress 
  32:getvalue.c    **** * does not assume any liability arising out of the application or use of the 
  33:getvalue.c    **** * Software or any product or circuit described in the Software. Cypress does 
  34:getvalue.c    **** * not authorize its products for use in any products where a malfunction or 
  35:getvalue.c    **** * failure of the Cypress product may reasonably be expected to result in 
  36:getvalue.c    **** * significant property damage, injury or death (“High Risk Product”). By 
  37:getvalue.c    **** * including Cypress’s product in a High Risk Product, the manufacturer of such 
  38:getvalue.c    **** * system or application assumes all risk of such use and in doing so agrees to 
  39:getvalue.c    **** * indemnify Cypress against all liability.
  40:getvalue.c    **** *******************************************************************************/
  41:getvalue.c    **** #include <project.h>
  42:getvalue.c    **** #include "speed.h"
  43:getvalue.c    **** #include "motor.h"
  44:getvalue.c    **** #include "getvalue.h"
  45:getvalue.c    **** #include "userinterface.h"
  46:getvalue.c    **** 
  47:getvalue.c    **** /*******************************************************************************
  48:getvalue.c    **** * Function Name: ReadVolt
  49:getvalue.c    **** ********************************************************************************
  50:getvalue.c    **** * Summary:
  51:getvalue.c    **** * The ReadVolt function samples Vbus to protect board from low-voltage and high
  52:getvalue.c    **** * voltage. 
  53:getvalue.c    **** *
  54:getvalue.c    **** * Parameters: None 
  55:getvalue.c    **** *
  56:getvalue.c    **** * Return: None
  57:getvalue.c    **** *
  58:getvalue.c    **** *******************************************************************************/
  59:getvalue.c    **** 
  60:getvalue.c    **** void VoltageCheck(void)
  61:getvalue.c    **** {
  28              		.loc 1 61 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  62:getvalue.c    ****     uint16 adcResult = 0;	
  40              		.loc 1 62 0
  41 0006 BB1D     		adds	r3, r7, #6
  42 0008 0022     		movs	r2, #0
  43 000a 1A80     		strh	r2, [r3]
  63:getvalue.c    ****     static uint16 highVoltCounter = 0;
  64:getvalue.c    ****     static uint16 lowVoltCounter = 0;    
  65:getvalue.c    **** 	adcResult = (ADC_SAR_Seq_1_GetResult16(0) & 0x00ff);       /* filter unwanted MSB, 2011,12,29 */
  44              		.loc 1 65 0
  45 000c 0020     		movs	r0, #0
  46 000e FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
  47 0012 0300     		movs	r3, r0
  48 0014 9AB2     		uxth	r2, r3
  49 0016 BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cckoZmZh.s 			page 3


  50 0018 FF21     		movs	r1, #255
  51 001a 0A40     		ands	r2, r1
  52 001c 1A80     		strh	r2, [r3]
  66:getvalue.c    **** 
  67:getvalue.c    ****    /*Over voltage or under voltage*/
  68:getvalue.c    ****     if(adcResult < LVTHRESHOLD)
  53              		.loc 1 68 0
  54 001e BB1D     		adds	r3, r7, #6
  55 0020 1B88     		ldrh	r3, [r3]
  56 0022 272B     		cmp	r3, #39
  57 0024 06D8     		bhi	.L2
  69:getvalue.c    ****     {
  70:getvalue.c    ****     	lowVoltCounter++;					/*Record low voltage count*/
  58              		.loc 1 70 0
  59 0026 204B     		ldr	r3, .L9
  60 0028 1B88     		ldrh	r3, [r3]
  61 002a 0133     		adds	r3, r3, #1
  62 002c 9AB2     		uxth	r2, r3
  63 002e 1E4B     		ldr	r3, .L9
  64 0030 1A80     		strh	r2, [r3]
  65 0032 1EE0     		b	.L3
  66              	.L2:
  71:getvalue.c    ****     }
  72:getvalue.c    ****     else if (adcResult > HVTHRESHOLD)
  67              		.loc 1 72 0
  68 0034 BB1D     		adds	r3, r7, #6
  69 0036 1B88     		ldrh	r3, [r3]
  70 0038 5A2B     		cmp	r3, #90
  71 003a 06D9     		bls	.L4
  73:getvalue.c    ****     {
  74:getvalue.c    ****     	highVoltCounter++;					/*Record high voltage count*/
  72              		.loc 1 74 0
  73 003c 1B4B     		ldr	r3, .L9+4
  74 003e 1B88     		ldrh	r3, [r3]
  75 0040 0133     		adds	r3, r3, #1
  76 0042 9AB2     		uxth	r2, r3
  77 0044 194B     		ldr	r3, .L9+4
  78 0046 1A80     		strh	r2, [r3]
  79 0048 13E0     		b	.L3
  80              	.L4:
  75:getvalue.c    ****     }	   
  76:getvalue.c    ****     else if((lowVoltCounter>0)||(highVoltCounter>0))		/*Eliminate pulse high or low voltage count*/
  81              		.loc 1 76 0
  82 004a 174B     		ldr	r3, .L9
  83 004c 1B88     		ldrh	r3, [r3]
  84 004e 002B     		cmp	r3, #0
  85 0050 03D1     		bne	.L5
  86              		.loc 1 76 0 is_stmt 0 discriminator 1
  87 0052 164B     		ldr	r3, .L9+4
  88 0054 1B88     		ldrh	r3, [r3]
  89 0056 002B     		cmp	r3, #0
  90 0058 0BD0     		beq	.L3
  91              	.L5:
  77:getvalue.c    ****     {
  78:getvalue.c    ****     	lowVoltCounter--;
  92              		.loc 1 78 0 is_stmt 1
  93 005a 134B     		ldr	r3, .L9
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cckoZmZh.s 			page 4


  94 005c 1B88     		ldrh	r3, [r3]
  95 005e 013B     		subs	r3, r3, #1
  96 0060 9AB2     		uxth	r2, r3
  97 0062 114B     		ldr	r3, .L9
  98 0064 1A80     		strh	r2, [r3]
  79:getvalue.c    **** 		highVoltCounter--;
  99              		.loc 1 79 0
 100 0066 114B     		ldr	r3, .L9+4
 101 0068 1B88     		ldrh	r3, [r3]
 102 006a 013B     		subs	r3, r3, #1
 103 006c 9AB2     		uxth	r2, r3
 104 006e 0F4B     		ldr	r3, .L9+4
 105 0070 1A80     		strh	r2, [r3]
 106              	.L3:
  80:getvalue.c    ****     }
  81:getvalue.c    **** 	
  82:getvalue.c    ****    /*Last more than voltage error time threshold, then stop motor*/
  83:getvalue.c    ****    	if(lowVoltCounter > LVCNTTHRES)
 107              		.loc 1 83 0
 108 0072 0D4B     		ldr	r3, .L9
 109 0074 1A88     		ldrh	r2, [r3]
 110 0076 A023     		movs	r3, #160
 111 0078 1B01     		lsls	r3, r3, #4
 112 007a 9A42     		cmp	r2, r3
 113 007c 04D9     		bls	.L6
  84:getvalue.c    ****     {       
  85:getvalue.c    ****    		errorState = lowVolt;
 114              		.loc 1 85 0
 115 007e 0C4B     		ldr	r3, .L9+8
 116 0080 0322     		movs	r2, #3
 117 0082 1A70     		strb	r2, [r3]
  86:getvalue.c    ****     	UpdateStatusError();		
 118              		.loc 1 86 0
 119 0084 FFF7FEFF 		bl	UpdateStatusError
 120              	.L6:
  87:getvalue.c    ****     }
  88:getvalue.c    ****     if(highVoltCounter > HVCNTTHRES)
 121              		.loc 1 88 0
 122 0088 084B     		ldr	r3, .L9+4
 123 008a 1A88     		ldrh	r2, [r3]
 124 008c A023     		movs	r3, #160
 125 008e 1B01     		lsls	r3, r3, #4
 126 0090 9A42     		cmp	r2, r3
 127 0092 04D9     		bls	.L8
  89:getvalue.c    ****     {
  90:getvalue.c    ****    		errorState = highVolt;
 128              		.loc 1 90 0
 129 0094 064B     		ldr	r3, .L9+8
 130 0096 0422     		movs	r2, #4
 131 0098 1A70     		strb	r2, [r3]
  91:getvalue.c    ****     	UpdateStatusError();
 132              		.loc 1 91 0
 133 009a FFF7FEFF 		bl	UpdateStatusError
 134              	.L8:
  92:getvalue.c    ****     }
  93:getvalue.c    **** }
 135              		.loc 1 93 0
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cckoZmZh.s 			page 5


 136 009e C046     		nop
 137 00a0 BD46     		mov	sp, r7
 138 00a2 02B0     		add	sp, sp, #8
 139              		@ sp needed
 140 00a4 80BD     		pop	{r7, pc}
 141              	.L10:
 142 00a6 C046     		.align	2
 143              	.L9:
 144 00a8 00000000 		.word	lowVoltCounter.6128
 145 00ac 02000000 		.word	highVoltCounter.6127
 146 00b0 00000000 		.word	errorState
 147              		.cfi_endproc
 148              	.LFE32:
 149              		.size	VoltageCheck, .-VoltageCheck
 150              		.global	__aeabi_uidiv
 151              		.section	.text.ReadRpmRef,"ax",%progbits
 152              		.align	2
 153              		.global	ReadRpmRef
 154              		.code	16
 155              		.thumb_func
 156              		.type	ReadRpmRef, %function
 157              	ReadRpmRef:
 158              	.LFB33:
  94:getvalue.c    **** 
  95:getvalue.c    **** /*******************************************************************************
  96:getvalue.c    **** * Function Name: ReadRpmRef
  97:getvalue.c    **** ********************************************************************************
  98:getvalue.c    **** * Summary:
  99:getvalue.c    **** * The ReadRpmRef function reads speed reference value from potentiometer. 
 100:getvalue.c    **** *
 101:getvalue.c    **** * Parameters: None  
 102:getvalue.c    **** *
 103:getvalue.c    **** * Return: uint16  
 104:getvalue.c    **** *
 105:getvalue.c    **** *******************************************************************************/
 106:getvalue.c    **** uint16 ReadRpmRef(void)
 107:getvalue.c    **** {
 159              		.loc 1 107 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 8
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 90B5     		push	{r4, r7, lr}
 164              		.cfi_def_cfa_offset 12
 165              		.cfi_offset 4, -12
 166              		.cfi_offset 7, -8
 167              		.cfi_offset 14, -4
 168 0002 83B0     		sub	sp, sp, #12
 169              		.cfi_def_cfa_offset 24
 170 0004 00AF     		add	r7, sp, #0
 171              		.cfi_def_cfa_register 7
 108:getvalue.c    **** 	uint16 speedSampleCur = (ADC_SAR_Seq_1_GetResult16(SPEED_REF_CHAN) & 0x0FFF); 
 172              		.loc 1 108 0
 173 0006 0120     		movs	r0, #1
 174 0008 FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
 175 000c 0300     		movs	r3, r0
 176 000e 9AB2     		uxth	r2, r3
 177 0010 BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cckoZmZh.s 			page 6


 178 0012 1205     		lsls	r2, r2, #20
 179 0014 120D     		lsrs	r2, r2, #20
 180 0016 1A80     		strh	r2, [r3]
 109:getvalue.c    ****     uint16 speedRange = UI_Data.maxSpeedRpm - UI_Data.minSpeedRpm;
 181              		.loc 1 109 0
 182 0018 194B     		ldr	r3, .L15
 183 001a 9989     		ldrh	r1, [r3, #12]
 184 001c 184B     		ldr	r3, .L15
 185 001e DA89     		ldrh	r2, [r3, #14]
 186 0020 3B1D     		adds	r3, r7, #4
 187 0022 8A1A     		subs	r2, r1, r2
 188 0024 1A80     		strh	r2, [r3]
 110:getvalue.c    ****     uint16 speedGiven = 0;
 189              		.loc 1 110 0
 190 0026 BB1C     		adds	r3, r7, #2
 191 0028 0022     		movs	r2, #0
 192 002a 1A80     		strh	r2, [r3]
 111:getvalue.c    ****     
 112:getvalue.c    ****     if(speedSampleCur > MAX_SPEED_REF_ADC_VALUE)
 193              		.loc 1 112 0
 194 002c BB1D     		adds	r3, r7, #6
 195 002e 1B88     		ldrh	r3, [r3]
 196 0030 144A     		ldr	r2, .L15+4
 197 0032 9342     		cmp	r3, r2
 198 0034 02D9     		bls	.L12
 113:getvalue.c    ****         speedSampleCur = MAX_SPEED_REF_ADC_VALUE;
 199              		.loc 1 113 0
 200 0036 BB1D     		adds	r3, r7, #6
 201 0038 124A     		ldr	r2, .L15+4
 202 003a 1A80     		strh	r2, [r3]
 203              	.L12:
 114:getvalue.c    ****     if(speedSampleCur < MIN_SPEED_REF_ADC_VALUE)
 204              		.loc 1 114 0
 205 003c BB1D     		adds	r3, r7, #6
 206 003e 1B88     		ldrh	r3, [r3]
 207 0040 9B2B     		cmp	r3, #155
 208 0042 02D8     		bhi	.L13
 115:getvalue.c    ****         speedSampleCur = MIN_SPEED_REF_ADC_VALUE;
 209              		.loc 1 115 0
 210 0044 BB1D     		adds	r3, r7, #6
 211 0046 9C22     		movs	r2, #156
 212 0048 1A80     		strh	r2, [r3]
 213              	.L13:
 116:getvalue.c    ****     
 117:getvalue.c    ****     speedSampleCur -= MIN_SPEED_REF_ADC_VALUE;
 214              		.loc 1 117 0
 215 004a BB1D     		adds	r3, r7, #6
 216 004c BA1D     		adds	r2, r7, #6
 217 004e 1288     		ldrh	r2, [r2]
 218 0050 9C3A     		subs	r2, r2, #156
 219 0052 1A80     		strh	r2, [r3]
 118:getvalue.c    ****     speedGiven = UI_Data.minSpeedRpm + ((uint32)(speedSampleCur * speedRange) / 
 220              		.loc 1 118 0
 221 0054 0A4B     		ldr	r3, .L15
 222 0056 DC89     		ldrh	r4, [r3, #14]
 223 0058 BB1D     		adds	r3, r7, #6
 224 005a 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cckoZmZh.s 			page 7


 225 005c 3A1D     		adds	r2, r7, #4
 226 005e 1288     		ldrh	r2, [r2]
 227 0060 5343     		muls	r3, r2
 228 0062 0949     		ldr	r1, .L15+8
 229 0064 1800     		movs	r0, r3
 230 0066 FFF7FEFF 		bl	__aeabi_uidiv
 231 006a 0300     		movs	r3, r0
 232 006c 9AB2     		uxth	r2, r3
 233 006e BB1C     		adds	r3, r7, #2
 234 0070 A218     		adds	r2, r4, r2
 235 0072 1A80     		strh	r2, [r3]
 119:getvalue.c    ****                                                (MAX_SPEED_REF_ADC_VALUE - MIN_SPEED_REF_ADC_VALUE))
 120:getvalue.c    ****     
 121:getvalue.c    ****     return speedGiven;
 236              		.loc 1 121 0
 237 0074 BB1C     		adds	r3, r7, #2
 238 0076 1B88     		ldrh	r3, [r3]
 122:getvalue.c    **** }
 239              		.loc 1 122 0
 240 0078 1800     		movs	r0, r3
 241 007a BD46     		mov	sp, r7
 242 007c 03B0     		add	sp, sp, #12
 243              		@ sp needed
 244 007e 90BD     		pop	{r4, r7, pc}
 245              	.L16:
 246              		.align	2
 247              	.L15:
 248 0080 00000000 		.word	UI_Data
 249 0084 630F0000 		.word	3939
 250 0088 C70E0000 		.word	3783
 251              		.cfi_endproc
 252              	.LFE33:
 253              		.size	ReadRpmRef, .-ReadRpmRef
 254              		.bss
 255              		.align	1
 256              	lowVoltCounter.6128:
 257 0000 0000     		.space	2
 258              		.align	1
 259              	highVoltCounter.6127:
 260 0002 0000     		.space	2
 261              		.text
 262              	.Letext0:
 263              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 264              		.file 3 "motor.h"
 265              		.section	.debug_info,"",%progbits
 266              	.Ldebug_info0:
 267 0000 13020000 		.4byte	0x213
 268 0004 0400     		.2byte	0x4
 269 0006 00000000 		.4byte	.Ldebug_abbrev0
 270 000a 04       		.byte	0x4
 271 000b 01       		.uleb128 0x1
 272 000c D2000000 		.4byte	.LASF39
 273 0010 0C       		.byte	0xc
 274 0011 E6010000 		.4byte	.LASF40
 275 0015 04020000 		.4byte	.LASF41
 276 0019 00000000 		.4byte	.Ldebug_ranges0+0
 277 001d 00000000 		.4byte	0
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cckoZmZh.s 			page 8


 278 0021 00000000 		.4byte	.Ldebug_line0
 279 0025 02       		.uleb128 0x2
 280 0026 01       		.byte	0x1
 281 0027 06       		.byte	0x6
 282 0028 DC020000 		.4byte	.LASF0
 283 002c 02       		.uleb128 0x2
 284 002d 01       		.byte	0x1
 285 002e 08       		.byte	0x8
 286 002f 69010000 		.4byte	.LASF1
 287 0033 02       		.uleb128 0x2
 288 0034 02       		.byte	0x2
 289 0035 05       		.byte	0x5
 290 0036 7E010000 		.4byte	.LASF2
 291 003a 02       		.uleb128 0x2
 292 003b 02       		.byte	0x2
 293 003c 07       		.byte	0x7
 294 003d BF000000 		.4byte	.LASF3
 295 0041 02       		.uleb128 0x2
 296 0042 04       		.byte	0x4
 297 0043 05       		.byte	0x5
 298 0044 C7020000 		.4byte	.LASF4
 299 0048 02       		.uleb128 0x2
 300 0049 04       		.byte	0x4
 301 004a 07       		.byte	0x7
 302 004b A5000000 		.4byte	.LASF5
 303 004f 02       		.uleb128 0x2
 304 0050 08       		.byte	0x8
 305 0051 05       		.byte	0x5
 306 0052 00000000 		.4byte	.LASF6
 307 0056 02       		.uleb128 0x2
 308 0057 08       		.byte	0x8
 309 0058 07       		.byte	0x7
 310 0059 C6010000 		.4byte	.LASF7
 311 005d 03       		.uleb128 0x3
 312 005e 04       		.byte	0x4
 313 005f 05       		.byte	0x5
 314 0060 696E7400 		.ascii	"int\000"
 315 0064 02       		.uleb128 0x2
 316 0065 04       		.byte	0x4
 317 0066 07       		.byte	0x7
 318 0067 AE010000 		.4byte	.LASF8
 319 006b 04       		.uleb128 0x4
 320 006c 8A000000 		.4byte	.LASF9
 321 0070 02       		.byte	0x2
 322 0071 E401     		.2byte	0x1e4
 323 0073 2C000000 		.4byte	0x2c
 324 0077 04       		.uleb128 0x4
 325 0078 98010000 		.4byte	.LASF10
 326 007c 02       		.byte	0x2
 327 007d E501     		.2byte	0x1e5
 328 007f 3A000000 		.4byte	0x3a
 329 0083 04       		.uleb128 0x4
 330 0084 9F010000 		.4byte	.LASF11
 331 0088 02       		.byte	0x2
 332 0089 E601     		.2byte	0x1e6
 333 008b 48000000 		.4byte	0x48
 334 008f 02       		.uleb128 0x2
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cckoZmZh.s 			page 9


 335 0090 04       		.byte	0x4
 336 0091 04       		.byte	0x4
 337 0092 2A000000 		.4byte	.LASF12
 338 0096 02       		.uleb128 0x2
 339 0097 08       		.byte	0x8
 340 0098 04       		.byte	0x4
 341 0099 77010000 		.4byte	.LASF13
 342 009d 02       		.uleb128 0x2
 343 009e 01       		.byte	0x1
 344 009f 08       		.byte	0x8
 345 00a0 A2020000 		.4byte	.LASF14
 346 00a4 02       		.uleb128 0x2
 347 00a5 08       		.byte	0x8
 348 00a6 04       		.byte	0x4
 349 00a7 D0020000 		.4byte	.LASF15
 350 00ab 02       		.uleb128 0x2
 351 00ac 04       		.byte	0x4
 352 00ad 07       		.byte	0x7
 353 00ae FB010000 		.4byte	.LASF16
 354 00b2 05       		.uleb128 0x5
 355 00b3 12       		.byte	0x12
 356 00b4 03       		.byte	0x3
 357 00b5 4C       		.byte	0x4c
 358 00b6 31010000 		.4byte	0x131
 359 00ba 06       		.uleb128 0x6
 360 00bb 44697200 		.ascii	"Dir\000"
 361 00bf 03       		.byte	0x3
 362 00c0 4E       		.byte	0x4e
 363 00c1 6B000000 		.4byte	0x6b
 364 00c5 00       		.byte	0
 365 00c6 07       		.uleb128 0x7
 366 00c7 80000000 		.4byte	.LASF17
 367 00cb 03       		.byte	0x3
 368 00cc 50       		.byte	0x50
 369 00cd 77000000 		.4byte	0x77
 370 00d1 02       		.byte	0x2
 371 00d2 07       		.uleb128 0x7
 372 00d3 AF020000 		.4byte	.LASF18
 373 00d7 03       		.byte	0x3
 374 00d8 51       		.byte	0x51
 375 00d9 77000000 		.4byte	0x77
 376 00dd 04       		.byte	0x4
 377 00de 07       		.uleb128 0x7
 378 00df 3C000000 		.4byte	.LASF19
 379 00e3 03       		.byte	0x3
 380 00e4 52       		.byte	0x52
 381 00e5 77000000 		.4byte	0x77
 382 00e9 06       		.byte	0x6
 383 00ea 06       		.uleb128 0x6
 384 00eb 6B7000   		.ascii	"kp\000"
 385 00ee 03       		.byte	0x3
 386 00ef 54       		.byte	0x54
 387 00f0 77000000 		.4byte	0x77
 388 00f4 08       		.byte	0x8
 389 00f5 06       		.uleb128 0x6
 390 00f6 6B6900   		.ascii	"ki\000"
 391 00f9 03       		.byte	0x3
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cckoZmZh.s 			page 10


 392 00fa 55       		.byte	0x55
 393 00fb 77000000 		.4byte	0x77
 394 00ff 0A       		.byte	0xa
 395 0100 07       		.uleb128 0x7
 396 0101 1E000000 		.4byte	.LASF20
 397 0105 03       		.byte	0x3
 398 0106 57       		.byte	0x57
 399 0107 77000000 		.4byte	0x77
 400 010b 0C       		.byte	0xc
 401 010c 07       		.uleb128 0x7
 402 010d 30000000 		.4byte	.LASF21
 403 0111 03       		.byte	0x3
 404 0112 58       		.byte	0x58
 405 0113 77000000 		.4byte	0x77
 406 0117 0E       		.byte	0xe
 407 0118 07       		.uleb128 0x7
 408 0119 5A000000 		.4byte	.LASF22
 409 011d 03       		.byte	0x3
 410 011e 59       		.byte	0x59
 411 011f 6B000000 		.4byte	0x6b
 412 0123 10       		.byte	0x10
 413 0124 07       		.uleb128 0x7
 414 0125 A6010000 		.4byte	.LASF23
 415 0129 03       		.byte	0x3
 416 012a 5A       		.byte	0x5a
 417 012b 6B000000 		.4byte	0x6b
 418 012f 11       		.byte	0x11
 419 0130 00       		.byte	0
 420 0131 08       		.uleb128 0x8
 421 0132 A7020000 		.4byte	.LASF24
 422 0136 03       		.byte	0x3
 423 0137 5B       		.byte	0x5b
 424 0138 B2000000 		.4byte	0xb2
 425 013c 09       		.uleb128 0x9
 426 013d 48000000 		.4byte	.LASF42
 427 0141 01       		.byte	0x1
 428 0142 2C000000 		.4byte	0x2c
 429 0146 03       		.byte	0x3
 430 0147 5F       		.byte	0x5f
 431 0148 6B010000 		.4byte	0x16b
 432 014c 0A       		.uleb128 0xa
 433 014d 60010000 		.4byte	.LASF25
 434 0151 00       		.byte	0
 435 0152 0A       		.uleb128 0xa
 436 0153 E8020000 		.4byte	.LASF26
 437 0157 01       		.byte	0x1
 438 0158 0A       		.uleb128 0xa
 439 0159 9B000000 		.4byte	.LASF27
 440 015d 02       		.byte	0x2
 441 015e 0A       		.uleb128 0xa
 442 015f B7000000 		.4byte	.LASF28
 443 0163 03       		.byte	0x3
 444 0164 0A       		.uleb128 0xa
 445 0165 DD010000 		.4byte	.LASF29
 446 0169 04       		.byte	0x4
 447 016a 00       		.byte	0
 448 016b 08       		.uleb128 0x8
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cckoZmZh.s 			page 11


 449 016c 0E000000 		.4byte	.LASF30
 450 0170 03       		.byte	0x3
 451 0171 65       		.byte	0x65
 452 0172 3C010000 		.4byte	0x13c
 453 0176 0B       		.uleb128 0xb
 454 0177 73000000 		.4byte	.LASF43
 455 017b 01       		.byte	0x1
 456 017c 3C       		.byte	0x3c
 457 017d 00000000 		.4byte	.LFB32
 458 0181 B4000000 		.4byte	.LFE32-.LFB32
 459 0185 01       		.uleb128 0x1
 460 0186 9C       		.byte	0x9c
 461 0187 BC010000 		.4byte	0x1bc
 462 018b 0C       		.uleb128 0xc
 463 018c F1010000 		.4byte	.LASF31
 464 0190 01       		.byte	0x1
 465 0191 3E       		.byte	0x3e
 466 0192 77000000 		.4byte	0x77
 467 0196 02       		.uleb128 0x2
 468 0197 91       		.byte	0x91
 469 0198 76       		.sleb128 -10
 470 0199 0C       		.uleb128 0xc
 471 019a 88010000 		.4byte	.LASF32
 472 019e 01       		.byte	0x1
 473 019f 3F       		.byte	0x3f
 474 01a0 77000000 		.4byte	0x77
 475 01a4 05       		.uleb128 0x5
 476 01a5 03       		.byte	0x3
 477 01a6 02000000 		.4byte	highVoltCounter.6127
 478 01aa 0C       		.uleb128 0xc
 479 01ab 64000000 		.4byte	.LASF33
 480 01af 01       		.byte	0x1
 481 01b0 40       		.byte	0x40
 482 01b1 77000000 		.4byte	0x77
 483 01b5 05       		.uleb128 0x5
 484 01b6 03       		.byte	0x3
 485 01b7 00000000 		.4byte	lowVoltCounter.6128
 486 01bb 00       		.byte	0
 487 01bc 0D       		.uleb128 0xd
 488 01bd BB010000 		.4byte	.LASF44
 489 01c1 01       		.byte	0x1
 490 01c2 6A       		.byte	0x6a
 491 01c3 77000000 		.4byte	0x77
 492 01c7 00000000 		.4byte	.LFB33
 493 01cb 8C000000 		.4byte	.LFE33-.LFB33
 494 01cf 01       		.uleb128 0x1
 495 01d0 9C       		.byte	0x9c
 496 01d1 00020000 		.4byte	0x200
 497 01d5 0C       		.uleb128 0xc
 498 01d6 B8020000 		.4byte	.LASF34
 499 01da 01       		.byte	0x1
 500 01db 6C       		.byte	0x6c
 501 01dc 77000000 		.4byte	0x77
 502 01e0 02       		.uleb128 0x2
 503 01e1 91       		.byte	0x91
 504 01e2 6E       		.sleb128 -18
 505 01e3 0C       		.uleb128 0xc
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cckoZmZh.s 			page 12


 506 01e4 4F000000 		.4byte	.LASF35
 507 01e8 01       		.byte	0x1
 508 01e9 6D       		.byte	0x6d
 509 01ea 77000000 		.4byte	0x77
 510 01ee 02       		.uleb128 0x2
 511 01ef 91       		.byte	0x91
 512 01f0 6C       		.sleb128 -20
 513 01f1 0C       		.uleb128 0xc
 514 01f2 F0020000 		.4byte	.LASF36
 515 01f6 01       		.byte	0x1
 516 01f7 6E       		.byte	0x6e
 517 01f8 77000000 		.4byte	0x77
 518 01fc 02       		.uleb128 0x2
 519 01fd 91       		.byte	0x91
 520 01fe 6A       		.sleb128 -22
 521 01ff 00       		.byte	0
 522 0200 0E       		.uleb128 0xe
 523 0201 90000000 		.4byte	.LASF37
 524 0205 03       		.byte	0x3
 525 0206 67       		.byte	0x67
 526 0207 6B010000 		.4byte	0x16b
 527 020b 0E       		.uleb128 0xe
 528 020c 16000000 		.4byte	.LASF38
 529 0210 03       		.byte	0x3
 530 0211 69       		.byte	0x69
 531 0212 31010000 		.4byte	0x131
 532 0216 00       		.byte	0
 533              		.section	.debug_abbrev,"",%progbits
 534              	.Ldebug_abbrev0:
 535 0000 01       		.uleb128 0x1
 536 0001 11       		.uleb128 0x11
 537 0002 01       		.byte	0x1
 538 0003 25       		.uleb128 0x25
 539 0004 0E       		.uleb128 0xe
 540 0005 13       		.uleb128 0x13
 541 0006 0B       		.uleb128 0xb
 542 0007 03       		.uleb128 0x3
 543 0008 0E       		.uleb128 0xe
 544 0009 1B       		.uleb128 0x1b
 545 000a 0E       		.uleb128 0xe
 546 000b 55       		.uleb128 0x55
 547 000c 17       		.uleb128 0x17
 548 000d 11       		.uleb128 0x11
 549 000e 01       		.uleb128 0x1
 550 000f 10       		.uleb128 0x10
 551 0010 17       		.uleb128 0x17
 552 0011 00       		.byte	0
 553 0012 00       		.byte	0
 554 0013 02       		.uleb128 0x2
 555 0014 24       		.uleb128 0x24
 556 0015 00       		.byte	0
 557 0016 0B       		.uleb128 0xb
 558 0017 0B       		.uleb128 0xb
 559 0018 3E       		.uleb128 0x3e
 560 0019 0B       		.uleb128 0xb
 561 001a 03       		.uleb128 0x3
 562 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cckoZmZh.s 			page 13


 563 001c 00       		.byte	0
 564 001d 00       		.byte	0
 565 001e 03       		.uleb128 0x3
 566 001f 24       		.uleb128 0x24
 567 0020 00       		.byte	0
 568 0021 0B       		.uleb128 0xb
 569 0022 0B       		.uleb128 0xb
 570 0023 3E       		.uleb128 0x3e
 571 0024 0B       		.uleb128 0xb
 572 0025 03       		.uleb128 0x3
 573 0026 08       		.uleb128 0x8
 574 0027 00       		.byte	0
 575 0028 00       		.byte	0
 576 0029 04       		.uleb128 0x4
 577 002a 16       		.uleb128 0x16
 578 002b 00       		.byte	0
 579 002c 03       		.uleb128 0x3
 580 002d 0E       		.uleb128 0xe
 581 002e 3A       		.uleb128 0x3a
 582 002f 0B       		.uleb128 0xb
 583 0030 3B       		.uleb128 0x3b
 584 0031 05       		.uleb128 0x5
 585 0032 49       		.uleb128 0x49
 586 0033 13       		.uleb128 0x13
 587 0034 00       		.byte	0
 588 0035 00       		.byte	0
 589 0036 05       		.uleb128 0x5
 590 0037 13       		.uleb128 0x13
 591 0038 01       		.byte	0x1
 592 0039 0B       		.uleb128 0xb
 593 003a 0B       		.uleb128 0xb
 594 003b 3A       		.uleb128 0x3a
 595 003c 0B       		.uleb128 0xb
 596 003d 3B       		.uleb128 0x3b
 597 003e 0B       		.uleb128 0xb
 598 003f 01       		.uleb128 0x1
 599 0040 13       		.uleb128 0x13
 600 0041 00       		.byte	0
 601 0042 00       		.byte	0
 602 0043 06       		.uleb128 0x6
 603 0044 0D       		.uleb128 0xd
 604 0045 00       		.byte	0
 605 0046 03       		.uleb128 0x3
 606 0047 08       		.uleb128 0x8
 607 0048 3A       		.uleb128 0x3a
 608 0049 0B       		.uleb128 0xb
 609 004a 3B       		.uleb128 0x3b
 610 004b 0B       		.uleb128 0xb
 611 004c 49       		.uleb128 0x49
 612 004d 13       		.uleb128 0x13
 613 004e 38       		.uleb128 0x38
 614 004f 0B       		.uleb128 0xb
 615 0050 00       		.byte	0
 616 0051 00       		.byte	0
 617 0052 07       		.uleb128 0x7
 618 0053 0D       		.uleb128 0xd
 619 0054 00       		.byte	0
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cckoZmZh.s 			page 14


 620 0055 03       		.uleb128 0x3
 621 0056 0E       		.uleb128 0xe
 622 0057 3A       		.uleb128 0x3a
 623 0058 0B       		.uleb128 0xb
 624 0059 3B       		.uleb128 0x3b
 625 005a 0B       		.uleb128 0xb
 626 005b 49       		.uleb128 0x49
 627 005c 13       		.uleb128 0x13
 628 005d 38       		.uleb128 0x38
 629 005e 0B       		.uleb128 0xb
 630 005f 00       		.byte	0
 631 0060 00       		.byte	0
 632 0061 08       		.uleb128 0x8
 633 0062 16       		.uleb128 0x16
 634 0063 00       		.byte	0
 635 0064 03       		.uleb128 0x3
 636 0065 0E       		.uleb128 0xe
 637 0066 3A       		.uleb128 0x3a
 638 0067 0B       		.uleb128 0xb
 639 0068 3B       		.uleb128 0x3b
 640 0069 0B       		.uleb128 0xb
 641 006a 49       		.uleb128 0x49
 642 006b 13       		.uleb128 0x13
 643 006c 00       		.byte	0
 644 006d 00       		.byte	0
 645 006e 09       		.uleb128 0x9
 646 006f 04       		.uleb128 0x4
 647 0070 01       		.byte	0x1
 648 0071 03       		.uleb128 0x3
 649 0072 0E       		.uleb128 0xe
 650 0073 0B       		.uleb128 0xb
 651 0074 0B       		.uleb128 0xb
 652 0075 49       		.uleb128 0x49
 653 0076 13       		.uleb128 0x13
 654 0077 3A       		.uleb128 0x3a
 655 0078 0B       		.uleb128 0xb
 656 0079 3B       		.uleb128 0x3b
 657 007a 0B       		.uleb128 0xb
 658 007b 01       		.uleb128 0x1
 659 007c 13       		.uleb128 0x13
 660 007d 00       		.byte	0
 661 007e 00       		.byte	0
 662 007f 0A       		.uleb128 0xa
 663 0080 28       		.uleb128 0x28
 664 0081 00       		.byte	0
 665 0082 03       		.uleb128 0x3
 666 0083 0E       		.uleb128 0xe
 667 0084 1C       		.uleb128 0x1c
 668 0085 0B       		.uleb128 0xb
 669 0086 00       		.byte	0
 670 0087 00       		.byte	0
 671 0088 0B       		.uleb128 0xb
 672 0089 2E       		.uleb128 0x2e
 673 008a 01       		.byte	0x1
 674 008b 3F       		.uleb128 0x3f
 675 008c 19       		.uleb128 0x19
 676 008d 03       		.uleb128 0x3
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cckoZmZh.s 			page 15


 677 008e 0E       		.uleb128 0xe
 678 008f 3A       		.uleb128 0x3a
 679 0090 0B       		.uleb128 0xb
 680 0091 3B       		.uleb128 0x3b
 681 0092 0B       		.uleb128 0xb
 682 0093 27       		.uleb128 0x27
 683 0094 19       		.uleb128 0x19
 684 0095 11       		.uleb128 0x11
 685 0096 01       		.uleb128 0x1
 686 0097 12       		.uleb128 0x12
 687 0098 06       		.uleb128 0x6
 688 0099 40       		.uleb128 0x40
 689 009a 18       		.uleb128 0x18
 690 009b 9642     		.uleb128 0x2116
 691 009d 19       		.uleb128 0x19
 692 009e 01       		.uleb128 0x1
 693 009f 13       		.uleb128 0x13
 694 00a0 00       		.byte	0
 695 00a1 00       		.byte	0
 696 00a2 0C       		.uleb128 0xc
 697 00a3 34       		.uleb128 0x34
 698 00a4 00       		.byte	0
 699 00a5 03       		.uleb128 0x3
 700 00a6 0E       		.uleb128 0xe
 701 00a7 3A       		.uleb128 0x3a
 702 00a8 0B       		.uleb128 0xb
 703 00a9 3B       		.uleb128 0x3b
 704 00aa 0B       		.uleb128 0xb
 705 00ab 49       		.uleb128 0x49
 706 00ac 13       		.uleb128 0x13
 707 00ad 02       		.uleb128 0x2
 708 00ae 18       		.uleb128 0x18
 709 00af 00       		.byte	0
 710 00b0 00       		.byte	0
 711 00b1 0D       		.uleb128 0xd
 712 00b2 2E       		.uleb128 0x2e
 713 00b3 01       		.byte	0x1
 714 00b4 3F       		.uleb128 0x3f
 715 00b5 19       		.uleb128 0x19
 716 00b6 03       		.uleb128 0x3
 717 00b7 0E       		.uleb128 0xe
 718 00b8 3A       		.uleb128 0x3a
 719 00b9 0B       		.uleb128 0xb
 720 00ba 3B       		.uleb128 0x3b
 721 00bb 0B       		.uleb128 0xb
 722 00bc 27       		.uleb128 0x27
 723 00bd 19       		.uleb128 0x19
 724 00be 49       		.uleb128 0x49
 725 00bf 13       		.uleb128 0x13
 726 00c0 11       		.uleb128 0x11
 727 00c1 01       		.uleb128 0x1
 728 00c2 12       		.uleb128 0x12
 729 00c3 06       		.uleb128 0x6
 730 00c4 40       		.uleb128 0x40
 731 00c5 18       		.uleb128 0x18
 732 00c6 9642     		.uleb128 0x2116
 733 00c8 19       		.uleb128 0x19
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cckoZmZh.s 			page 16


 734 00c9 01       		.uleb128 0x1
 735 00ca 13       		.uleb128 0x13
 736 00cb 00       		.byte	0
 737 00cc 00       		.byte	0
 738 00cd 0E       		.uleb128 0xe
 739 00ce 34       		.uleb128 0x34
 740 00cf 00       		.byte	0
 741 00d0 03       		.uleb128 0x3
 742 00d1 0E       		.uleb128 0xe
 743 00d2 3A       		.uleb128 0x3a
 744 00d3 0B       		.uleb128 0xb
 745 00d4 3B       		.uleb128 0x3b
 746 00d5 0B       		.uleb128 0xb
 747 00d6 49       		.uleb128 0x49
 748 00d7 13       		.uleb128 0x13
 749 00d8 3F       		.uleb128 0x3f
 750 00d9 19       		.uleb128 0x19
 751 00da 3C       		.uleb128 0x3c
 752 00db 19       		.uleb128 0x19
 753 00dc 00       		.byte	0
 754 00dd 00       		.byte	0
 755 00de 00       		.byte	0
 756              		.section	.debug_aranges,"",%progbits
 757 0000 24000000 		.4byte	0x24
 758 0004 0200     		.2byte	0x2
 759 0006 00000000 		.4byte	.Ldebug_info0
 760 000a 04       		.byte	0x4
 761 000b 00       		.byte	0
 762 000c 0000     		.2byte	0
 763 000e 0000     		.2byte	0
 764 0010 00000000 		.4byte	.LFB32
 765 0014 B4000000 		.4byte	.LFE32-.LFB32
 766 0018 00000000 		.4byte	.LFB33
 767 001c 8C000000 		.4byte	.LFE33-.LFB33
 768 0020 00000000 		.4byte	0
 769 0024 00000000 		.4byte	0
 770              		.section	.debug_ranges,"",%progbits
 771              	.Ldebug_ranges0:
 772 0000 00000000 		.4byte	.LFB32
 773 0004 B4000000 		.4byte	.LFE32
 774 0008 00000000 		.4byte	.LFB33
 775 000c 8C000000 		.4byte	.LFE33
 776 0010 00000000 		.4byte	0
 777 0014 00000000 		.4byte	0
 778              		.section	.debug_line,"",%progbits
 779              	.Ldebug_line0:
 780 0000 97000000 		.section	.debug_str,"MS",%progbits,1
 780      02005000 
 780      00000201 
 780      FB0E0D00 
 780      01010101 
 781              	.LASF6:
 782 0000 6C6F6E67 		.ascii	"long long int\000"
 782      206C6F6E 
 782      6720696E 
 782      7400
 783              	.LASF30:
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cckoZmZh.s 			page 17


 784 000e 4572726F 		.ascii	"Error_T\000"
 784      725F5400 
 785              	.LASF38:
 786 0016 55495F44 		.ascii	"UI_Data\000"
 786      61746100 
 787              	.LASF20:
 788 001e 6D617853 		.ascii	"maxSpeedRpm\000"
 788      70656564 
 788      52706D00 
 789              	.LASF12:
 790 002a 666C6F61 		.ascii	"float\000"
 790      7400
 791              	.LASF21:
 792 0030 6D696E53 		.ascii	"minSpeedRpm\000"
 792      70656564 
 792      52706D00 
 793              	.LASF19:
 794 003c 73706565 		.ascii	"speedRpmRef\000"
 794      6452706D 
 794      52656600 
 795              	.LASF42:
 796 0048 5F457272 		.ascii	"_Error\000"
 796      6F7200
 797              	.LASF35:
 798 004f 73706565 		.ascii	"speedRange\000"
 798      6452616E 
 798      676500
 799              	.LASF22:
 800 005a 706F6C65 		.ascii	"polePairs\000"
 800      50616972 
 800      7300
 801              	.LASF33:
 802 0064 6C6F7756 		.ascii	"lowVoltCounter\000"
 802      6F6C7443 
 802      6F756E74 
 802      657200
 803              	.LASF43:
 804 0073 566F6C74 		.ascii	"VoltageCheck\000"
 804      61676543 
 804      6865636B 
 804      00
 805              	.LASF17:
 806 0080 67656172 		.ascii	"gearRatio\000"
 806      52617469 
 806      6F00
 807              	.LASF9:
 808 008a 75696E74 		.ascii	"uint8\000"
 808      3800
 809              	.LASF37:
 810 0090 6572726F 		.ascii	"errorState\000"
 810      72537461 
 810      746500
 811              	.LASF27:
 812 009b 68616C6C 		.ascii	"hallError\000"
 812      4572726F 
 812      7200
 813              	.LASF5:
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cckoZmZh.s 			page 18


 814 00a5 6C6F6E67 		.ascii	"long unsigned int\000"
 814      20756E73 
 814      69676E65 
 814      6420696E 
 814      7400
 815              	.LASF28:
 816 00b7 6C6F7756 		.ascii	"lowVolt\000"
 816      6F6C7400 
 817              	.LASF3:
 818 00bf 73686F72 		.ascii	"short unsigned int\000"
 818      7420756E 
 818      7369676E 
 818      65642069 
 818      6E7400
 819              	.LASF39:
 820 00d2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 820      43313120 
 820      352E342E 
 820      31203230 
 820      31363036 
 821 0105 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 821      20726576 
 821      6973696F 
 821      6E203233 
 821      37373135 
 822 0138 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 822      66756E63 
 822      74696F6E 
 822      2D736563 
 822      74696F6E 
 823              	.LASF25:
 824 0160 6E6F5F65 		.ascii	"no_error\000"
 824      72726F72 
 824      00
 825              	.LASF1:
 826 0169 756E7369 		.ascii	"unsigned char\000"
 826      676E6564 
 826      20636861 
 826      7200
 827              	.LASF13:
 828 0177 646F7562 		.ascii	"double\000"
 828      6C6500
 829              	.LASF2:
 830 017e 73686F72 		.ascii	"short int\000"
 830      7420696E 
 830      7400
 831              	.LASF32:
 832 0188 68696768 		.ascii	"highVoltCounter\000"
 832      566F6C74 
 832      436F756E 
 832      74657200 
 833              	.LASF10:
 834 0198 75696E74 		.ascii	"uint16\000"
 834      313600
 835              	.LASF11:
 836 019f 75696E74 		.ascii	"uint32\000"
 836      333200
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cckoZmZh.s 			page 19


 837              	.LASF23:
 838 01a6 6D617843 		.ascii	"maxCurr\000"
 838      75727200 
 839              	.LASF8:
 840 01ae 756E7369 		.ascii	"unsigned int\000"
 840      676E6564 
 840      20696E74 
 840      00
 841              	.LASF44:
 842 01bb 52656164 		.ascii	"ReadRpmRef\000"
 842      52706D52 
 842      656600
 843              	.LASF7:
 844 01c6 6C6F6E67 		.ascii	"long long unsigned int\000"
 844      206C6F6E 
 844      6720756E 
 844      7369676E 
 844      65642069 
 845              	.LASF29:
 846 01dd 68696768 		.ascii	"highVolt\000"
 846      566F6C74 
 846      00
 847              	.LASF40:
 848 01e6 67657476 		.ascii	"getvalue.c\000"
 848      616C7565 
 848      2E6300
 849              	.LASF31:
 850 01f1 61646352 		.ascii	"adcResult\000"
 850      6573756C 
 850      7400
 851              	.LASF16:
 852 01fb 73697A65 		.ascii	"sizetype\000"
 852      74797065 
 852      00
 853              	.LASF41:
 854 0204 433A5C55 		.ascii	"C:\\Users\\IlyR\\OneDrive - The University of Manch"
 854      73657273 
 854      5C496C79 
 854      525C4F6E 
 854      65447269 
 855 0234 65737465 		.ascii	"ester\\EEE MTE SEM2\\3YP\\control\\speed_control_v1"
 855      725C4545 
 855      45204D54 
 855      45205345 
 855      4D325C33 
 856 0263 5C53656E 		.ascii	"\\Sensored BLDC Motor Control\\Sensored BLDC Motor "
 856      736F7265 
 856      6420424C 
 856      4443204D 
 856      6F746F72 
 857 0294 436F6E74 		.ascii	"Control.cydsn\000"
 857      726F6C2E 
 857      63796473 
 857      6E00
 858              	.LASF14:
 859 02a2 63686172 		.ascii	"char\000"
 859      00
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\cckoZmZh.s 			page 20


 860              	.LASF24:
 861 02a7 55495F44 		.ascii	"UI_DATA\000"
 861      41544100 
 862              	.LASF18:
 863 02af 73706565 		.ascii	"speedRpm\000"
 863      6452706D 
 863      00
 864              	.LASF34:
 865 02b8 73706565 		.ascii	"speedSampleCur\000"
 865      6453616D 
 865      706C6543 
 865      757200
 866              	.LASF4:
 867 02c7 6C6F6E67 		.ascii	"long int\000"
 867      20696E74 
 867      00
 868              	.LASF15:
 869 02d0 6C6F6E67 		.ascii	"long double\000"
 869      20646F75 
 869      626C6500 
 870              	.LASF0:
 871 02dc 7369676E 		.ascii	"signed char\000"
 871      65642063 
 871      68617200 
 872              	.LASF26:
 873 02e8 6F766572 		.ascii	"overCur\000"
 873      43757200 
 874              	.LASF36:
 875 02f0 73706565 		.ascii	"speedGiven\000"
 875      64476976 
 875      656E00
 876              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
