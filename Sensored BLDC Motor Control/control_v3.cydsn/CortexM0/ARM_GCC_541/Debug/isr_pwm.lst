ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"isr_pwm.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.isr_pwm_Start,"ax",%progbits
  20              		.align	2
  21              		.global	isr_pwm_Start
  22              		.code	16
  23              		.thumb_func
  24              		.type	isr_pwm_Start, %function
  25              	isr_pwm_Start:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\isr_pwm.c"
   1:Generated_Source\PSoC4/isr_pwm.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/isr_pwm.c **** * File Name: isr_pwm.c  
   3:Generated_Source\PSoC4/isr_pwm.c **** * Version 1.70
   4:Generated_Source\PSoC4/isr_pwm.c **** *
   5:Generated_Source\PSoC4/isr_pwm.c **** *  Description:
   6:Generated_Source\PSoC4/isr_pwm.c **** *   API for controlling the state of an interrupt.
   7:Generated_Source\PSoC4/isr_pwm.c **** *
   8:Generated_Source\PSoC4/isr_pwm.c **** *
   9:Generated_Source\PSoC4/isr_pwm.c **** *  Note:
  10:Generated_Source\PSoC4/isr_pwm.c **** *
  11:Generated_Source\PSoC4/isr_pwm.c **** ********************************************************************************
  12:Generated_Source\PSoC4/isr_pwm.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/isr_pwm.c **** * You may use this file only in accordance with the license, terms, conditions, 
  14:Generated_Source\PSoC4/isr_pwm.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  15:Generated_Source\PSoC4/isr_pwm.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/isr_pwm.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/isr_pwm.c **** 
  18:Generated_Source\PSoC4/isr_pwm.c **** 
  19:Generated_Source\PSoC4/isr_pwm.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC4/isr_pwm.c **** #include <CyLib.h>
  21:Generated_Source\PSoC4/isr_pwm.c **** #include <isr_pwm.h>
  22:Generated_Source\PSoC4/isr_pwm.c **** 
  23:Generated_Source\PSoC4/isr_pwm.c **** 
  24:Generated_Source\PSoC4/isr_pwm.c **** #if !defined(isr_pwm__REMOVED) /* Check for removal by optimization */
  25:Generated_Source\PSoC4/isr_pwm.c **** 
  26:Generated_Source\PSoC4/isr_pwm.c **** /*******************************************************************************
  27:Generated_Source\PSoC4/isr_pwm.c **** *  Place your includes, defines and code here 
  28:Generated_Source\PSoC4/isr_pwm.c **** ********************************************************************************/
  29:Generated_Source\PSoC4/isr_pwm.c **** /* `#START isr_pwm_intc` */
  30:Generated_Source\PSoC4/isr_pwm.c **** 
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 2


  31:Generated_Source\PSoC4/isr_pwm.c **** /* `#END` */
  32:Generated_Source\PSoC4/isr_pwm.c **** 
  33:Generated_Source\PSoC4/isr_pwm.c **** extern cyisraddress CyRamVectors[CYINT_IRQ_BASE + CY_NUM_INTERRUPTS];
  34:Generated_Source\PSoC4/isr_pwm.c **** 
  35:Generated_Source\PSoC4/isr_pwm.c **** /* Declared in startup, used to set unused interrupts to. */
  36:Generated_Source\PSoC4/isr_pwm.c **** CY_ISR_PROTO(IntDefaultHandler);
  37:Generated_Source\PSoC4/isr_pwm.c **** 
  38:Generated_Source\PSoC4/isr_pwm.c **** 
  39:Generated_Source\PSoC4/isr_pwm.c **** /*******************************************************************************
  40:Generated_Source\PSoC4/isr_pwm.c **** * Function Name: isr_pwm_Start
  41:Generated_Source\PSoC4/isr_pwm.c **** ********************************************************************************
  42:Generated_Source\PSoC4/isr_pwm.c **** *
  43:Generated_Source\PSoC4/isr_pwm.c **** * Summary:
  44:Generated_Source\PSoC4/isr_pwm.c **** *  Set up the interrupt and enable it. This function disables the interrupt, 
  45:Generated_Source\PSoC4/isr_pwm.c **** *  sets the default interrupt vector, sets the priority from the value in the
  46:Generated_Source\PSoC4/isr_pwm.c **** *  Design Wide Resources Interrupt Editor, then enables the interrupt to the 
  47:Generated_Source\PSoC4/isr_pwm.c **** *  interrupt controller.
  48:Generated_Source\PSoC4/isr_pwm.c **** *
  49:Generated_Source\PSoC4/isr_pwm.c **** * Parameters:  
  50:Generated_Source\PSoC4/isr_pwm.c **** *   None
  51:Generated_Source\PSoC4/isr_pwm.c **** *
  52:Generated_Source\PSoC4/isr_pwm.c **** * Return:
  53:Generated_Source\PSoC4/isr_pwm.c **** *   None
  54:Generated_Source\PSoC4/isr_pwm.c **** *
  55:Generated_Source\PSoC4/isr_pwm.c **** *******************************************************************************/
  56:Generated_Source\PSoC4/isr_pwm.c **** void isr_pwm_Start(void)
  57:Generated_Source\PSoC4/isr_pwm.c **** {
  28              		.loc 1 57 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  58:Generated_Source\PSoC4/isr_pwm.c ****     /* For all we know the interrupt is active. */
  59:Generated_Source\PSoC4/isr_pwm.c ****     isr_pwm_Disable();
  38              		.loc 1 59 0
  39 0004 FFF7FEFF 		bl	isr_pwm_Disable
  60:Generated_Source\PSoC4/isr_pwm.c **** 
  61:Generated_Source\PSoC4/isr_pwm.c ****     /* Set the ISR to point to the isr_pwm Interrupt. */
  62:Generated_Source\PSoC4/isr_pwm.c ****     isr_pwm_SetVector(&isr_pwm_Interrupt);
  40              		.loc 1 62 0
  41 0008 054B     		ldr	r3, .L2
  42 000a 1800     		movs	r0, r3
  43 000c FFF7FEFF 		bl	isr_pwm_SetVector
  63:Generated_Source\PSoC4/isr_pwm.c **** 
  64:Generated_Source\PSoC4/isr_pwm.c ****     /* Set the priority. */
  65:Generated_Source\PSoC4/isr_pwm.c ****     isr_pwm_SetPriority((uint8)isr_pwm_INTC_PRIOR_NUMBER);
  44              		.loc 1 65 0
  45 0010 0320     		movs	r0, #3
  46 0012 FFF7FEFF 		bl	isr_pwm_SetPriority
  66:Generated_Source\PSoC4/isr_pwm.c **** 
  67:Generated_Source\PSoC4/isr_pwm.c ****     /* Enable it. */
  68:Generated_Source\PSoC4/isr_pwm.c ****     isr_pwm_Enable();
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 3


  47              		.loc 1 68 0
  48 0016 FFF7FEFF 		bl	isr_pwm_Enable
  69:Generated_Source\PSoC4/isr_pwm.c **** }
  49              		.loc 1 69 0
  50 001a C046     		nop
  51 001c BD46     		mov	sp, r7
  52              		@ sp needed
  53 001e 80BD     		pop	{r7, pc}
  54              	.L3:
  55              		.align	2
  56              	.L2:
  57 0020 00000000 		.word	isr_pwm_Interrupt
  58              		.cfi_endproc
  59              	.LFE0:
  60              		.size	isr_pwm_Start, .-isr_pwm_Start
  61              		.section	.text.isr_pwm_StartEx,"ax",%progbits
  62              		.align	2
  63              		.global	isr_pwm_StartEx
  64              		.code	16
  65              		.thumb_func
  66              		.type	isr_pwm_StartEx, %function
  67              	isr_pwm_StartEx:
  68              	.LFB1:
  70:Generated_Source\PSoC4/isr_pwm.c **** 
  71:Generated_Source\PSoC4/isr_pwm.c **** 
  72:Generated_Source\PSoC4/isr_pwm.c **** /*******************************************************************************
  73:Generated_Source\PSoC4/isr_pwm.c **** * Function Name: isr_pwm_StartEx
  74:Generated_Source\PSoC4/isr_pwm.c **** ********************************************************************************
  75:Generated_Source\PSoC4/isr_pwm.c **** *
  76:Generated_Source\PSoC4/isr_pwm.c **** * Summary:
  77:Generated_Source\PSoC4/isr_pwm.c **** *  Sets up the interrupt and enables it. This function disables the interrupt,
  78:Generated_Source\PSoC4/isr_pwm.c **** *  sets the interrupt vector based on the address passed in, sets the priority 
  79:Generated_Source\PSoC4/isr_pwm.c **** *  from the value in the Design Wide Resources Interrupt Editor, then enables 
  80:Generated_Source\PSoC4/isr_pwm.c **** *  the interrupt to the interrupt controller.
  81:Generated_Source\PSoC4/isr_pwm.c **** *  
  82:Generated_Source\PSoC4/isr_pwm.c **** *  When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
  83:Generated_Source\PSoC4/isr_pwm.c **** *  used to provide consistent definition across compilers:
  84:Generated_Source\PSoC4/isr_pwm.c **** *  
  85:Generated_Source\PSoC4/isr_pwm.c **** *  Function definition example:
  86:Generated_Source\PSoC4/isr_pwm.c **** *   CY_ISR(MyISR)
  87:Generated_Source\PSoC4/isr_pwm.c **** *   {
  88:Generated_Source\PSoC4/isr_pwm.c **** *   }
  89:Generated_Source\PSoC4/isr_pwm.c **** *   Function prototype example:
  90:Generated_Source\PSoC4/isr_pwm.c **** *   CY_ISR_PROTO(MyISR);
  91:Generated_Source\PSoC4/isr_pwm.c **** *
  92:Generated_Source\PSoC4/isr_pwm.c **** * Parameters:  
  93:Generated_Source\PSoC4/isr_pwm.c **** *   address: Address of the ISR to set in the interrupt vector table.
  94:Generated_Source\PSoC4/isr_pwm.c **** *
  95:Generated_Source\PSoC4/isr_pwm.c **** * Return:
  96:Generated_Source\PSoC4/isr_pwm.c **** *   None
  97:Generated_Source\PSoC4/isr_pwm.c **** *
  98:Generated_Source\PSoC4/isr_pwm.c **** *******************************************************************************/
  99:Generated_Source\PSoC4/isr_pwm.c **** void isr_pwm_StartEx(cyisraddress address)
 100:Generated_Source\PSoC4/isr_pwm.c **** {
  69              		.loc 1 100 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 4


  72              		@ frame_needed = 1, uses_anonymous_args = 0
  73 0000 80B5     		push	{r7, lr}
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 7, -8
  76              		.cfi_offset 14, -4
  77 0002 82B0     		sub	sp, sp, #8
  78              		.cfi_def_cfa_offset 16
  79 0004 00AF     		add	r7, sp, #0
  80              		.cfi_def_cfa_register 7
  81 0006 7860     		str	r0, [r7, #4]
 101:Generated_Source\PSoC4/isr_pwm.c ****     /* For all we know the interrupt is active. */
 102:Generated_Source\PSoC4/isr_pwm.c ****     isr_pwm_Disable();
  82              		.loc 1 102 0
  83 0008 FFF7FEFF 		bl	isr_pwm_Disable
 103:Generated_Source\PSoC4/isr_pwm.c **** 
 104:Generated_Source\PSoC4/isr_pwm.c ****     /* Set the ISR to point to the isr_pwm Interrupt. */
 105:Generated_Source\PSoC4/isr_pwm.c ****     isr_pwm_SetVector(address);
  84              		.loc 1 105 0
  85 000c 7B68     		ldr	r3, [r7, #4]
  86 000e 1800     		movs	r0, r3
  87 0010 FFF7FEFF 		bl	isr_pwm_SetVector
 106:Generated_Source\PSoC4/isr_pwm.c **** 
 107:Generated_Source\PSoC4/isr_pwm.c ****     /* Set the priority. */
 108:Generated_Source\PSoC4/isr_pwm.c ****     isr_pwm_SetPriority((uint8)isr_pwm_INTC_PRIOR_NUMBER);
  88              		.loc 1 108 0
  89 0014 0320     		movs	r0, #3
  90 0016 FFF7FEFF 		bl	isr_pwm_SetPriority
 109:Generated_Source\PSoC4/isr_pwm.c **** 
 110:Generated_Source\PSoC4/isr_pwm.c ****     /* Enable it. */
 111:Generated_Source\PSoC4/isr_pwm.c ****     isr_pwm_Enable();
  91              		.loc 1 111 0
  92 001a FFF7FEFF 		bl	isr_pwm_Enable
 112:Generated_Source\PSoC4/isr_pwm.c **** }
  93              		.loc 1 112 0
  94 001e C046     		nop
  95 0020 BD46     		mov	sp, r7
  96 0022 02B0     		add	sp, sp, #8
  97              		@ sp needed
  98 0024 80BD     		pop	{r7, pc}
  99              		.cfi_endproc
 100              	.LFE1:
 101              		.size	isr_pwm_StartEx, .-isr_pwm_StartEx
 102 0026 C046     		.section	.text.isr_pwm_Stop,"ax",%progbits
 103              		.align	2
 104              		.global	isr_pwm_Stop
 105              		.code	16
 106              		.thumb_func
 107              		.type	isr_pwm_Stop, %function
 108              	isr_pwm_Stop:
 109              	.LFB2:
 113:Generated_Source\PSoC4/isr_pwm.c **** 
 114:Generated_Source\PSoC4/isr_pwm.c **** 
 115:Generated_Source\PSoC4/isr_pwm.c **** /*******************************************************************************
 116:Generated_Source\PSoC4/isr_pwm.c **** * Function Name: isr_pwm_Stop
 117:Generated_Source\PSoC4/isr_pwm.c **** ********************************************************************************
 118:Generated_Source\PSoC4/isr_pwm.c **** *
 119:Generated_Source\PSoC4/isr_pwm.c **** * Summary:
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 5


 120:Generated_Source\PSoC4/isr_pwm.c **** *   Disables and removes the interrupt.
 121:Generated_Source\PSoC4/isr_pwm.c **** *
 122:Generated_Source\PSoC4/isr_pwm.c **** * Parameters:  
 123:Generated_Source\PSoC4/isr_pwm.c **** *   None
 124:Generated_Source\PSoC4/isr_pwm.c **** *
 125:Generated_Source\PSoC4/isr_pwm.c **** * Return:
 126:Generated_Source\PSoC4/isr_pwm.c **** *   None
 127:Generated_Source\PSoC4/isr_pwm.c **** *
 128:Generated_Source\PSoC4/isr_pwm.c **** *******************************************************************************/
 129:Generated_Source\PSoC4/isr_pwm.c **** void isr_pwm_Stop(void)
 130:Generated_Source\PSoC4/isr_pwm.c **** {
 110              		.loc 1 130 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 1, uses_anonymous_args = 0
 114 0000 80B5     		push	{r7, lr}
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 7, -8
 117              		.cfi_offset 14, -4
 118 0002 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
 131:Generated_Source\PSoC4/isr_pwm.c ****     /* Disable this interrupt. */
 132:Generated_Source\PSoC4/isr_pwm.c ****     isr_pwm_Disable();
 120              		.loc 1 132 0
 121 0004 FFF7FEFF 		bl	isr_pwm_Disable
 133:Generated_Source\PSoC4/isr_pwm.c **** 
 134:Generated_Source\PSoC4/isr_pwm.c ****     /* Set the ISR to point to the passive one. */
 135:Generated_Source\PSoC4/isr_pwm.c ****     isr_pwm_SetVector(&IntDefaultHandler);
 122              		.loc 1 135 0
 123 0008 034B     		ldr	r3, .L6
 124 000a 1800     		movs	r0, r3
 125 000c FFF7FEFF 		bl	isr_pwm_SetVector
 136:Generated_Source\PSoC4/isr_pwm.c **** }
 126              		.loc 1 136 0
 127 0010 C046     		nop
 128 0012 BD46     		mov	sp, r7
 129              		@ sp needed
 130 0014 80BD     		pop	{r7, pc}
 131              	.L7:
 132 0016 C046     		.align	2
 133              	.L6:
 134 0018 00000000 		.word	IntDefaultHandler
 135              		.cfi_endproc
 136              	.LFE2:
 137              		.size	isr_pwm_Stop, .-isr_pwm_Stop
 138              		.section	.text.isr_pwm_Interrupt,"ax",%progbits
 139              		.align	2
 140              		.global	isr_pwm_Interrupt
 141              		.code	16
 142              		.thumb_func
 143              		.type	isr_pwm_Interrupt, %function
 144              	isr_pwm_Interrupt:
 145              	.LFB3:
 137:Generated_Source\PSoC4/isr_pwm.c **** 
 138:Generated_Source\PSoC4/isr_pwm.c **** 
 139:Generated_Source\PSoC4/isr_pwm.c **** /*******************************************************************************
 140:Generated_Source\PSoC4/isr_pwm.c **** * Function Name: isr_pwm_Interrupt
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 6


 141:Generated_Source\PSoC4/isr_pwm.c **** ********************************************************************************
 142:Generated_Source\PSoC4/isr_pwm.c **** *
 143:Generated_Source\PSoC4/isr_pwm.c **** * Summary:
 144:Generated_Source\PSoC4/isr_pwm.c **** *   The default Interrupt Service Routine for isr_pwm.
 145:Generated_Source\PSoC4/isr_pwm.c **** *
 146:Generated_Source\PSoC4/isr_pwm.c **** *   Add custom code between the START and END comments to keep the next version
 147:Generated_Source\PSoC4/isr_pwm.c **** *   of this file from over-writing your code.
 148:Generated_Source\PSoC4/isr_pwm.c **** *
 149:Generated_Source\PSoC4/isr_pwm.c **** *   Note You may use either the default ISR by using this API, or you may define
 150:Generated_Source\PSoC4/isr_pwm.c **** *   your own separate ISR through ISR_StartEx().
 151:Generated_Source\PSoC4/isr_pwm.c **** *
 152:Generated_Source\PSoC4/isr_pwm.c **** * Parameters:  
 153:Generated_Source\PSoC4/isr_pwm.c **** *   None
 154:Generated_Source\PSoC4/isr_pwm.c **** *
 155:Generated_Source\PSoC4/isr_pwm.c **** * Return:
 156:Generated_Source\PSoC4/isr_pwm.c **** *   None
 157:Generated_Source\PSoC4/isr_pwm.c **** *
 158:Generated_Source\PSoC4/isr_pwm.c **** *******************************************************************************/
 159:Generated_Source\PSoC4/isr_pwm.c **** CY_ISR(isr_pwm_Interrupt)
 160:Generated_Source\PSoC4/isr_pwm.c **** {
 146              		.loc 1 160 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 1, uses_anonymous_args = 0
 150 0000 80B5     		push	{r7, lr}
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 00AF     		add	r7, sp, #0
 155              		.cfi_def_cfa_register 7
 161:Generated_Source\PSoC4/isr_pwm.c ****     #ifdef isr_pwm_INTERRUPT_INTERRUPT_CALLBACK
 162:Generated_Source\PSoC4/isr_pwm.c ****         isr_pwm_Interrupt_InterruptCallback();
 163:Generated_Source\PSoC4/isr_pwm.c ****     #endif /* isr_pwm_INTERRUPT_INTERRUPT_CALLBACK */ 
 164:Generated_Source\PSoC4/isr_pwm.c **** 
 165:Generated_Source\PSoC4/isr_pwm.c ****     /*  Place your Interrupt code here. */
 166:Generated_Source\PSoC4/isr_pwm.c ****     /* `#START isr_pwm_Interrupt` */
 167:Generated_Source\PSoC4/isr_pwm.c **** 
 168:Generated_Source\PSoC4/isr_pwm.c ****     /* `#END` */
 169:Generated_Source\PSoC4/isr_pwm.c **** }
 156              		.loc 1 169 0
 157 0004 C046     		nop
 158 0006 BD46     		mov	sp, r7
 159              		@ sp needed
 160 0008 80BD     		pop	{r7, pc}
 161              		.cfi_endproc
 162              	.LFE3:
 163              		.size	isr_pwm_Interrupt, .-isr_pwm_Interrupt
 164              		.section	.text.isr_pwm_SetVector,"ax",%progbits
 165              		.align	2
 166              		.global	isr_pwm_SetVector
 167              		.code	16
 168              		.thumb_func
 169              		.type	isr_pwm_SetVector, %function
 170              	isr_pwm_SetVector:
 171              	.LFB4:
 170:Generated_Source\PSoC4/isr_pwm.c **** 
 171:Generated_Source\PSoC4/isr_pwm.c **** 
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 7


 172:Generated_Source\PSoC4/isr_pwm.c **** /*******************************************************************************
 173:Generated_Source\PSoC4/isr_pwm.c **** * Function Name: isr_pwm_SetVector
 174:Generated_Source\PSoC4/isr_pwm.c **** ********************************************************************************
 175:Generated_Source\PSoC4/isr_pwm.c **** *
 176:Generated_Source\PSoC4/isr_pwm.c **** * Summary:
 177:Generated_Source\PSoC4/isr_pwm.c **** *   Change the ISR vector for the Interrupt. Note calling isr_pwm_Start
 178:Generated_Source\PSoC4/isr_pwm.c **** *   will override any effect this method would have had. To set the vector 
 179:Generated_Source\PSoC4/isr_pwm.c **** *   before the component has been started use isr_pwm_StartEx instead.
 180:Generated_Source\PSoC4/isr_pwm.c **** * 
 181:Generated_Source\PSoC4/isr_pwm.c **** *   When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
 182:Generated_Source\PSoC4/isr_pwm.c **** *   used to provide consistent definition across compilers:
 183:Generated_Source\PSoC4/isr_pwm.c **** *
 184:Generated_Source\PSoC4/isr_pwm.c **** *   Function definition example:
 185:Generated_Source\PSoC4/isr_pwm.c **** *   CY_ISR(MyISR)
 186:Generated_Source\PSoC4/isr_pwm.c **** *   {
 187:Generated_Source\PSoC4/isr_pwm.c **** *   }
 188:Generated_Source\PSoC4/isr_pwm.c **** *
 189:Generated_Source\PSoC4/isr_pwm.c **** *   Function prototype example:
 190:Generated_Source\PSoC4/isr_pwm.c **** *     CY_ISR_PROTO(MyISR);
 191:Generated_Source\PSoC4/isr_pwm.c **** *
 192:Generated_Source\PSoC4/isr_pwm.c **** * Parameters:
 193:Generated_Source\PSoC4/isr_pwm.c **** *   address: Address of the ISR to set in the interrupt vector table.
 194:Generated_Source\PSoC4/isr_pwm.c **** *
 195:Generated_Source\PSoC4/isr_pwm.c **** * Return:
 196:Generated_Source\PSoC4/isr_pwm.c **** *   None
 197:Generated_Source\PSoC4/isr_pwm.c **** *
 198:Generated_Source\PSoC4/isr_pwm.c **** *******************************************************************************/
 199:Generated_Source\PSoC4/isr_pwm.c **** void isr_pwm_SetVector(cyisraddress address)
 200:Generated_Source\PSoC4/isr_pwm.c **** {
 172              		.loc 1 200 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 8
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176 0000 80B5     		push	{r7, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 7, -8
 179              		.cfi_offset 14, -4
 180 0002 82B0     		sub	sp, sp, #8
 181              		.cfi_def_cfa_offset 16
 182 0004 00AF     		add	r7, sp, #0
 183              		.cfi_def_cfa_register 7
 184 0006 7860     		str	r0, [r7, #4]
 201:Generated_Source\PSoC4/isr_pwm.c ****     CyRamVectors[CYINT_IRQ_BASE + isr_pwm__INTC_NUMBER] = address;
 185              		.loc 1 201 0
 186 0008 034B     		ldr	r3, .L10
 187 000a 8021     		movs	r1, #128
 188 000c 7A68     		ldr	r2, [r7, #4]
 189 000e 5A50     		str	r2, [r3, r1]
 202:Generated_Source\PSoC4/isr_pwm.c **** }
 190              		.loc 1 202 0
 191 0010 C046     		nop
 192 0012 BD46     		mov	sp, r7
 193 0014 02B0     		add	sp, sp, #8
 194              		@ sp needed
 195 0016 80BD     		pop	{r7, pc}
 196              	.L11:
 197              		.align	2
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 8


 198              	.L10:
 199 0018 00000000 		.word	CyRamVectors
 200              		.cfi_endproc
 201              	.LFE4:
 202              		.size	isr_pwm_SetVector, .-isr_pwm_SetVector
 203              		.section	.text.isr_pwm_GetVector,"ax",%progbits
 204              		.align	2
 205              		.global	isr_pwm_GetVector
 206              		.code	16
 207              		.thumb_func
 208              		.type	isr_pwm_GetVector, %function
 209              	isr_pwm_GetVector:
 210              	.LFB5:
 203:Generated_Source\PSoC4/isr_pwm.c **** 
 204:Generated_Source\PSoC4/isr_pwm.c **** 
 205:Generated_Source\PSoC4/isr_pwm.c **** /*******************************************************************************
 206:Generated_Source\PSoC4/isr_pwm.c **** * Function Name: isr_pwm_GetVector
 207:Generated_Source\PSoC4/isr_pwm.c **** ********************************************************************************
 208:Generated_Source\PSoC4/isr_pwm.c **** *
 209:Generated_Source\PSoC4/isr_pwm.c **** * Summary:
 210:Generated_Source\PSoC4/isr_pwm.c **** *   Gets the "address" of the current ISR vector for the Interrupt.
 211:Generated_Source\PSoC4/isr_pwm.c **** *
 212:Generated_Source\PSoC4/isr_pwm.c **** * Parameters:
 213:Generated_Source\PSoC4/isr_pwm.c **** *   None
 214:Generated_Source\PSoC4/isr_pwm.c **** *
 215:Generated_Source\PSoC4/isr_pwm.c **** * Return:
 216:Generated_Source\PSoC4/isr_pwm.c **** *   Address of the ISR in the interrupt vector table.
 217:Generated_Source\PSoC4/isr_pwm.c **** *
 218:Generated_Source\PSoC4/isr_pwm.c **** *******************************************************************************/
 219:Generated_Source\PSoC4/isr_pwm.c **** cyisraddress isr_pwm_GetVector(void)
 220:Generated_Source\PSoC4/isr_pwm.c **** {
 211              		.loc 1 220 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 1, uses_anonymous_args = 0
 215 0000 80B5     		push	{r7, lr}
 216              		.cfi_def_cfa_offset 8
 217              		.cfi_offset 7, -8
 218              		.cfi_offset 14, -4
 219 0002 00AF     		add	r7, sp, #0
 220              		.cfi_def_cfa_register 7
 221:Generated_Source\PSoC4/isr_pwm.c ****     return CyRamVectors[CYINT_IRQ_BASE + isr_pwm__INTC_NUMBER];
 221              		.loc 1 221 0
 222 0004 024B     		ldr	r3, .L14
 223 0006 8022     		movs	r2, #128
 224 0008 9B58     		ldr	r3, [r3, r2]
 222:Generated_Source\PSoC4/isr_pwm.c **** }
 225              		.loc 1 222 0
 226 000a 1800     		movs	r0, r3
 227 000c BD46     		mov	sp, r7
 228              		@ sp needed
 229 000e 80BD     		pop	{r7, pc}
 230              	.L15:
 231              		.align	2
 232              	.L14:
 233 0010 00000000 		.word	CyRamVectors
 234              		.cfi_endproc
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 9


 235              	.LFE5:
 236              		.size	isr_pwm_GetVector, .-isr_pwm_GetVector
 237              		.section	.text.isr_pwm_SetPriority,"ax",%progbits
 238              		.align	2
 239              		.global	isr_pwm_SetPriority
 240              		.code	16
 241              		.thumb_func
 242              		.type	isr_pwm_SetPriority, %function
 243              	isr_pwm_SetPriority:
 244              	.LFB6:
 223:Generated_Source\PSoC4/isr_pwm.c **** 
 224:Generated_Source\PSoC4/isr_pwm.c **** 
 225:Generated_Source\PSoC4/isr_pwm.c **** /*******************************************************************************
 226:Generated_Source\PSoC4/isr_pwm.c **** * Function Name: isr_pwm_SetPriority
 227:Generated_Source\PSoC4/isr_pwm.c **** ********************************************************************************
 228:Generated_Source\PSoC4/isr_pwm.c **** *
 229:Generated_Source\PSoC4/isr_pwm.c **** * Summary:
 230:Generated_Source\PSoC4/isr_pwm.c **** *   Sets the Priority of the Interrupt. 
 231:Generated_Source\PSoC4/isr_pwm.c **** *
 232:Generated_Source\PSoC4/isr_pwm.c **** *   Note calling isr_pwm_Start or isr_pwm_StartEx will 
 233:Generated_Source\PSoC4/isr_pwm.c **** *   override any effect this API would have had. This API should only be called
 234:Generated_Source\PSoC4/isr_pwm.c **** *   after isr_pwm_Start or isr_pwm_StartEx has been called. 
 235:Generated_Source\PSoC4/isr_pwm.c **** *   To set the initial priority for the component, use the Design-Wide Resources
 236:Generated_Source\PSoC4/isr_pwm.c **** *   Interrupt Editor.
 237:Generated_Source\PSoC4/isr_pwm.c **** *
 238:Generated_Source\PSoC4/isr_pwm.c **** *   Note This API has no effect on Non-maskable interrupt NMI).
 239:Generated_Source\PSoC4/isr_pwm.c **** *
 240:Generated_Source\PSoC4/isr_pwm.c **** * Parameters:
 241:Generated_Source\PSoC4/isr_pwm.c **** *   priority: Priority of the interrupt, 0 being the highest priority
 242:Generated_Source\PSoC4/isr_pwm.c **** *             PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 243:Generated_Source\PSoC4/isr_pwm.c **** *             PSoC 4: Priority is from 0 to 3.
 244:Generated_Source\PSoC4/isr_pwm.c **** *
 245:Generated_Source\PSoC4/isr_pwm.c **** * Return:
 246:Generated_Source\PSoC4/isr_pwm.c **** *   None
 247:Generated_Source\PSoC4/isr_pwm.c **** *
 248:Generated_Source\PSoC4/isr_pwm.c **** *******************************************************************************/
 249:Generated_Source\PSoC4/isr_pwm.c **** void isr_pwm_SetPriority(uint8 priority)
 250:Generated_Source\PSoC4/isr_pwm.c **** {
 245              		.loc 1 250 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 16
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249 0000 90B5     		push	{r4, r7, lr}
 250              		.cfi_def_cfa_offset 12
 251              		.cfi_offset 4, -12
 252              		.cfi_offset 7, -8
 253              		.cfi_offset 14, -4
 254 0002 85B0     		sub	sp, sp, #20
 255              		.cfi_def_cfa_offset 32
 256 0004 00AF     		add	r7, sp, #0
 257              		.cfi_def_cfa_register 7
 258 0006 0200     		movs	r2, r0
 259 0008 FB1D     		adds	r3, r7, #7
 260 000a 1A70     		strb	r2, [r3]
 251:Generated_Source\PSoC4/isr_pwm.c **** 	uint8 interruptState;
 252:Generated_Source\PSoC4/isr_pwm.c ****     uint32 priorityOffset = ((isr_pwm__INTC_NUMBER % 4u) * 8u) + 6u;
 261              		.loc 1 252 0
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 10


 262 000c 0623     		movs	r3, #6
 263 000e FB60     		str	r3, [r7, #12]
 253:Generated_Source\PSoC4/isr_pwm.c ****     
 254:Generated_Source\PSoC4/isr_pwm.c **** 	interruptState = CyEnterCriticalSection();
 264              		.loc 1 254 0
 265 0010 0B23     		movs	r3, #11
 266 0012 FC18     		adds	r4, r7, r3
 267 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 268 0018 0300     		movs	r3, r0
 269 001a 2370     		strb	r3, [r4]
 255:Generated_Source\PSoC4/isr_pwm.c ****     *isr_pwm_INTC_PRIOR = (*isr_pwm_INTC_PRIOR & (uint32)(~isr_pwm__INTC_PRIOR_MASK)) |
 270              		.loc 1 255 0
 271 001c 0B4B     		ldr	r3, .L17
 272 001e 0B4A     		ldr	r2, .L17
 273 0020 1268     		ldr	r2, [r2]
 274 0022 C021     		movs	r1, #192
 275 0024 8A43     		bics	r2, r1
 276 0026 1100     		movs	r1, r2
 256:Generated_Source\PSoC4/isr_pwm.c ****                                     ((uint32)priority << priorityOffset);
 277              		.loc 1 256 0
 278 0028 FA1D     		adds	r2, r7, #7
 279 002a 1078     		ldrb	r0, [r2]
 280 002c FA68     		ldr	r2, [r7, #12]
 281 002e 9040     		lsls	r0, r0, r2
 282 0030 0200     		movs	r2, r0
 255:Generated_Source\PSoC4/isr_pwm.c ****     *isr_pwm_INTC_PRIOR = (*isr_pwm_INTC_PRIOR & (uint32)(~isr_pwm__INTC_PRIOR_MASK)) |
 283              		.loc 1 255 0
 284 0032 0A43     		orrs	r2, r1
 285 0034 1A60     		str	r2, [r3]
 257:Generated_Source\PSoC4/isr_pwm.c **** 	CyExitCriticalSection(interruptState);
 286              		.loc 1 257 0
 287 0036 0B23     		movs	r3, #11
 288 0038 FB18     		adds	r3, r7, r3
 289 003a 1B78     		ldrb	r3, [r3]
 290 003c 1800     		movs	r0, r3
 291 003e FFF7FEFF 		bl	CyExitCriticalSection
 258:Generated_Source\PSoC4/isr_pwm.c **** }
 292              		.loc 1 258 0
 293 0042 C046     		nop
 294 0044 BD46     		mov	sp, r7
 295 0046 05B0     		add	sp, sp, #20
 296              		@ sp needed
 297 0048 90BD     		pop	{r4, r7, pc}
 298              	.L18:
 299 004a C046     		.align	2
 300              	.L17:
 301 004c 10E400E0 		.word	-536812528
 302              		.cfi_endproc
 303              	.LFE6:
 304              		.size	isr_pwm_SetPriority, .-isr_pwm_SetPriority
 305              		.section	.text.isr_pwm_GetPriority,"ax",%progbits
 306              		.align	2
 307              		.global	isr_pwm_GetPriority
 308              		.code	16
 309              		.thumb_func
 310              		.type	isr_pwm_GetPriority, %function
 311              	isr_pwm_GetPriority:
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 11


 312              	.LFB7:
 259:Generated_Source\PSoC4/isr_pwm.c **** 
 260:Generated_Source\PSoC4/isr_pwm.c **** 
 261:Generated_Source\PSoC4/isr_pwm.c **** /*******************************************************************************
 262:Generated_Source\PSoC4/isr_pwm.c **** * Function Name: isr_pwm_GetPriority
 263:Generated_Source\PSoC4/isr_pwm.c **** ********************************************************************************
 264:Generated_Source\PSoC4/isr_pwm.c **** *
 265:Generated_Source\PSoC4/isr_pwm.c **** * Summary:
 266:Generated_Source\PSoC4/isr_pwm.c **** *   Gets the Priority of the Interrupt.
 267:Generated_Source\PSoC4/isr_pwm.c **** *
 268:Generated_Source\PSoC4/isr_pwm.c **** * Parameters:
 269:Generated_Source\PSoC4/isr_pwm.c **** *   None
 270:Generated_Source\PSoC4/isr_pwm.c **** *
 271:Generated_Source\PSoC4/isr_pwm.c **** * Return:
 272:Generated_Source\PSoC4/isr_pwm.c **** *   Priority of the interrupt, 0 being the highest priority
 273:Generated_Source\PSoC4/isr_pwm.c **** *    PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 274:Generated_Source\PSoC4/isr_pwm.c **** *    PSoC 4: Priority is from 0 to 3.
 275:Generated_Source\PSoC4/isr_pwm.c **** *
 276:Generated_Source\PSoC4/isr_pwm.c **** *******************************************************************************/
 277:Generated_Source\PSoC4/isr_pwm.c **** uint8 isr_pwm_GetPriority(void)
 278:Generated_Source\PSoC4/isr_pwm.c **** {
 313              		.loc 1 278 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 8
 316              		@ frame_needed = 1, uses_anonymous_args = 0
 317 0000 80B5     		push	{r7, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 7, -8
 320              		.cfi_offset 14, -4
 321 0002 82B0     		sub	sp, sp, #8
 322              		.cfi_def_cfa_offset 16
 323 0004 00AF     		add	r7, sp, #0
 324              		.cfi_def_cfa_register 7
 279:Generated_Source\PSoC4/isr_pwm.c ****     uint32 priority;
 280:Generated_Source\PSoC4/isr_pwm.c **** 	uint32 priorityOffset = ((isr_pwm__INTC_NUMBER % 4u) * 8u) + 6u;
 325              		.loc 1 280 0
 326 0006 0623     		movs	r3, #6
 327 0008 7B60     		str	r3, [r7, #4]
 281:Generated_Source\PSoC4/isr_pwm.c **** 
 282:Generated_Source\PSoC4/isr_pwm.c ****     priority = (*isr_pwm_INTC_PRIOR & isr_pwm__INTC_PRIOR_MASK) >> priorityOffset;
 328              		.loc 1 282 0
 329 000a 074B     		ldr	r3, .L21
 330 000c 1B68     		ldr	r3, [r3]
 331 000e C022     		movs	r2, #192
 332 0010 1A40     		ands	r2, r3
 333 0012 7B68     		ldr	r3, [r7, #4]
 334 0014 DA40     		lsrs	r2, r2, r3
 335 0016 1300     		movs	r3, r2
 336 0018 3B60     		str	r3, [r7]
 283:Generated_Source\PSoC4/isr_pwm.c **** 
 284:Generated_Source\PSoC4/isr_pwm.c ****     return (uint8)priority;
 337              		.loc 1 284 0
 338 001a 3B68     		ldr	r3, [r7]
 339 001c DBB2     		uxtb	r3, r3
 285:Generated_Source\PSoC4/isr_pwm.c **** }
 340              		.loc 1 285 0
 341 001e 1800     		movs	r0, r3
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 12


 342 0020 BD46     		mov	sp, r7
 343 0022 02B0     		add	sp, sp, #8
 344              		@ sp needed
 345 0024 80BD     		pop	{r7, pc}
 346              	.L22:
 347 0026 C046     		.align	2
 348              	.L21:
 349 0028 10E400E0 		.word	-536812528
 350              		.cfi_endproc
 351              	.LFE7:
 352              		.size	isr_pwm_GetPriority, .-isr_pwm_GetPriority
 353              		.section	.text.isr_pwm_Enable,"ax",%progbits
 354              		.align	2
 355              		.global	isr_pwm_Enable
 356              		.code	16
 357              		.thumb_func
 358              		.type	isr_pwm_Enable, %function
 359              	isr_pwm_Enable:
 360              	.LFB8:
 286:Generated_Source\PSoC4/isr_pwm.c **** 
 287:Generated_Source\PSoC4/isr_pwm.c **** 
 288:Generated_Source\PSoC4/isr_pwm.c **** /*******************************************************************************
 289:Generated_Source\PSoC4/isr_pwm.c **** * Function Name: isr_pwm_Enable
 290:Generated_Source\PSoC4/isr_pwm.c **** ********************************************************************************
 291:Generated_Source\PSoC4/isr_pwm.c **** *
 292:Generated_Source\PSoC4/isr_pwm.c **** * Summary:
 293:Generated_Source\PSoC4/isr_pwm.c **** *   Enables the interrupt to the interrupt controller. Do not call this function
 294:Generated_Source\PSoC4/isr_pwm.c **** *   unless ISR_Start() has been called or the functionality of the ISR_Start() 
 295:Generated_Source\PSoC4/isr_pwm.c **** *   function, which sets the vector and the priority, has been called.
 296:Generated_Source\PSoC4/isr_pwm.c **** *
 297:Generated_Source\PSoC4/isr_pwm.c **** * Parameters:
 298:Generated_Source\PSoC4/isr_pwm.c **** *   None
 299:Generated_Source\PSoC4/isr_pwm.c **** *
 300:Generated_Source\PSoC4/isr_pwm.c **** * Return:
 301:Generated_Source\PSoC4/isr_pwm.c **** *   None
 302:Generated_Source\PSoC4/isr_pwm.c **** *
 303:Generated_Source\PSoC4/isr_pwm.c **** *******************************************************************************/
 304:Generated_Source\PSoC4/isr_pwm.c **** void isr_pwm_Enable(void)
 305:Generated_Source\PSoC4/isr_pwm.c **** {
 361              		.loc 1 305 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 1, uses_anonymous_args = 0
 365 0000 80B5     		push	{r7, lr}
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 7, -8
 368              		.cfi_offset 14, -4
 369 0002 00AF     		add	r7, sp, #0
 370              		.cfi_def_cfa_register 7
 306:Generated_Source\PSoC4/isr_pwm.c ****     /* Enable the general interrupt. */
 307:Generated_Source\PSoC4/isr_pwm.c ****     *isr_pwm_INTC_SET_EN = isr_pwm__INTC_MASK;
 371              		.loc 1 307 0
 372 0004 034B     		ldr	r3, .L24
 373 0006 8022     		movs	r2, #128
 374 0008 5202     		lsls	r2, r2, #9
 375 000a 1A60     		str	r2, [r3]
 308:Generated_Source\PSoC4/isr_pwm.c **** }
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 13


 376              		.loc 1 308 0
 377 000c C046     		nop
 378 000e BD46     		mov	sp, r7
 379              		@ sp needed
 380 0010 80BD     		pop	{r7, pc}
 381              	.L25:
 382 0012 C046     		.align	2
 383              	.L24:
 384 0014 00E100E0 		.word	-536813312
 385              		.cfi_endproc
 386              	.LFE8:
 387              		.size	isr_pwm_Enable, .-isr_pwm_Enable
 388              		.section	.text.isr_pwm_GetState,"ax",%progbits
 389              		.align	2
 390              		.global	isr_pwm_GetState
 391              		.code	16
 392              		.thumb_func
 393              		.type	isr_pwm_GetState, %function
 394              	isr_pwm_GetState:
 395              	.LFB9:
 309:Generated_Source\PSoC4/isr_pwm.c **** 
 310:Generated_Source\PSoC4/isr_pwm.c **** 
 311:Generated_Source\PSoC4/isr_pwm.c **** /*******************************************************************************
 312:Generated_Source\PSoC4/isr_pwm.c **** * Function Name: isr_pwm_GetState
 313:Generated_Source\PSoC4/isr_pwm.c **** ********************************************************************************
 314:Generated_Source\PSoC4/isr_pwm.c **** *
 315:Generated_Source\PSoC4/isr_pwm.c **** * Summary:
 316:Generated_Source\PSoC4/isr_pwm.c **** *   Gets the state (enabled, disabled) of the Interrupt.
 317:Generated_Source\PSoC4/isr_pwm.c **** *
 318:Generated_Source\PSoC4/isr_pwm.c **** * Parameters:
 319:Generated_Source\PSoC4/isr_pwm.c **** *   None
 320:Generated_Source\PSoC4/isr_pwm.c **** *
 321:Generated_Source\PSoC4/isr_pwm.c **** * Return:
 322:Generated_Source\PSoC4/isr_pwm.c **** *   1 if enabled, 0 if disabled.
 323:Generated_Source\PSoC4/isr_pwm.c **** *
 324:Generated_Source\PSoC4/isr_pwm.c **** *******************************************************************************/
 325:Generated_Source\PSoC4/isr_pwm.c **** uint8 isr_pwm_GetState(void)
 326:Generated_Source\PSoC4/isr_pwm.c **** {
 396              		.loc 1 326 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 1, uses_anonymous_args = 0
 400 0000 80B5     		push	{r7, lr}
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 7, -8
 403              		.cfi_offset 14, -4
 404 0002 00AF     		add	r7, sp, #0
 405              		.cfi_def_cfa_register 7
 327:Generated_Source\PSoC4/isr_pwm.c ****     /* Get the state of the general interrupt. */
 328:Generated_Source\PSoC4/isr_pwm.c ****     return ((*isr_pwm_INTC_SET_EN & (uint32)isr_pwm__INTC_MASK) != 0u) ? 1u:0u;
 406              		.loc 1 328 0
 407 0004 054B     		ldr	r3, .L30
 408 0006 1A68     		ldr	r2, [r3]
 409 0008 8023     		movs	r3, #128
 410 000a 5B02     		lsls	r3, r3, #9
 411 000c 1340     		ands	r3, r2
 412 000e 01D0     		beq	.L27
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 14


 413              		.loc 1 328 0 is_stmt 0 discriminator 1
 414 0010 0123     		movs	r3, #1
 415 0012 00E0     		b	.L28
 416              	.L27:
 417              		.loc 1 328 0 discriminator 2
 418 0014 0023     		movs	r3, #0
 419              	.L28:
 329:Generated_Source\PSoC4/isr_pwm.c **** }
 420              		.loc 1 329 0 is_stmt 1 discriminator 4
 421 0016 1800     		movs	r0, r3
 422 0018 BD46     		mov	sp, r7
 423              		@ sp needed
 424 001a 80BD     		pop	{r7, pc}
 425              	.L31:
 426              		.align	2
 427              	.L30:
 428 001c 00E100E0 		.word	-536813312
 429              		.cfi_endproc
 430              	.LFE9:
 431              		.size	isr_pwm_GetState, .-isr_pwm_GetState
 432              		.section	.text.isr_pwm_Disable,"ax",%progbits
 433              		.align	2
 434              		.global	isr_pwm_Disable
 435              		.code	16
 436              		.thumb_func
 437              		.type	isr_pwm_Disable, %function
 438              	isr_pwm_Disable:
 439              	.LFB10:
 330:Generated_Source\PSoC4/isr_pwm.c **** 
 331:Generated_Source\PSoC4/isr_pwm.c **** 
 332:Generated_Source\PSoC4/isr_pwm.c **** /*******************************************************************************
 333:Generated_Source\PSoC4/isr_pwm.c **** * Function Name: isr_pwm_Disable
 334:Generated_Source\PSoC4/isr_pwm.c **** ********************************************************************************
 335:Generated_Source\PSoC4/isr_pwm.c **** *
 336:Generated_Source\PSoC4/isr_pwm.c **** * Summary:
 337:Generated_Source\PSoC4/isr_pwm.c **** *   Disables the Interrupt in the interrupt controller.
 338:Generated_Source\PSoC4/isr_pwm.c **** *
 339:Generated_Source\PSoC4/isr_pwm.c **** * Parameters:
 340:Generated_Source\PSoC4/isr_pwm.c **** *   None
 341:Generated_Source\PSoC4/isr_pwm.c **** *
 342:Generated_Source\PSoC4/isr_pwm.c **** * Return:
 343:Generated_Source\PSoC4/isr_pwm.c **** *   None
 344:Generated_Source\PSoC4/isr_pwm.c **** *
 345:Generated_Source\PSoC4/isr_pwm.c **** *******************************************************************************/
 346:Generated_Source\PSoC4/isr_pwm.c **** void isr_pwm_Disable(void)
 347:Generated_Source\PSoC4/isr_pwm.c **** {
 440              		.loc 1 347 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 1, uses_anonymous_args = 0
 444 0000 80B5     		push	{r7, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 7, -8
 447              		.cfi_offset 14, -4
 448 0002 00AF     		add	r7, sp, #0
 449              		.cfi_def_cfa_register 7
 348:Generated_Source\PSoC4/isr_pwm.c ****     /* Disable the general interrupt. */
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 15


 349:Generated_Source\PSoC4/isr_pwm.c ****     *isr_pwm_INTC_CLR_EN = isr_pwm__INTC_MASK;
 450              		.loc 1 349 0
 451 0004 034B     		ldr	r3, .L33
 452 0006 8022     		movs	r2, #128
 453 0008 5202     		lsls	r2, r2, #9
 454 000a 1A60     		str	r2, [r3]
 350:Generated_Source\PSoC4/isr_pwm.c **** }
 455              		.loc 1 350 0
 456 000c C046     		nop
 457 000e BD46     		mov	sp, r7
 458              		@ sp needed
 459 0010 80BD     		pop	{r7, pc}
 460              	.L34:
 461 0012 C046     		.align	2
 462              	.L33:
 463 0014 80E100E0 		.word	-536813184
 464              		.cfi_endproc
 465              	.LFE10:
 466              		.size	isr_pwm_Disable, .-isr_pwm_Disable
 467              		.section	.text.isr_pwm_SetPending,"ax",%progbits
 468              		.align	2
 469              		.global	isr_pwm_SetPending
 470              		.code	16
 471              		.thumb_func
 472              		.type	isr_pwm_SetPending, %function
 473              	isr_pwm_SetPending:
 474              	.LFB11:
 351:Generated_Source\PSoC4/isr_pwm.c **** 
 352:Generated_Source\PSoC4/isr_pwm.c **** 
 353:Generated_Source\PSoC4/isr_pwm.c **** /*******************************************************************************
 354:Generated_Source\PSoC4/isr_pwm.c **** * Function Name: isr_pwm_SetPending
 355:Generated_Source\PSoC4/isr_pwm.c **** ********************************************************************************
 356:Generated_Source\PSoC4/isr_pwm.c **** *
 357:Generated_Source\PSoC4/isr_pwm.c **** * Summary:
 358:Generated_Source\PSoC4/isr_pwm.c **** *   Causes the Interrupt to enter the pending state, a software method of
 359:Generated_Source\PSoC4/isr_pwm.c **** *   generating the interrupt.
 360:Generated_Source\PSoC4/isr_pwm.c **** *
 361:Generated_Source\PSoC4/isr_pwm.c **** * Parameters:
 362:Generated_Source\PSoC4/isr_pwm.c **** *   None
 363:Generated_Source\PSoC4/isr_pwm.c **** *
 364:Generated_Source\PSoC4/isr_pwm.c **** * Return:
 365:Generated_Source\PSoC4/isr_pwm.c **** *   None
 366:Generated_Source\PSoC4/isr_pwm.c **** *
 367:Generated_Source\PSoC4/isr_pwm.c **** * Side Effects:
 368:Generated_Source\PSoC4/isr_pwm.c **** *   If interrupts are enabled and the interrupt is set up properly, the ISR is
 369:Generated_Source\PSoC4/isr_pwm.c **** *   entered (depending on the priority of this interrupt and other pending 
 370:Generated_Source\PSoC4/isr_pwm.c **** *   interrupts).
 371:Generated_Source\PSoC4/isr_pwm.c **** *
 372:Generated_Source\PSoC4/isr_pwm.c **** *******************************************************************************/
 373:Generated_Source\PSoC4/isr_pwm.c **** void isr_pwm_SetPending(void)
 374:Generated_Source\PSoC4/isr_pwm.c **** {
 475              		.loc 1 374 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 0
 478              		@ frame_needed = 1, uses_anonymous_args = 0
 479 0000 80B5     		push	{r7, lr}
 480              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 16


 481              		.cfi_offset 7, -8
 482              		.cfi_offset 14, -4
 483 0002 00AF     		add	r7, sp, #0
 484              		.cfi_def_cfa_register 7
 375:Generated_Source\PSoC4/isr_pwm.c ****     *isr_pwm_INTC_SET_PD = isr_pwm__INTC_MASK;
 485              		.loc 1 375 0
 486 0004 034B     		ldr	r3, .L36
 487 0006 8022     		movs	r2, #128
 488 0008 5202     		lsls	r2, r2, #9
 489 000a 1A60     		str	r2, [r3]
 376:Generated_Source\PSoC4/isr_pwm.c **** }
 490              		.loc 1 376 0
 491 000c C046     		nop
 492 000e BD46     		mov	sp, r7
 493              		@ sp needed
 494 0010 80BD     		pop	{r7, pc}
 495              	.L37:
 496 0012 C046     		.align	2
 497              	.L36:
 498 0014 00E200E0 		.word	-536813056
 499              		.cfi_endproc
 500              	.LFE11:
 501              		.size	isr_pwm_SetPending, .-isr_pwm_SetPending
 502              		.section	.text.isr_pwm_ClearPending,"ax",%progbits
 503              		.align	2
 504              		.global	isr_pwm_ClearPending
 505              		.code	16
 506              		.thumb_func
 507              		.type	isr_pwm_ClearPending, %function
 508              	isr_pwm_ClearPending:
 509              	.LFB12:
 377:Generated_Source\PSoC4/isr_pwm.c **** 
 378:Generated_Source\PSoC4/isr_pwm.c **** 
 379:Generated_Source\PSoC4/isr_pwm.c **** /*******************************************************************************
 380:Generated_Source\PSoC4/isr_pwm.c **** * Function Name: isr_pwm_ClearPending
 381:Generated_Source\PSoC4/isr_pwm.c **** ********************************************************************************
 382:Generated_Source\PSoC4/isr_pwm.c **** *
 383:Generated_Source\PSoC4/isr_pwm.c **** * Summary:
 384:Generated_Source\PSoC4/isr_pwm.c **** *   Clears a pending interrupt in the interrupt controller.
 385:Generated_Source\PSoC4/isr_pwm.c **** *
 386:Generated_Source\PSoC4/isr_pwm.c **** *   Note Some interrupt sources are clear-on-read and require the block 
 387:Generated_Source\PSoC4/isr_pwm.c **** *   interrupt/status register to be read/cleared with the appropriate block API 
 388:Generated_Source\PSoC4/isr_pwm.c **** *   (GPIO, UART, and so on). Otherwise the ISR will continue to remain in 
 389:Generated_Source\PSoC4/isr_pwm.c **** *   pending state even though the interrupt itself is cleared using this API.
 390:Generated_Source\PSoC4/isr_pwm.c **** *
 391:Generated_Source\PSoC4/isr_pwm.c **** * Parameters:
 392:Generated_Source\PSoC4/isr_pwm.c **** *   None
 393:Generated_Source\PSoC4/isr_pwm.c **** *
 394:Generated_Source\PSoC4/isr_pwm.c **** * Return:
 395:Generated_Source\PSoC4/isr_pwm.c **** *   None
 396:Generated_Source\PSoC4/isr_pwm.c **** *
 397:Generated_Source\PSoC4/isr_pwm.c **** *******************************************************************************/
 398:Generated_Source\PSoC4/isr_pwm.c **** void isr_pwm_ClearPending(void)
 399:Generated_Source\PSoC4/isr_pwm.c **** {
 510              		.loc 1 399 0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 17


 513              		@ frame_needed = 1, uses_anonymous_args = 0
 514 0000 80B5     		push	{r7, lr}
 515              		.cfi_def_cfa_offset 8
 516              		.cfi_offset 7, -8
 517              		.cfi_offset 14, -4
 518 0002 00AF     		add	r7, sp, #0
 519              		.cfi_def_cfa_register 7
 400:Generated_Source\PSoC4/isr_pwm.c ****     *isr_pwm_INTC_CLR_PD = isr_pwm__INTC_MASK;
 520              		.loc 1 400 0
 521 0004 034B     		ldr	r3, .L39
 522 0006 8022     		movs	r2, #128
 523 0008 5202     		lsls	r2, r2, #9
 524 000a 1A60     		str	r2, [r3]
 401:Generated_Source\PSoC4/isr_pwm.c **** }
 525              		.loc 1 401 0
 526 000c C046     		nop
 527 000e BD46     		mov	sp, r7
 528              		@ sp needed
 529 0010 80BD     		pop	{r7, pc}
 530              	.L40:
 531 0012 C046     		.align	2
 532              	.L39:
 533 0014 80E200E0 		.word	-536812928
 534              		.cfi_endproc
 535              	.LFE12:
 536              		.size	isr_pwm_ClearPending, .-isr_pwm_ClearPending
 537              		.text
 538              	.Letext0:
 539              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 540              		.section	.debug_info,"",%progbits
 541              	.Ldebug_info0:
 542 0000 49020000 		.4byte	0x249
 543 0004 0400     		.2byte	0x4
 544 0006 00000000 		.4byte	.Ldebug_abbrev0
 545 000a 04       		.byte	0x4
 546 000b 01       		.uleb128 0x1
 547 000c FB000000 		.4byte	.LASF34
 548 0010 0C       		.byte	0xc
 549 0011 B3000000 		.4byte	.LASF35
 550 0015 38000000 		.4byte	.LASF36
 551 0019 00000000 		.4byte	.Ldebug_ranges0+0
 552 001d 00000000 		.4byte	0
 553 0021 00000000 		.4byte	.Ldebug_line0
 554 0025 02       		.uleb128 0x2
 555 0026 01       		.byte	0x1
 556 0027 06       		.byte	0x6
 557 0028 BB020000 		.4byte	.LASF0
 558 002c 02       		.uleb128 0x2
 559 002d 01       		.byte	0x1
 560 002e 08       		.byte	0x8
 561 002f A5000000 		.4byte	.LASF1
 562 0033 02       		.uleb128 0x2
 563 0034 02       		.byte	0x2
 564 0035 05       		.byte	0x5
 565 0036 6B020000 		.4byte	.LASF2
 566 003a 02       		.uleb128 0x2
 567 003b 02       		.byte	0x2
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 18


 568 003c 07       		.byte	0x7
 569 003d 68000000 		.4byte	.LASF3
 570 0041 02       		.uleb128 0x2
 571 0042 04       		.byte	0x4
 572 0043 05       		.byte	0x5
 573 0044 A6020000 		.4byte	.LASF4
 574 0048 02       		.uleb128 0x2
 575 0049 04       		.byte	0x4
 576 004a 07       		.byte	0x7
 577 004b E3000000 		.4byte	.LASF5
 578 004f 02       		.uleb128 0x2
 579 0050 08       		.byte	0x8
 580 0051 05       		.byte	0x5
 581 0052 34020000 		.4byte	.LASF6
 582 0056 02       		.uleb128 0x2
 583 0057 08       		.byte	0x8
 584 0058 07       		.byte	0x7
 585 0059 F7010000 		.4byte	.LASF7
 586 005d 03       		.uleb128 0x3
 587 005e 04       		.byte	0x4
 588 005f 05       		.byte	0x5
 589 0060 696E7400 		.ascii	"int\000"
 590 0064 02       		.uleb128 0x2
 591 0065 04       		.byte	0x4
 592 0066 07       		.byte	0x7
 593 0067 E2010000 		.4byte	.LASF8
 594 006b 04       		.uleb128 0x4
 595 006c F5000000 		.4byte	.LASF9
 596 0070 02       		.byte	0x2
 597 0071 E401     		.2byte	0x1e4
 598 0073 2C000000 		.4byte	0x2c
 599 0077 04       		.uleb128 0x4
 600 0078 DB010000 		.4byte	.LASF10
 601 007c 02       		.byte	0x2
 602 007d E601     		.2byte	0x1e6
 603 007f 48000000 		.4byte	0x48
 604 0083 02       		.uleb128 0x2
 605 0084 04       		.byte	0x4
 606 0085 04       		.byte	0x4
 607 0086 9F000000 		.4byte	.LASF11
 608 008a 02       		.uleb128 0x2
 609 008b 08       		.byte	0x8
 610 008c 04       		.byte	0x4
 611 008d B2010000 		.4byte	.LASF12
 612 0091 02       		.uleb128 0x2
 613 0092 01       		.byte	0x1
 614 0093 08       		.byte	0x8
 615 0094 42020000 		.4byte	.LASF13
 616 0098 04       		.uleb128 0x4
 617 0099 00000000 		.4byte	.LASF14
 618 009d 02       		.byte	0x2
 619 009e 9002     		.2byte	0x290
 620 00a0 A4000000 		.4byte	0xa4
 621 00a4 05       		.uleb128 0x5
 622 00a5 77000000 		.4byte	0x77
 623 00a9 04       		.uleb128 0x4
 624 00aa 0E020000 		.4byte	.LASF15
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 19


 625 00ae 02       		.byte	0x2
 626 00af A002     		.2byte	0x2a0
 627 00b1 B5000000 		.4byte	0xb5
 628 00b5 06       		.uleb128 0x6
 629 00b6 04       		.byte	0x4
 630 00b7 BB000000 		.4byte	0xbb
 631 00bb 07       		.uleb128 0x7
 632 00bc 02       		.uleb128 0x2
 633 00bd 08       		.byte	0x8
 634 00be 04       		.byte	0x4
 635 00bf AF020000 		.4byte	.LASF16
 636 00c3 02       		.uleb128 0x2
 637 00c4 04       		.byte	0x4
 638 00c5 07       		.byte	0x7
 639 00c6 2B020000 		.4byte	.LASF17
 640 00ca 08       		.uleb128 0x8
 641 00cb B9010000 		.4byte	.LASF18
 642 00cf 01       		.byte	0x1
 643 00d0 38       		.byte	0x38
 644 00d1 00000000 		.4byte	.LFB0
 645 00d5 24000000 		.4byte	.LFE0-.LFB0
 646 00d9 01       		.uleb128 0x1
 647 00da 9C       		.byte	0x9c
 648 00db 09       		.uleb128 0x9
 649 00dc 1B020000 		.4byte	.LASF21
 650 00e0 01       		.byte	0x1
 651 00e1 63       		.byte	0x63
 652 00e2 00000000 		.4byte	.LFB1
 653 00e6 26000000 		.4byte	.LFE1-.LFB1
 654 00ea 01       		.uleb128 0x1
 655 00eb 9C       		.byte	0x9c
 656 00ec FF000000 		.4byte	0xff
 657 00f0 0A       		.uleb128 0xa
 658 00f1 EF010000 		.4byte	.LASF23
 659 00f5 01       		.byte	0x1
 660 00f6 63       		.byte	0x63
 661 00f7 A9000000 		.4byte	0xa9
 662 00fb 02       		.uleb128 0x2
 663 00fc 91       		.byte	0x91
 664 00fd 74       		.sleb128 -12
 665 00fe 00       		.byte	0
 666 00ff 08       		.uleb128 0x8
 667 0100 A5010000 		.4byte	.LASF19
 668 0104 01       		.byte	0x1
 669 0105 81       		.byte	0x81
 670 0106 00000000 		.4byte	.LFB2
 671 010a 1C000000 		.4byte	.LFE2-.LFB2
 672 010e 01       		.uleb128 0x1
 673 010f 9C       		.byte	0x9c
 674 0110 0B       		.uleb128 0xb
 675 0111 8D000000 		.4byte	.LASF20
 676 0115 01       		.byte	0x1
 677 0116 9F       		.byte	0x9f
 678 0117 00000000 		.4byte	.LFB3
 679 011b 0A000000 		.4byte	.LFE3-.LFB3
 680 011f 01       		.uleb128 0x1
 681 0120 9C       		.byte	0x9c
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 20


 682 0121 0C       		.uleb128 0xc
 683 0122 94020000 		.4byte	.LASF22
 684 0126 01       		.byte	0x1
 685 0127 C7       		.byte	0xc7
 686 0128 00000000 		.4byte	.LFB4
 687 012c 1C000000 		.4byte	.LFE4-.LFB4
 688 0130 01       		.uleb128 0x1
 689 0131 9C       		.byte	0x9c
 690 0132 45010000 		.4byte	0x145
 691 0136 0A       		.uleb128 0xa
 692 0137 EF010000 		.4byte	.LASF23
 693 013b 01       		.byte	0x1
 694 013c C7       		.byte	0xc7
 695 013d A9000000 		.4byte	0xa9
 696 0141 02       		.uleb128 0x2
 697 0142 91       		.byte	0x91
 698 0143 74       		.sleb128 -12
 699 0144 00       		.byte	0
 700 0145 0D       		.uleb128 0xd
 701 0146 7B000000 		.4byte	.LASF29
 702 014a 01       		.byte	0x1
 703 014b DB       		.byte	0xdb
 704 014c A9000000 		.4byte	0xa9
 705 0150 00000000 		.4byte	.LFB5
 706 0154 14000000 		.4byte	.LFE5-.LFB5
 707 0158 01       		.uleb128 0x1
 708 0159 9C       		.byte	0x9c
 709 015a 09       		.uleb128 0x9
 710 015b C7010000 		.4byte	.LASF24
 711 015f 01       		.byte	0x1
 712 0160 F9       		.byte	0xf9
 713 0161 00000000 		.4byte	.LFB6
 714 0165 50000000 		.4byte	.LFE6-.LFB6
 715 0169 01       		.uleb128 0x1
 716 016a 9C       		.byte	0x9c
 717 016b 9A010000 		.4byte	0x19a
 718 016f 0A       		.uleb128 0xa
 719 0170 89010000 		.4byte	.LASF25
 720 0174 01       		.byte	0x1
 721 0175 F9       		.byte	0xf9
 722 0176 6B000000 		.4byte	0x6b
 723 017a 02       		.uleb128 0x2
 724 017b 91       		.byte	0x91
 725 017c 67       		.sleb128 -25
 726 017d 0E       		.uleb128 0xe
 727 017e D4000000 		.4byte	.LASF26
 728 0182 01       		.byte	0x1
 729 0183 FB       		.byte	0xfb
 730 0184 6B000000 		.4byte	0x6b
 731 0188 02       		.uleb128 0x2
 732 0189 91       		.byte	0x91
 733 018a 6B       		.sleb128 -21
 734 018b 0E       		.uleb128 0xe
 735 018c 85020000 		.4byte	.LASF27
 736 0190 01       		.byte	0x1
 737 0191 FC       		.byte	0xfc
 738 0192 77000000 		.4byte	0x77
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 21


 739 0196 02       		.uleb128 0x2
 740 0197 91       		.byte	0x91
 741 0198 6C       		.sleb128 -20
 742 0199 00       		.byte	0
 743 019a 0F       		.uleb128 0xf
 744 019b 24000000 		.4byte	.LASF37
 745 019f 01       		.byte	0x1
 746 01a0 1501     		.2byte	0x115
 747 01a2 6B000000 		.4byte	0x6b
 748 01a6 00000000 		.4byte	.LFB7
 749 01aa 2C000000 		.4byte	.LFE7-.LFB7
 750 01ae 01       		.uleb128 0x1
 751 01af 9C       		.byte	0x9c
 752 01b0 D3010000 		.4byte	0x1d3
 753 01b4 10       		.uleb128 0x10
 754 01b5 89010000 		.4byte	.LASF25
 755 01b9 01       		.byte	0x1
 756 01ba 1701     		.2byte	0x117
 757 01bc 77000000 		.4byte	0x77
 758 01c0 02       		.uleb128 0x2
 759 01c1 91       		.byte	0x91
 760 01c2 70       		.sleb128 -16
 761 01c3 10       		.uleb128 0x10
 762 01c4 85020000 		.4byte	.LASF27
 763 01c8 01       		.byte	0x1
 764 01c9 1801     		.2byte	0x118
 765 01cb 77000000 		.4byte	0x77
 766 01cf 02       		.uleb128 0x2
 767 01d0 91       		.byte	0x91
 768 01d1 74       		.sleb128 -12
 769 01d2 00       		.byte	0
 770 01d3 11       		.uleb128 0x11
 771 01d4 5C020000 		.4byte	.LASF28
 772 01d8 01       		.byte	0x1
 773 01d9 3001     		.2byte	0x130
 774 01db 00000000 		.4byte	.LFB8
 775 01df 18000000 		.4byte	.LFE8-.LFB8
 776 01e3 01       		.uleb128 0x1
 777 01e4 9C       		.byte	0x9c
 778 01e5 12       		.uleb128 0x12
 779 01e6 13000000 		.4byte	.LASF30
 780 01ea 01       		.byte	0x1
 781 01eb 4501     		.2byte	0x145
 782 01ed 6B000000 		.4byte	0x6b
 783 01f1 00000000 		.4byte	.LFB9
 784 01f5 20000000 		.4byte	.LFE9-.LFB9
 785 01f9 01       		.uleb128 0x1
 786 01fa 9C       		.byte	0x9c
 787 01fb 11       		.uleb128 0x11
 788 01fc 75020000 		.4byte	.LASF31
 789 0200 01       		.byte	0x1
 790 0201 5A01     		.2byte	0x15a
 791 0203 00000000 		.4byte	.LFB10
 792 0207 18000000 		.4byte	.LFE10-.LFB10
 793 020b 01       		.uleb128 0x1
 794 020c 9C       		.byte	0x9c
 795 020d 11       		.uleb128 0x11
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 22


 796 020e 92010000 		.4byte	.LASF32
 797 0212 01       		.byte	0x1
 798 0213 7501     		.2byte	0x175
 799 0215 00000000 		.4byte	.LFB11
 800 0219 18000000 		.4byte	.LFE11-.LFB11
 801 021d 01       		.uleb128 0x1
 802 021e 9C       		.byte	0x9c
 803 021f 11       		.uleb128 0x11
 804 0220 47020000 		.4byte	.LASF33
 805 0224 01       		.byte	0x1
 806 0225 8E01     		.2byte	0x18e
 807 0227 00000000 		.4byte	.LFB12
 808 022b 18000000 		.4byte	.LFE12-.LFB12
 809 022f 01       		.uleb128 0x1
 810 0230 9C       		.byte	0x9c
 811 0231 13       		.uleb128 0x13
 812 0232 A9000000 		.4byte	0xa9
 813 0236 41020000 		.4byte	0x241
 814 023a 14       		.uleb128 0x14
 815 023b C3000000 		.4byte	0xc3
 816 023f 2F       		.byte	0x2f
 817 0240 00       		.byte	0
 818 0241 15       		.uleb128 0x15
 819 0242 06000000 		.4byte	.LASF38
 820 0246 01       		.byte	0x1
 821 0247 21       		.byte	0x21
 822 0248 31020000 		.4byte	0x231
 823 024c 00       		.byte	0
 824              		.section	.debug_abbrev,"",%progbits
 825              	.Ldebug_abbrev0:
 826 0000 01       		.uleb128 0x1
 827 0001 11       		.uleb128 0x11
 828 0002 01       		.byte	0x1
 829 0003 25       		.uleb128 0x25
 830 0004 0E       		.uleb128 0xe
 831 0005 13       		.uleb128 0x13
 832 0006 0B       		.uleb128 0xb
 833 0007 03       		.uleb128 0x3
 834 0008 0E       		.uleb128 0xe
 835 0009 1B       		.uleb128 0x1b
 836 000a 0E       		.uleb128 0xe
 837 000b 55       		.uleb128 0x55
 838 000c 17       		.uleb128 0x17
 839 000d 11       		.uleb128 0x11
 840 000e 01       		.uleb128 0x1
 841 000f 10       		.uleb128 0x10
 842 0010 17       		.uleb128 0x17
 843 0011 00       		.byte	0
 844 0012 00       		.byte	0
 845 0013 02       		.uleb128 0x2
 846 0014 24       		.uleb128 0x24
 847 0015 00       		.byte	0
 848 0016 0B       		.uleb128 0xb
 849 0017 0B       		.uleb128 0xb
 850 0018 3E       		.uleb128 0x3e
 851 0019 0B       		.uleb128 0xb
 852 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 23


 853 001b 0E       		.uleb128 0xe
 854 001c 00       		.byte	0
 855 001d 00       		.byte	0
 856 001e 03       		.uleb128 0x3
 857 001f 24       		.uleb128 0x24
 858 0020 00       		.byte	0
 859 0021 0B       		.uleb128 0xb
 860 0022 0B       		.uleb128 0xb
 861 0023 3E       		.uleb128 0x3e
 862 0024 0B       		.uleb128 0xb
 863 0025 03       		.uleb128 0x3
 864 0026 08       		.uleb128 0x8
 865 0027 00       		.byte	0
 866 0028 00       		.byte	0
 867 0029 04       		.uleb128 0x4
 868 002a 16       		.uleb128 0x16
 869 002b 00       		.byte	0
 870 002c 03       		.uleb128 0x3
 871 002d 0E       		.uleb128 0xe
 872 002e 3A       		.uleb128 0x3a
 873 002f 0B       		.uleb128 0xb
 874 0030 3B       		.uleb128 0x3b
 875 0031 05       		.uleb128 0x5
 876 0032 49       		.uleb128 0x49
 877 0033 13       		.uleb128 0x13
 878 0034 00       		.byte	0
 879 0035 00       		.byte	0
 880 0036 05       		.uleb128 0x5
 881 0037 35       		.uleb128 0x35
 882 0038 00       		.byte	0
 883 0039 49       		.uleb128 0x49
 884 003a 13       		.uleb128 0x13
 885 003b 00       		.byte	0
 886 003c 00       		.byte	0
 887 003d 06       		.uleb128 0x6
 888 003e 0F       		.uleb128 0xf
 889 003f 00       		.byte	0
 890 0040 0B       		.uleb128 0xb
 891 0041 0B       		.uleb128 0xb
 892 0042 49       		.uleb128 0x49
 893 0043 13       		.uleb128 0x13
 894 0044 00       		.byte	0
 895 0045 00       		.byte	0
 896 0046 07       		.uleb128 0x7
 897 0047 15       		.uleb128 0x15
 898 0048 00       		.byte	0
 899 0049 27       		.uleb128 0x27
 900 004a 19       		.uleb128 0x19
 901 004b 00       		.byte	0
 902 004c 00       		.byte	0
 903 004d 08       		.uleb128 0x8
 904 004e 2E       		.uleb128 0x2e
 905 004f 00       		.byte	0
 906 0050 3F       		.uleb128 0x3f
 907 0051 19       		.uleb128 0x19
 908 0052 03       		.uleb128 0x3
 909 0053 0E       		.uleb128 0xe
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 24


 910 0054 3A       		.uleb128 0x3a
 911 0055 0B       		.uleb128 0xb
 912 0056 3B       		.uleb128 0x3b
 913 0057 0B       		.uleb128 0xb
 914 0058 27       		.uleb128 0x27
 915 0059 19       		.uleb128 0x19
 916 005a 11       		.uleb128 0x11
 917 005b 01       		.uleb128 0x1
 918 005c 12       		.uleb128 0x12
 919 005d 06       		.uleb128 0x6
 920 005e 40       		.uleb128 0x40
 921 005f 18       		.uleb128 0x18
 922 0060 9642     		.uleb128 0x2116
 923 0062 19       		.uleb128 0x19
 924 0063 00       		.byte	0
 925 0064 00       		.byte	0
 926 0065 09       		.uleb128 0x9
 927 0066 2E       		.uleb128 0x2e
 928 0067 01       		.byte	0x1
 929 0068 3F       		.uleb128 0x3f
 930 0069 19       		.uleb128 0x19
 931 006a 03       		.uleb128 0x3
 932 006b 0E       		.uleb128 0xe
 933 006c 3A       		.uleb128 0x3a
 934 006d 0B       		.uleb128 0xb
 935 006e 3B       		.uleb128 0x3b
 936 006f 0B       		.uleb128 0xb
 937 0070 27       		.uleb128 0x27
 938 0071 19       		.uleb128 0x19
 939 0072 11       		.uleb128 0x11
 940 0073 01       		.uleb128 0x1
 941 0074 12       		.uleb128 0x12
 942 0075 06       		.uleb128 0x6
 943 0076 40       		.uleb128 0x40
 944 0077 18       		.uleb128 0x18
 945 0078 9642     		.uleb128 0x2116
 946 007a 19       		.uleb128 0x19
 947 007b 01       		.uleb128 0x1
 948 007c 13       		.uleb128 0x13
 949 007d 00       		.byte	0
 950 007e 00       		.byte	0
 951 007f 0A       		.uleb128 0xa
 952 0080 05       		.uleb128 0x5
 953 0081 00       		.byte	0
 954 0082 03       		.uleb128 0x3
 955 0083 0E       		.uleb128 0xe
 956 0084 3A       		.uleb128 0x3a
 957 0085 0B       		.uleb128 0xb
 958 0086 3B       		.uleb128 0x3b
 959 0087 0B       		.uleb128 0xb
 960 0088 49       		.uleb128 0x49
 961 0089 13       		.uleb128 0x13
 962 008a 02       		.uleb128 0x2
 963 008b 18       		.uleb128 0x18
 964 008c 00       		.byte	0
 965 008d 00       		.byte	0
 966 008e 0B       		.uleb128 0xb
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 25


 967 008f 2E       		.uleb128 0x2e
 968 0090 00       		.byte	0
 969 0091 3F       		.uleb128 0x3f
 970 0092 19       		.uleb128 0x19
 971 0093 03       		.uleb128 0x3
 972 0094 0E       		.uleb128 0xe
 973 0095 3A       		.uleb128 0x3a
 974 0096 0B       		.uleb128 0xb
 975 0097 3B       		.uleb128 0x3b
 976 0098 0B       		.uleb128 0xb
 977 0099 27       		.uleb128 0x27
 978 009a 19       		.uleb128 0x19
 979 009b 11       		.uleb128 0x11
 980 009c 01       		.uleb128 0x1
 981 009d 12       		.uleb128 0x12
 982 009e 06       		.uleb128 0x6
 983 009f 40       		.uleb128 0x40
 984 00a0 18       		.uleb128 0x18
 985 00a1 9742     		.uleb128 0x2117
 986 00a3 19       		.uleb128 0x19
 987 00a4 00       		.byte	0
 988 00a5 00       		.byte	0
 989 00a6 0C       		.uleb128 0xc
 990 00a7 2E       		.uleb128 0x2e
 991 00a8 01       		.byte	0x1
 992 00a9 3F       		.uleb128 0x3f
 993 00aa 19       		.uleb128 0x19
 994 00ab 03       		.uleb128 0x3
 995 00ac 0E       		.uleb128 0xe
 996 00ad 3A       		.uleb128 0x3a
 997 00ae 0B       		.uleb128 0xb
 998 00af 3B       		.uleb128 0x3b
 999 00b0 0B       		.uleb128 0xb
 1000 00b1 27       		.uleb128 0x27
 1001 00b2 19       		.uleb128 0x19
 1002 00b3 11       		.uleb128 0x11
 1003 00b4 01       		.uleb128 0x1
 1004 00b5 12       		.uleb128 0x12
 1005 00b6 06       		.uleb128 0x6
 1006 00b7 40       		.uleb128 0x40
 1007 00b8 18       		.uleb128 0x18
 1008 00b9 9742     		.uleb128 0x2117
 1009 00bb 19       		.uleb128 0x19
 1010 00bc 01       		.uleb128 0x1
 1011 00bd 13       		.uleb128 0x13
 1012 00be 00       		.byte	0
 1013 00bf 00       		.byte	0
 1014 00c0 0D       		.uleb128 0xd
 1015 00c1 2E       		.uleb128 0x2e
 1016 00c2 00       		.byte	0
 1017 00c3 3F       		.uleb128 0x3f
 1018 00c4 19       		.uleb128 0x19
 1019 00c5 03       		.uleb128 0x3
 1020 00c6 0E       		.uleb128 0xe
 1021 00c7 3A       		.uleb128 0x3a
 1022 00c8 0B       		.uleb128 0xb
 1023 00c9 3B       		.uleb128 0x3b
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 26


 1024 00ca 0B       		.uleb128 0xb
 1025 00cb 27       		.uleb128 0x27
 1026 00cc 19       		.uleb128 0x19
 1027 00cd 49       		.uleb128 0x49
 1028 00ce 13       		.uleb128 0x13
 1029 00cf 11       		.uleb128 0x11
 1030 00d0 01       		.uleb128 0x1
 1031 00d1 12       		.uleb128 0x12
 1032 00d2 06       		.uleb128 0x6
 1033 00d3 40       		.uleb128 0x40
 1034 00d4 18       		.uleb128 0x18
 1035 00d5 9742     		.uleb128 0x2117
 1036 00d7 19       		.uleb128 0x19
 1037 00d8 00       		.byte	0
 1038 00d9 00       		.byte	0
 1039 00da 0E       		.uleb128 0xe
 1040 00db 34       		.uleb128 0x34
 1041 00dc 00       		.byte	0
 1042 00dd 03       		.uleb128 0x3
 1043 00de 0E       		.uleb128 0xe
 1044 00df 3A       		.uleb128 0x3a
 1045 00e0 0B       		.uleb128 0xb
 1046 00e1 3B       		.uleb128 0x3b
 1047 00e2 0B       		.uleb128 0xb
 1048 00e3 49       		.uleb128 0x49
 1049 00e4 13       		.uleb128 0x13
 1050 00e5 02       		.uleb128 0x2
 1051 00e6 18       		.uleb128 0x18
 1052 00e7 00       		.byte	0
 1053 00e8 00       		.byte	0
 1054 00e9 0F       		.uleb128 0xf
 1055 00ea 2E       		.uleb128 0x2e
 1056 00eb 01       		.byte	0x1
 1057 00ec 3F       		.uleb128 0x3f
 1058 00ed 19       		.uleb128 0x19
 1059 00ee 03       		.uleb128 0x3
 1060 00ef 0E       		.uleb128 0xe
 1061 00f0 3A       		.uleb128 0x3a
 1062 00f1 0B       		.uleb128 0xb
 1063 00f2 3B       		.uleb128 0x3b
 1064 00f3 05       		.uleb128 0x5
 1065 00f4 27       		.uleb128 0x27
 1066 00f5 19       		.uleb128 0x19
 1067 00f6 49       		.uleb128 0x49
 1068 00f7 13       		.uleb128 0x13
 1069 00f8 11       		.uleb128 0x11
 1070 00f9 01       		.uleb128 0x1
 1071 00fa 12       		.uleb128 0x12
 1072 00fb 06       		.uleb128 0x6
 1073 00fc 40       		.uleb128 0x40
 1074 00fd 18       		.uleb128 0x18
 1075 00fe 9742     		.uleb128 0x2117
 1076 0100 19       		.uleb128 0x19
 1077 0101 01       		.uleb128 0x1
 1078 0102 13       		.uleb128 0x13
 1079 0103 00       		.byte	0
 1080 0104 00       		.byte	0
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 27


 1081 0105 10       		.uleb128 0x10
 1082 0106 34       		.uleb128 0x34
 1083 0107 00       		.byte	0
 1084 0108 03       		.uleb128 0x3
 1085 0109 0E       		.uleb128 0xe
 1086 010a 3A       		.uleb128 0x3a
 1087 010b 0B       		.uleb128 0xb
 1088 010c 3B       		.uleb128 0x3b
 1089 010d 05       		.uleb128 0x5
 1090 010e 49       		.uleb128 0x49
 1091 010f 13       		.uleb128 0x13
 1092 0110 02       		.uleb128 0x2
 1093 0111 18       		.uleb128 0x18
 1094 0112 00       		.byte	0
 1095 0113 00       		.byte	0
 1096 0114 11       		.uleb128 0x11
 1097 0115 2E       		.uleb128 0x2e
 1098 0116 00       		.byte	0
 1099 0117 3F       		.uleb128 0x3f
 1100 0118 19       		.uleb128 0x19
 1101 0119 03       		.uleb128 0x3
 1102 011a 0E       		.uleb128 0xe
 1103 011b 3A       		.uleb128 0x3a
 1104 011c 0B       		.uleb128 0xb
 1105 011d 3B       		.uleb128 0x3b
 1106 011e 05       		.uleb128 0x5
 1107 011f 27       		.uleb128 0x27
 1108 0120 19       		.uleb128 0x19
 1109 0121 11       		.uleb128 0x11
 1110 0122 01       		.uleb128 0x1
 1111 0123 12       		.uleb128 0x12
 1112 0124 06       		.uleb128 0x6
 1113 0125 40       		.uleb128 0x40
 1114 0126 18       		.uleb128 0x18
 1115 0127 9742     		.uleb128 0x2117
 1116 0129 19       		.uleb128 0x19
 1117 012a 00       		.byte	0
 1118 012b 00       		.byte	0
 1119 012c 12       		.uleb128 0x12
 1120 012d 2E       		.uleb128 0x2e
 1121 012e 00       		.byte	0
 1122 012f 3F       		.uleb128 0x3f
 1123 0130 19       		.uleb128 0x19
 1124 0131 03       		.uleb128 0x3
 1125 0132 0E       		.uleb128 0xe
 1126 0133 3A       		.uleb128 0x3a
 1127 0134 0B       		.uleb128 0xb
 1128 0135 3B       		.uleb128 0x3b
 1129 0136 05       		.uleb128 0x5
 1130 0137 27       		.uleb128 0x27
 1131 0138 19       		.uleb128 0x19
 1132 0139 49       		.uleb128 0x49
 1133 013a 13       		.uleb128 0x13
 1134 013b 11       		.uleb128 0x11
 1135 013c 01       		.uleb128 0x1
 1136 013d 12       		.uleb128 0x12
 1137 013e 06       		.uleb128 0x6
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 28


 1138 013f 40       		.uleb128 0x40
 1139 0140 18       		.uleb128 0x18
 1140 0141 9742     		.uleb128 0x2117
 1141 0143 19       		.uleb128 0x19
 1142 0144 00       		.byte	0
 1143 0145 00       		.byte	0
 1144 0146 13       		.uleb128 0x13
 1145 0147 01       		.uleb128 0x1
 1146 0148 01       		.byte	0x1
 1147 0149 49       		.uleb128 0x49
 1148 014a 13       		.uleb128 0x13
 1149 014b 01       		.uleb128 0x1
 1150 014c 13       		.uleb128 0x13
 1151 014d 00       		.byte	0
 1152 014e 00       		.byte	0
 1153 014f 14       		.uleb128 0x14
 1154 0150 21       		.uleb128 0x21
 1155 0151 00       		.byte	0
 1156 0152 49       		.uleb128 0x49
 1157 0153 13       		.uleb128 0x13
 1158 0154 2F       		.uleb128 0x2f
 1159 0155 0B       		.uleb128 0xb
 1160 0156 00       		.byte	0
 1161 0157 00       		.byte	0
 1162 0158 15       		.uleb128 0x15
 1163 0159 34       		.uleb128 0x34
 1164 015a 00       		.byte	0
 1165 015b 03       		.uleb128 0x3
 1166 015c 0E       		.uleb128 0xe
 1167 015d 3A       		.uleb128 0x3a
 1168 015e 0B       		.uleb128 0xb
 1169 015f 3B       		.uleb128 0x3b
 1170 0160 0B       		.uleb128 0xb
 1171 0161 49       		.uleb128 0x49
 1172 0162 13       		.uleb128 0x13
 1173 0163 3F       		.uleb128 0x3f
 1174 0164 19       		.uleb128 0x19
 1175 0165 3C       		.uleb128 0x3c
 1176 0166 19       		.uleb128 0x19
 1177 0167 00       		.byte	0
 1178 0168 00       		.byte	0
 1179 0169 00       		.byte	0
 1180              		.section	.debug_aranges,"",%progbits
 1181 0000 7C000000 		.4byte	0x7c
 1182 0004 0200     		.2byte	0x2
 1183 0006 00000000 		.4byte	.Ldebug_info0
 1184 000a 04       		.byte	0x4
 1185 000b 00       		.byte	0
 1186 000c 0000     		.2byte	0
 1187 000e 0000     		.2byte	0
 1188 0010 00000000 		.4byte	.LFB0
 1189 0014 24000000 		.4byte	.LFE0-.LFB0
 1190 0018 00000000 		.4byte	.LFB1
 1191 001c 26000000 		.4byte	.LFE1-.LFB1
 1192 0020 00000000 		.4byte	.LFB2
 1193 0024 1C000000 		.4byte	.LFE2-.LFB2
 1194 0028 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 29


 1195 002c 0A000000 		.4byte	.LFE3-.LFB3
 1196 0030 00000000 		.4byte	.LFB4
 1197 0034 1C000000 		.4byte	.LFE4-.LFB4
 1198 0038 00000000 		.4byte	.LFB5
 1199 003c 14000000 		.4byte	.LFE5-.LFB5
 1200 0040 00000000 		.4byte	.LFB6
 1201 0044 50000000 		.4byte	.LFE6-.LFB6
 1202 0048 00000000 		.4byte	.LFB7
 1203 004c 2C000000 		.4byte	.LFE7-.LFB7
 1204 0050 00000000 		.4byte	.LFB8
 1205 0054 18000000 		.4byte	.LFE8-.LFB8
 1206 0058 00000000 		.4byte	.LFB9
 1207 005c 20000000 		.4byte	.LFE9-.LFB9
 1208 0060 00000000 		.4byte	.LFB10
 1209 0064 18000000 		.4byte	.LFE10-.LFB10
 1210 0068 00000000 		.4byte	.LFB11
 1211 006c 18000000 		.4byte	.LFE11-.LFB11
 1212 0070 00000000 		.4byte	.LFB12
 1213 0074 18000000 		.4byte	.LFE12-.LFB12
 1214 0078 00000000 		.4byte	0
 1215 007c 00000000 		.4byte	0
 1216              		.section	.debug_ranges,"",%progbits
 1217              	.Ldebug_ranges0:
 1218 0000 00000000 		.4byte	.LFB0
 1219 0004 24000000 		.4byte	.LFE0
 1220 0008 00000000 		.4byte	.LFB1
 1221 000c 26000000 		.4byte	.LFE1
 1222 0010 00000000 		.4byte	.LFB2
 1223 0014 1C000000 		.4byte	.LFE2
 1224 0018 00000000 		.4byte	.LFB3
 1225 001c 0A000000 		.4byte	.LFE3
 1226 0020 00000000 		.4byte	.LFB4
 1227 0024 1C000000 		.4byte	.LFE4
 1228 0028 00000000 		.4byte	.LFB5
 1229 002c 14000000 		.4byte	.LFE5
 1230 0030 00000000 		.4byte	.LFB6
 1231 0034 50000000 		.4byte	.LFE6
 1232 0038 00000000 		.4byte	.LFB7
 1233 003c 2C000000 		.4byte	.LFE7
 1234 0040 00000000 		.4byte	.LFB8
 1235 0044 18000000 		.4byte	.LFE8
 1236 0048 00000000 		.4byte	.LFB9
 1237 004c 20000000 		.4byte	.LFE9
 1238 0050 00000000 		.4byte	.LFB10
 1239 0054 18000000 		.4byte	.LFE10
 1240 0058 00000000 		.4byte	.LFB11
 1241 005c 18000000 		.4byte	.LFE11
 1242 0060 00000000 		.4byte	.LFB12
 1243 0064 18000000 		.4byte	.LFE12
 1244 0068 00000000 		.4byte	0
 1245 006c 00000000 		.4byte	0
 1246              		.section	.debug_line,"",%progbits
 1247              	.Ldebug_line0:
 1248 0000 52010000 		.section	.debug_str,"MS",%progbits,1
 1248      02004400 
 1248      00000201 
 1248      FB0E0D00 
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 30


 1248      01010101 
 1249              	.LASF14:
 1250 0000 72656733 		.ascii	"reg32\000"
 1250      3200
 1251              	.LASF38:
 1252 0006 43795261 		.ascii	"CyRamVectors\000"
 1252      6D566563 
 1252      746F7273 
 1252      00
 1253              	.LASF30:
 1254 0013 6973725F 		.ascii	"isr_pwm_GetState\000"
 1254      70776D5F 
 1254      47657453 
 1254      74617465 
 1254      00
 1255              	.LASF37:
 1256 0024 6973725F 		.ascii	"isr_pwm_GetPriority\000"
 1256      70776D5F 
 1256      47657450 
 1256      72696F72 
 1256      69747900 
 1257              	.LASF36:
 1258 0038 443A5C53 		.ascii	"D:\\Sensored BLDC Motor Control\\control_v3.cydsn\000"
 1258      656E736F 
 1258      72656420 
 1258      424C4443 
 1258      204D6F74 
 1259              	.LASF3:
 1260 0068 73686F72 		.ascii	"short unsigned int\000"
 1260      7420756E 
 1260      7369676E 
 1260      65642069 
 1260      6E7400
 1261              	.LASF29:
 1262 007b 6973725F 		.ascii	"isr_pwm_GetVector\000"
 1262      70776D5F 
 1262      47657456 
 1262      6563746F 
 1262      7200
 1263              	.LASF20:
 1264 008d 6973725F 		.ascii	"isr_pwm_Interrupt\000"
 1264      70776D5F 
 1264      496E7465 
 1264      72727570 
 1264      7400
 1265              	.LASF11:
 1266 009f 666C6F61 		.ascii	"float\000"
 1266      7400
 1267              	.LASF1:
 1268 00a5 756E7369 		.ascii	"unsigned char\000"
 1268      676E6564 
 1268      20636861 
 1268      7200
 1269              	.LASF35:
 1270 00b3 47656E65 		.ascii	"Generated_Source\\PSoC4\\isr_pwm.c\000"
 1270      72617465 
 1270      645F536F 
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 31


 1270      75726365 
 1270      5C50536F 
 1271              	.LASF26:
 1272 00d4 696E7465 		.ascii	"interruptState\000"
 1272      72727570 
 1272      74537461 
 1272      746500
 1273              	.LASF5:
 1274 00e3 6C6F6E67 		.ascii	"long unsigned int\000"
 1274      20756E73 
 1274      69676E65 
 1274      6420696E 
 1274      7400
 1275              	.LASF9:
 1276 00f5 75696E74 		.ascii	"uint8\000"
 1276      3800
 1277              	.LASF34:
 1278 00fb 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1278      43313120 
 1278      352E342E 
 1278      31203230 
 1278      31363036 
 1279 012e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1279      20726576 
 1279      6973696F 
 1279      6E203233 
 1279      37373135 
 1280 0161 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1280      66756E63 
 1280      74696F6E 
 1280      2D736563 
 1280      74696F6E 
 1281              	.LASF25:
 1282 0189 7072696F 		.ascii	"priority\000"
 1282      72697479 
 1282      00
 1283              	.LASF32:
 1284 0192 6973725F 		.ascii	"isr_pwm_SetPending\000"
 1284      70776D5F 
 1284      53657450 
 1284      656E6469 
 1284      6E6700
 1285              	.LASF19:
 1286 01a5 6973725F 		.ascii	"isr_pwm_Stop\000"
 1286      70776D5F 
 1286      53746F70 
 1286      00
 1287              	.LASF12:
 1288 01b2 646F7562 		.ascii	"double\000"
 1288      6C6500
 1289              	.LASF18:
 1290 01b9 6973725F 		.ascii	"isr_pwm_Start\000"
 1290      70776D5F 
 1290      53746172 
 1290      7400
 1291              	.LASF24:
 1292 01c7 6973725F 		.ascii	"isr_pwm_SetPriority\000"
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 32


 1292      70776D5F 
 1292      53657450 
 1292      72696F72 
 1292      69747900 
 1293              	.LASF10:
 1294 01db 75696E74 		.ascii	"uint32\000"
 1294      333200
 1295              	.LASF8:
 1296 01e2 756E7369 		.ascii	"unsigned int\000"
 1296      676E6564 
 1296      20696E74 
 1296      00
 1297              	.LASF23:
 1298 01ef 61646472 		.ascii	"address\000"
 1298      65737300 
 1299              	.LASF7:
 1300 01f7 6C6F6E67 		.ascii	"long long unsigned int\000"
 1300      206C6F6E 
 1300      6720756E 
 1300      7369676E 
 1300      65642069 
 1301              	.LASF15:
 1302 020e 63796973 		.ascii	"cyisraddress\000"
 1302      72616464 
 1302      72657373 
 1302      00
 1303              	.LASF21:
 1304 021b 6973725F 		.ascii	"isr_pwm_StartEx\000"
 1304      70776D5F 
 1304      53746172 
 1304      74457800 
 1305              	.LASF17:
 1306 022b 73697A65 		.ascii	"sizetype\000"
 1306      74797065 
 1306      00
 1307              	.LASF6:
 1308 0234 6C6F6E67 		.ascii	"long long int\000"
 1308      206C6F6E 
 1308      6720696E 
 1308      7400
 1309              	.LASF13:
 1310 0242 63686172 		.ascii	"char\000"
 1310      00
 1311              	.LASF33:
 1312 0247 6973725F 		.ascii	"isr_pwm_ClearPending\000"
 1312      70776D5F 
 1312      436C6561 
 1312      7250656E 
 1312      64696E67 
 1313              	.LASF28:
 1314 025c 6973725F 		.ascii	"isr_pwm_Enable\000"
 1314      70776D5F 
 1314      456E6162 
 1314      6C6500
 1315              	.LASF2:
 1316 026b 73686F72 		.ascii	"short int\000"
 1316      7420696E 
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccnsNO6e.s 			page 33


 1316      7400
 1317              	.LASF31:
 1318 0275 6973725F 		.ascii	"isr_pwm_Disable\000"
 1318      70776D5F 
 1318      44697361 
 1318      626C6500 
 1319              	.LASF27:
 1320 0285 7072696F 		.ascii	"priorityOffset\000"
 1320      72697479 
 1320      4F666673 
 1320      657400
 1321              	.LASF22:
 1322 0294 6973725F 		.ascii	"isr_pwm_SetVector\000"
 1322      70776D5F 
 1322      53657456 
 1322      6563746F 
 1322      7200
 1323              	.LASF4:
 1324 02a6 6C6F6E67 		.ascii	"long int\000"
 1324      20696E74 
 1324      00
 1325              	.LASF16:
 1326 02af 6C6F6E67 		.ascii	"long double\000"
 1326      20646F75 
 1326      626C6500 
 1327              	.LASF0:
 1328 02bb 7369676E 		.ascii	"signed char\000"
 1328      65642063 
 1328      68617200 
 1329              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
