ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"userinterface.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	btnStatus,1,4
  20              		.bss
  21              		.align	2
  22              	btnArray:
  23 0000 000000   		.space	3
  24 0003 00       		.align	2
  25              	bcpTxBuffer:
  26 0004 00000000 		.space	32
  26      00000000 
  26      00000000 
  26      00000000 
  26      00000000 
  27              		.align	2
  28              	bcpRxBuffer:
  29 0024 00000000 		.space	16
  29      00000000 
  29      00000000 
  29      00000000 
  30              	bcpRxBufferIx:
  31 0034 00       		.space	1
  32              		.global	bcpRxFlag
  33              		.type	bcpRxFlag, %object
  34              		.size	bcpRxFlag, 1
  35              	bcpRxFlag:
  36 0035 00       		.space	1
  37              		.global	tempOutputSpeedRef
  38 0036 0000     		.align	2
  39              		.type	tempOutputSpeedRef, %object
  40              		.size	tempOutputSpeedRef, 4
  41              	tempOutputSpeedRef:
  42 0038 00000000 		.space	4
  43              		.global	tempAngularPos
  44              		.align	1
  45              		.type	tempAngularPos, %object
  46              		.size	tempAngularPos, 2
  47              	tempAngularPos:
  48 003c 0000     		.space	2
  49              		.section	.text.ButtonInit,"ax",%progbits
  50              		.align	2
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 2


  51              		.global	ButtonInit
  52              		.code	16
  53              		.thumb_func
  54              		.type	ButtonInit, %function
  55              	ButtonInit:
  56              	.LFB32:
  57              		.file 1 "userinterface.c"
   1:userinterface.c **** /*******************************************************************************
   2:userinterface.c **** * Project Name		: Sensored BLDC Motor Control
   3:userinterface.c **** * File Name			: userinterface.c
   4:userinterface.c **** * Version			: 1.0
   5:userinterface.c **** * Device Used		: CY8C4245AXI-483     
   6:userinterface.c **** * Software Used		: PSoC Creator 4.2
   7:userinterface.c **** * Compiler Used		: ARM GCC 5.4.1 
   8:userinterface.c **** * Related Hardware  : CY8CKIT-042 PSoC 4 Pioneer Kit + CY8CKIT-037 PSoC 4
   9:userinterface.c **** *                     Motor Control Evaluation Kit
  10:userinterface.c **** ******************************************************************************
  11:userinterface.c **** * Copyright (2018), Cypress Semiconductor Corporation. All rights reserved.
  12:userinterface.c **** *******************************************************************************
  13:userinterface.c **** * This software, including source code, documentation and related materials
  14:userinterface.c **** * (“Software”), is owned by Cypress Semiconductor Corporation or one of its
  15:userinterface.c **** * subsidiaries (“Cypress”) and is protected by and subject to worldwide patent
  16:userinterface.c **** * protection (United States and foreign), United States copyright laws and
  17:userinterface.c **** * international treaty provisions. Therefore, you may use this Software only
  18:userinterface.c **** * as provided in the license agreement accompanying the software package from
  19:userinterface.c **** * which you obtained this Software (“EULA”).
  20:userinterface.c **** *
  21:userinterface.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  22:userinterface.c **** * non-transferable license to copy, modify, and compile the Software source
  23:userinterface.c **** * code solely for use in connection with Cypress’s integrated circuit products.
  24:userinterface.c **** * Any reproduction, modification, translation, compilation, or representation
  25:userinterface.c **** * of this Software except as specified above is prohibited without the express
  26:userinterface.c **** * written permission of Cypress.
  27:userinterface.c **** *
  28:userinterface.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND, 
  29:userinterface.c **** * EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED 
  30:userinterface.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress 
  31:userinterface.c **** * reserves the right to make changes to the Software without notice. Cypress 
  32:userinterface.c **** * does not assume any liability arising out of the application or use of the 
  33:userinterface.c **** * Software or any product or circuit described in the Software. Cypress does 
  34:userinterface.c **** * not authorize its products for use in any products where a malfunction or 
  35:userinterface.c **** * failure of the Cypress product may reasonably be expected to result in 
  36:userinterface.c **** * significant property damage, injury or death (“High Risk Product”). By 
  37:userinterface.c **** * including Cypress’s product in a High Risk Product, the manufacturer of such 
  38:userinterface.c **** * system or application assumes all risk of such use and in doing so agrees to 
  39:userinterface.c **** * indemnify Cypress against all liability.
  40:userinterface.c **** *******************************************************************************/
  41:userinterface.c **** #include <project.h>
  42:userinterface.c **** #include "motor.h"
  43:userinterface.c **** #include "getvalue.h"
  44:userinterface.c **** #include "userinterface.h"
  45:userinterface.c **** 
  46:userinterface.c **** 
  47:userinterface.c **** /******************************************************************************
  48:userinterface.c ****  * Global variables definition
  49:userinterface.c ****  * ----------------------------------------------------------------------------
  50:userinterface.c ****  * These variables should be populated to other modules. Header file contains 
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 3


  51:userinterface.c ****  * the extern statement for these variables.
  52:userinterface.c ****  ******************************************************************************/ 
  53:userinterface.c **** 
  54:userinterface.c **** /* press status for button SW2, default is BUTTON_OFF */
  55:userinterface.c **** uint8 btnStatus[BTN_COUNT];
  56:userinterface.c **** 
  57:userinterface.c **** /******************************************************************************
  58:userinterface.c ****  * Local Macro definition
  59:userinterface.c ****  * ----------------------------------------------------------------------------
  60:userinterface.c ****  * These Macros are only used in this module. These Macros should not be 
  61:userinterface.c ****  * populated to other modules.
  62:userinterface.c ****  ******************************************************************************/
  63:userinterface.c **** #define BTN_LOW_LEVEL                       (uint8)(0x00)
  64:userinterface.c **** #define BTN_HIHG_LEVEL                      (uint8)(0x01)
  65:userinterface.c **** 
  66:userinterface.c **** /* this macro defines the initial level when starting to detect button pressing */
  67:userinterface.c **** #define BTN_OFF_LEVEL                       BTN_HIHG_LEVEL
  68:userinterface.c **** /* this macro defines the desired level when button is pressed */
  69:userinterface.c **** #define BTN_ON_LEVEL                        BTN_LOW_LEVEL
  70:userinterface.c **** 
  71:userinterface.c **** /* debounce count for button glitch filter */
  72:userinterface.c **** #define BTN_GLITCH_FILTER_ACTIVE_CNT        (uint8)(15)
  73:userinterface.c **** #define BTN_GLITCH_FILTER_DISCARD_CNT       (uint8)(5)
  74:userinterface.c **** #define BTN_GLITCH_FILTER_INIT_CNT          (uint8)(10)
  75:userinterface.c **** 
  76:userinterface.c **** /******************************************************************************
  77:userinterface.c ****  * Local variables definition
  78:userinterface.c ****  * ----------------------------------------------------------------------------
  79:userinterface.c ****  * These variables are only used in this module. These variables should not be 
  80:userinterface.c ****  * populated to other modules.
  81:userinterface.c ****  ******************************************************************************/
  82:userinterface.c **** typedef struct _Btn_Status_T
  83:userinterface.c **** {
  84:userinterface.c ****     uint8   preBtnStatus;                   /* variable to store last status of button level  */
  85:userinterface.c ****     uint8   glitchFilter;                   /* glitch filter counter for button pressing */
  86:userinterface.c ****     uint8   btnIsDetectFlag;                 /* flag to store button pressing event */ 
  87:userinterface.c **** }Btn_Status_T;
  88:userinterface.c **** 
  89:userinterface.c **** static Btn_Status_T btnArray[BTN_COUNT];
  90:userinterface.c **** 
  91:userinterface.c **** static uint8 bcpTxBuffer[32];
  92:userinterface.c **** 
  93:userinterface.c **** // Variables from example Tx code
  94:userinterface.c **** static uint8 bcpRxBuffer[16];
  95:userinterface.c **** static uint8 bcpRxBufferIx = 0;
  96:userinterface.c **** uint8_t bcpRxFlag = 0;
  97:userinterface.c **** 
  98:userinterface.c **** // Communication Variables
  99:userinterface.c **** uint32 tempOutputSpeedRef = 0;
 100:userinterface.c **** uint16 tempAngularPos = 0;
 101:userinterface.c **** 
 102:userinterface.c **** /*******************************************************************************
 103:userinterface.c **** * Function Name: Button_Init
 104:userinterface.c **** ********************************************************************************
 105:userinterface.c **** * Summary:
 106:userinterface.c **** *   Initialize button status structure to detect pressing event
 107:userinterface.c **** *
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 4


 108:userinterface.c **** * Parameters:  
 109:userinterface.c **** *   void
 110:userinterface.c **** *
 111:userinterface.c **** * Return: 
 112:userinterface.c **** *   void
 113:userinterface.c **** *
 114:userinterface.c **** *******************************************************************************/
 115:userinterface.c **** void ButtonInit(void)
 116:userinterface.c **** {
  58              		.loc 1 116 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 8
  61              		@ frame_needed = 1, uses_anonymous_args = 0
  62 0000 80B5     		push	{r7, lr}
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 7, -8
  65              		.cfi_offset 14, -4
  66 0002 82B0     		sub	sp, sp, #8
  67              		.cfi_def_cfa_offset 16
  68 0004 00AF     		add	r7, sp, #0
  69              		.cfi_def_cfa_register 7
 117:userinterface.c ****     uint8 i = 0;
  70              		.loc 1 117 0
  71 0006 FB1D     		adds	r3, r7, #7
  72 0008 0022     		movs	r2, #0
  73 000a 1A70     		strb	r2, [r3]
 118:userinterface.c ****     
 119:userinterface.c ****     for(i = 0; i < BTN_COUNT; i++)
  74              		.loc 1 119 0
  75 000c FB1D     		adds	r3, r7, #7
  76 000e 0022     		movs	r2, #0
  77 0010 1A70     		strb	r2, [r3]
  78 0012 20E0     		b	.L2
  79              	.L3:
 120:userinterface.c ****     {
 121:userinterface.c ****         btnArray[i].preBtnStatus = BTN_OFF_LEVEL;
  80              		.loc 1 121 0 discriminator 3
  81 0014 FB1D     		adds	r3, r7, #7
  82 0016 1A78     		ldrb	r2, [r3]
  83 0018 1349     		ldr	r1, .L4
  84 001a 1300     		movs	r3, r2
  85 001c 5B00     		lsls	r3, r3, #1
  86 001e 9B18     		adds	r3, r3, r2
  87 0020 0122     		movs	r2, #1
  88 0022 5A54     		strb	r2, [r3, r1]
 122:userinterface.c ****         btnArray[i].glitchFilter = BTN_GLITCH_FILTER_INIT_CNT;
  89              		.loc 1 122 0 discriminator 3
  90 0024 FB1D     		adds	r3, r7, #7
  91 0026 1A78     		ldrb	r2, [r3]
  92 0028 0F49     		ldr	r1, .L4
  93 002a 1300     		movs	r3, r2
  94 002c 5B00     		lsls	r3, r3, #1
  95 002e 9B18     		adds	r3, r3, r2
  96 0030 CB18     		adds	r3, r1, r3
  97 0032 0133     		adds	r3, r3, #1
  98 0034 0A22     		movs	r2, #10
  99 0036 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 5


 123:userinterface.c ****         btnArray[i].btnIsDetectFlag = FALSE;
 100              		.loc 1 123 0 discriminator 3
 101 0038 FB1D     		adds	r3, r7, #7
 102 003a 1A78     		ldrb	r2, [r3]
 103 003c 0A49     		ldr	r1, .L4
 104 003e 1300     		movs	r3, r2
 105 0040 5B00     		lsls	r3, r3, #1
 106 0042 9B18     		adds	r3, r3, r2
 107 0044 CB18     		adds	r3, r1, r3
 108 0046 0233     		adds	r3, r3, #2
 109 0048 0022     		movs	r2, #0
 110 004a 1A70     		strb	r2, [r3]
 119:userinterface.c ****     {
 111              		.loc 1 119 0 discriminator 3
 112 004c FB1D     		adds	r3, r7, #7
 113 004e 1A78     		ldrb	r2, [r3]
 114 0050 FB1D     		adds	r3, r7, #7
 115 0052 0132     		adds	r2, r2, #1
 116 0054 1A70     		strb	r2, [r3]
 117              	.L2:
 119:userinterface.c ****     {
 118              		.loc 1 119 0 is_stmt 0 discriminator 1
 119 0056 FB1D     		adds	r3, r7, #7
 120 0058 1B78     		ldrb	r3, [r3]
 121 005a 002B     		cmp	r3, #0
 122 005c DAD0     		beq	.L3
 124:userinterface.c ****     }
 125:userinterface.c **** }
 123              		.loc 1 125 0 is_stmt 1
 124 005e C046     		nop
 125 0060 BD46     		mov	sp, r7
 126 0062 02B0     		add	sp, sp, #8
 127              		@ sp needed
 128 0064 80BD     		pop	{r7, pc}
 129              	.L5:
 130 0066 C046     		.align	2
 131              	.L4:
 132 0068 00000000 		.word	btnArray
 133              		.cfi_endproc
 134              	.LFE32:
 135              		.size	ButtonInit, .-ButtonInit
 136              		.section	.text.ButtonPressDetect,"ax",%progbits
 137              		.align	2
 138              		.global	ButtonPressDetect
 139              		.code	16
 140              		.thumb_func
 141              		.type	ButtonPressDetect, %function
 142              	ButtonPressDetect:
 143              	.LFB33:
 126:userinterface.c **** 
 127:userinterface.c **** /*******************************************************************************
 128:userinterface.c **** * Function Name: ButtonPressDetect
 129:userinterface.c **** ********************************************************************************
 130:userinterface.c **** * Summary:
 131:userinterface.c **** *   Detect button status for pressing event
 132:userinterface.c **** *
 133:userinterface.c **** * Parameters:  
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 6


 134:userinterface.c **** *   void
 135:userinterface.c **** *
 136:userinterface.c **** * Return: 
 137:userinterface.c **** *   void
 138:userinterface.c **** *
 139:userinterface.c **** *******************************************************************************/
 140:userinterface.c **** void ButtonPressDetect(uint8 btnStatus, Btn_Status_T* btnArrayPtr, uint8* btnStatusPtr)
 141:userinterface.c **** {
 144              		.loc 1 141 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 24
 147              		@ frame_needed = 1, uses_anonymous_args = 0
 148 0000 80B5     		push	{r7, lr}
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 7, -8
 151              		.cfi_offset 14, -4
 152 0002 86B0     		sub	sp, sp, #24
 153              		.cfi_def_cfa_offset 32
 154 0004 00AF     		add	r7, sp, #0
 155              		.cfi_def_cfa_register 7
 156 0006 B960     		str	r1, [r7, #8]
 157 0008 7A60     		str	r2, [r7, #4]
 158 000a 0F23     		movs	r3, #15
 159 000c FB18     		adds	r3, r7, r3
 160 000e 021C     		adds	r2, r0, #0
 161 0010 1A70     		strb	r2, [r3]
 142:userinterface.c ****     uint8 curBtnStatus = btnStatus;    /* get current button level status */
 162              		.loc 1 142 0
 163 0012 1723     		movs	r3, #23
 164 0014 FB18     		adds	r3, r7, r3
 165 0016 0F22     		movs	r2, #15
 166 0018 BA18     		adds	r2, r7, r2
 167 001a 1278     		ldrb	r2, [r2]
 168 001c 1A70     		strb	r2, [r3]
 143:userinterface.c ****     if(btnArrayPtr->btnIsDetectFlag == FALSE)          
 169              		.loc 1 143 0
 170 001e BB68     		ldr	r3, [r7, #8]
 171 0020 9B78     		ldrb	r3, [r3, #2]
 172 0022 002B     		cmp	r3, #0
 173 0024 12D1     		bne	.L7
 144:userinterface.c ****     {
 145:userinterface.c ****         /* detect button pressing event */
 146:userinterface.c ****         btnArrayPtr->btnIsDetectFlag = ((curBtnStatus == BTN_ON_LEVEL) && 
 147:userinterface.c ****                                        (curBtnStatus ^ btnArrayPtr->preBtnStatus)) ? TRUE : FALSE;
 174              		.loc 1 147 0
 175 0026 1723     		movs	r3, #23
 176 0028 FB18     		adds	r3, r7, r3
 177 002a 1B78     		ldrb	r3, [r3]
 178 002c 002B     		cmp	r3, #0
 179 002e 08D1     		bne	.L8
 180              		.loc 1 147 0 is_stmt 0 discriminator 1
 181 0030 BB68     		ldr	r3, [r7, #8]
 182 0032 1B78     		ldrb	r3, [r3]
 183 0034 1722     		movs	r2, #23
 184 0036 BA18     		adds	r2, r7, r2
 185 0038 1278     		ldrb	r2, [r2]
 186 003a 9A42     		cmp	r2, r3
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 7


 187 003c 01D0     		beq	.L8
 188              		.loc 1 147 0 discriminator 3
 189 003e 0123     		movs	r3, #1
 190 0040 00E0     		b	.L9
 191              	.L8:
 192              		.loc 1 147 0 discriminator 4
 193 0042 0023     		movs	r3, #0
 194              	.L9:
 146:userinterface.c ****                                        (curBtnStatus ^ btnArrayPtr->preBtnStatus)) ? TRUE : FALSE;
 195              		.loc 1 146 0 is_stmt 1
 196 0044 DAB2     		uxtb	r2, r3
 197 0046 BB68     		ldr	r3, [r7, #8]
 198 0048 9A70     		strb	r2, [r3, #2]
 199 004a 2EE0     		b	.L10
 200              	.L7:
 148:userinterface.c ****     }
 149:userinterface.c ****     else
 150:userinterface.c ****     {
 151:userinterface.c ****         if(curBtnStatus == BTN_ON_LEVEL)   /* button keeps in desired level status */
 201              		.loc 1 151 0
 202 004c 1723     		movs	r3, #23
 203 004e FB18     		adds	r3, r7, r3
 204 0050 1B78     		ldrb	r3, [r3]
 205 0052 002B     		cmp	r3, #0
 206 0054 18D1     		bne	.L11
 152:userinterface.c ****         {            
 153:userinterface.c ****             /*  detect if glitch filter counter value is larger than pre-defined threshold */
 154:userinterface.c ****             if(btnArrayPtr->glitchFilter > BTN_GLITCH_FILTER_ACTIVE_CNT)
 207              		.loc 1 154 0
 208 0056 BB68     		ldr	r3, [r7, #8]
 209 0058 5B78     		ldrb	r3, [r3, #1]
 210 005a 0F2B     		cmp	r3, #15
 211 005c 0DD9     		bls	.L12
 155:userinterface.c ****             {
 156:userinterface.c ****                 /* succeed in button pressing detection, invert button ON/OFF status */
 157:userinterface.c ****                 *btnStatusPtr = *btnStatusPtr ^ BUTTON_ON;
 212              		.loc 1 157 0
 213 005e 7B68     		ldr	r3, [r7, #4]
 214 0060 1B78     		ldrb	r3, [r3]
 215 0062 0122     		movs	r2, #1
 216 0064 5340     		eors	r3, r2
 217 0066 DAB2     		uxtb	r2, r3
 218 0068 7B68     		ldr	r3, [r7, #4]
 219 006a 1A70     		strb	r2, [r3]
 158:userinterface.c ****                 /* reset glitch filter counter */
 159:userinterface.c ****                 btnArrayPtr->glitchFilter = BTN_GLITCH_FILTER_INIT_CNT;
 220              		.loc 1 159 0
 221 006c BB68     		ldr	r3, [r7, #8]
 222 006e 0A22     		movs	r2, #10
 223 0070 5A70     		strb	r2, [r3, #1]
 160:userinterface.c ****                 /* clear detection flag */
 161:userinterface.c ****                 btnArrayPtr->btnIsDetectFlag = FALSE;
 224              		.loc 1 161 0
 225 0072 BB68     		ldr	r3, [r7, #8]
 226 0074 0022     		movs	r2, #0
 227 0076 9A70     		strb	r2, [r3, #2]
 228 0078 17E0     		b	.L10
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 8


 229              	.L12:
 162:userinterface.c ****             }
 163:userinterface.c ****             else
 164:userinterface.c ****             {
 165:userinterface.c ****                 /* increase glitch filter counter */
 166:userinterface.c ****                 btnArrayPtr->glitchFilter++; 
 230              		.loc 1 166 0
 231 007a BB68     		ldr	r3, [r7, #8]
 232 007c 5B78     		ldrb	r3, [r3, #1]
 233 007e 0133     		adds	r3, r3, #1
 234 0080 DAB2     		uxtb	r2, r3
 235 0082 BB68     		ldr	r3, [r7, #8]
 236 0084 5A70     		strb	r2, [r3, #1]
 237 0086 10E0     		b	.L10
 238              	.L11:
 167:userinterface.c ****             }
 168:userinterface.c ****         }
 169:userinterface.c ****         else
 170:userinterface.c ****         {
 171:userinterface.c ****             if(btnArrayPtr->glitchFilter < BTN_GLITCH_FILTER_DISCARD_CNT)
 239              		.loc 1 171 0
 240 0088 BB68     		ldr	r3, [r7, #8]
 241 008a 5B78     		ldrb	r3, [r3, #1]
 242 008c 042B     		cmp	r3, #4
 243 008e 06D8     		bhi	.L14
 172:userinterface.c ****             {
 173:userinterface.c ****                 /* keep buttons status unchanged, reset glitch filter counter */
 174:userinterface.c ****                 btnArrayPtr->glitchFilter = BTN_GLITCH_FILTER_INIT_CNT;
 244              		.loc 1 174 0
 245 0090 BB68     		ldr	r3, [r7, #8]
 246 0092 0A22     		movs	r2, #10
 247 0094 5A70     		strb	r2, [r3, #1]
 175:userinterface.c ****                 /* clear detection flag */
 176:userinterface.c ****                 btnArrayPtr->btnIsDetectFlag = FALSE;
 248              		.loc 1 176 0
 249 0096 BB68     		ldr	r3, [r7, #8]
 250 0098 0022     		movs	r2, #0
 251 009a 9A70     		strb	r2, [r3, #2]
 252 009c 05E0     		b	.L10
 253              	.L14:
 177:userinterface.c ****             }
 178:userinterface.c ****             else
 179:userinterface.c ****             {
 180:userinterface.c ****                  /* decrease glitch filter counter */
 181:userinterface.c ****                 btnArrayPtr->glitchFilter--; 
 254              		.loc 1 181 0
 255 009e BB68     		ldr	r3, [r7, #8]
 256 00a0 5B78     		ldrb	r3, [r3, #1]
 257 00a2 013B     		subs	r3, r3, #1
 258 00a4 DAB2     		uxtb	r2, r3
 259 00a6 BB68     		ldr	r3, [r7, #8]
 260 00a8 5A70     		strb	r2, [r3, #1]
 261              	.L10:
 182:userinterface.c ****             }
 183:userinterface.c ****         }
 184:userinterface.c ****     }
 185:userinterface.c ****     /* update last button status with current status */
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 9


 186:userinterface.c ****     btnArrayPtr->preBtnStatus = curBtnStatus;
 262              		.loc 1 186 0
 263 00aa BB68     		ldr	r3, [r7, #8]
 264 00ac 1722     		movs	r2, #23
 265 00ae BA18     		adds	r2, r7, r2
 266 00b0 1278     		ldrb	r2, [r2]
 267 00b2 1A70     		strb	r2, [r3]
 187:userinterface.c **** }
 268              		.loc 1 187 0
 269 00b4 C046     		nop
 270 00b6 BD46     		mov	sp, r7
 271 00b8 06B0     		add	sp, sp, #24
 272              		@ sp needed
 273 00ba 80BD     		pop	{r7, pc}
 274              		.cfi_endproc
 275              	.LFE33:
 276              		.size	ButtonPressDetect, .-ButtonPressDetect
 277              		.section	.text.ButtonProcess,"ax",%progbits
 278              		.align	2
 279              		.global	ButtonProcess
 280              		.code	16
 281              		.thumb_func
 282              		.type	ButtonProcess, %function
 283              	ButtonProcess:
 284              	.LFB34:
 188:userinterface.c **** 
 189:userinterface.c **** /*******************************************************************************
 190:userinterface.c **** * Function Name: ButtonProcess
 191:userinterface.c **** ********************************************************************************
 192:userinterface.c **** * Summary:   
 193:userinterface.c **** * This function detects the press action of button.
 194:userinterface.c **** *
 195:userinterface.c **** * Parameters: None 
 196:userinterface.c **** *  
 197:userinterface.c **** * Return: None
 198:userinterface.c **** *
 199:userinterface.c **** *******************************************************************************/
 200:userinterface.c **** void ButtonProcess(void)
 201:userinterface.c **** {
 285              		.loc 1 201 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 1, uses_anonymous_args = 0
 289 0000 80B5     		push	{r7, lr}
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 7, -8
 292              		.cfi_offset 14, -4
 293 0002 00AF     		add	r7, sp, #0
 294              		.cfi_def_cfa_register 7
 202:userinterface.c ****     ButtonPressDetect(SW2_Read(), &btnArray[0], &btnStatus[0]);
 295              		.loc 1 202 0
 296 0004 FFF7FEFF 		bl	SW2_Read
 297 0008 0300     		movs	r3, r0
 298 000a 1800     		movs	r0, r3
 299 000c 0C4A     		ldr	r2, .L19
 300 000e 0D4B     		ldr	r3, .L19+4
 301 0010 1900     		movs	r1, r3
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 10


 302 0012 FFF7FEFF 		bl	ButtonPressDetect
 203:userinterface.c ****     if(btnStatus[0] == BUTTON_ON)
 303              		.loc 1 203 0
 304 0016 0A4B     		ldr	r3, .L19
 305 0018 1B78     		ldrb	r3, [r3]
 306 001a 012B     		cmp	r3, #1
 307 001c 06D1     		bne	.L16
 204:userinterface.c ****     {
 205:userinterface.c ****         UI_Cmd.run = TRUE;	
 308              		.loc 1 205 0
 309 001e 0A4B     		ldr	r3, .L19+8
 310 0020 0122     		movs	r2, #1
 311 0022 1A70     		strb	r2, [r3]
 206:userinterface.c **** 	    stateSys = STATUS_RUN;
 312              		.loc 1 206 0
 313 0024 094B     		ldr	r3, .L19+12
 314 0026 0122     		movs	r2, #1
 315 0028 1A70     		strb	r2, [r3]
 207:userinterface.c ****     }
 208:userinterface.c ****     else
 209:userinterface.c ****     {
 210:userinterface.c ****         UI_Cmd.run = FALSE; 	
 211:userinterface.c **** 	    stateSys = STATUS_STOP;
 212:userinterface.c ****     }
 213:userinterface.c **** }
 316              		.loc 1 213 0
 317 002a 05E0     		b	.L18
 318              	.L16:
 210:userinterface.c **** 	    stateSys = STATUS_STOP;
 319              		.loc 1 210 0
 320 002c 064B     		ldr	r3, .L19+8
 321 002e 0022     		movs	r2, #0
 322 0030 1A70     		strb	r2, [r3]
 211:userinterface.c ****     }
 323              		.loc 1 211 0
 324 0032 064B     		ldr	r3, .L19+12
 325 0034 0222     		movs	r2, #2
 326 0036 1A70     		strb	r2, [r3]
 327              	.L18:
 328              		.loc 1 213 0
 329 0038 C046     		nop
 330 003a BD46     		mov	sp, r7
 331              		@ sp needed
 332 003c 80BD     		pop	{r7, pc}
 333              	.L20:
 334 003e C046     		.align	2
 335              	.L19:
 336 0040 00000000 		.word	btnStatus
 337 0044 00000000 		.word	btnArray
 338 0048 00000000 		.word	UI_Cmd
 339 004c 00000000 		.word	stateSys
 340              		.cfi_endproc
 341              	.LFE34:
 342              		.size	ButtonProcess, .-ButtonProcess
 343              		.section	.text.UpdateStatusInit,"ax",%progbits
 344              		.align	2
 345              		.global	UpdateStatusInit
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 11


 346              		.code	16
 347              		.thumb_func
 348              		.type	UpdateStatusInit, %function
 349              	UpdateStatusInit:
 350              	.LFB35:
 214:userinterface.c **** 
 215:userinterface.c **** /*******************************************************************************
 216:userinterface.c **** * Function Name: UpdateStatusStart
 217:userinterface.c **** ********************************************************************************
 218:userinterface.c **** * Summary:   
 219:userinterface.c **** * This function initialize the motor, and ready to start.
 220:userinterface.c **** *
 221:userinterface.c **** * Parameters: None 
 222:userinterface.c **** *  
 223:userinterface.c **** * Return: None
 224:userinterface.c **** *
 225:userinterface.c **** *******************************************************************************/
 226:userinterface.c **** void UpdateStatusInit(void)
 227:userinterface.c **** {
 351              		.loc 1 227 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 1, uses_anonymous_args = 0
 355 0000 80B5     		push	{r7, lr}
 356              		.cfi_def_cfa_offset 8
 357              		.cfi_offset 7, -8
 358              		.cfi_offset 14, -4
 359 0002 00AF     		add	r7, sp, #0
 360              		.cfi_def_cfa_register 7
 228:userinterface.c **** 	UI_Cmd.run = FALSE;
 361              		.loc 1 228 0
 362 0004 044B     		ldr	r3, .L22
 363 0006 0022     		movs	r2, #0
 364 0008 1A70     		strb	r2, [r3]
 229:userinterface.c **** 	stateSys = STATUS_STOP;	
 365              		.loc 1 229 0
 366 000a 044B     		ldr	r3, .L22+4
 367 000c 0222     		movs	r2, #2
 368 000e 1A70     		strb	r2, [r3]
 230:userinterface.c **** }
 369              		.loc 1 230 0
 370 0010 C046     		nop
 371 0012 BD46     		mov	sp, r7
 372              		@ sp needed
 373 0014 80BD     		pop	{r7, pc}
 374              	.L23:
 375 0016 C046     		.align	2
 376              	.L22:
 377 0018 00000000 		.word	UI_Cmd
 378 001c 00000000 		.word	stateSys
 379              		.cfi_endproc
 380              	.LFE35:
 381              		.size	UpdateStatusInit, .-UpdateStatusInit
 382              		.section	.text.UpdateStatusError,"ax",%progbits
 383              		.align	2
 384              		.global	UpdateStatusError
 385              		.code	16
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 12


 386              		.thumb_func
 387              		.type	UpdateStatusError, %function
 388              	UpdateStatusError:
 389              	.LFB36:
 231:userinterface.c **** 
 232:userinterface.c **** /*******************************************************************************
 233:userinterface.c **** * Function Name: UpdateStatusError
 234:userinterface.c **** ********************************************************************************
 235:userinterface.c **** * Summary:   
 236:userinterface.c **** * This function stop the motor and update error flag.
 237:userinterface.c **** *
 238:userinterface.c **** * Parameters: None 
 239:userinterface.c **** *  
 240:userinterface.c **** * Return: None
 241:userinterface.c **** *
 242:userinterface.c **** *******************************************************************************/
 243:userinterface.c **** void UpdateStatusError()
 244:userinterface.c **** {	
 390              		.loc 1 244 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 1, uses_anonymous_args = 0
 394 0000 80B5     		push	{r7, lr}
 395              		.cfi_def_cfa_offset 8
 396              		.cfi_offset 7, -8
 397              		.cfi_offset 14, -4
 398 0002 00AF     		add	r7, sp, #0
 399              		.cfi_def_cfa_register 7
 245:userinterface.c **** 	stateSys = STATUS_ERROR;	
 400              		.loc 1 245 0
 401 0004 024B     		ldr	r3, .L25
 402 0006 0322     		movs	r2, #3
 403 0008 1A70     		strb	r2, [r3]
 246:userinterface.c **** }
 404              		.loc 1 246 0
 405 000a C046     		nop
 406 000c BD46     		mov	sp, r7
 407              		@ sp needed
 408 000e 80BD     		pop	{r7, pc}
 409              	.L26:
 410              		.align	2
 411              	.L25:
 412 0010 00000000 		.word	stateSys
 413              		.cfi_endproc
 414              	.LFE36:
 415              		.size	UpdateStatusError, .-UpdateStatusError
 416              		.global	__aeabi_d2uiz
 417              		.section	.text.BCPPoll,"ax",%progbits
 418              		.align	2
 419              		.global	BCPPoll
 420              		.code	16
 421              		.thumb_func
 422              		.type	BCPPoll, %function
 423              	BCPPoll:
 424              	.LFB37:
 247:userinterface.c **** 
 248:userinterface.c **** /****************************************************************************************
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 13


 249:userinterface.c **** *                                                                             
 250:userinterface.c **** *   Function:    BCPPoll                                                        
 251:userinterface.c **** *                                                                             
 252:userinterface.c **** *   Description: BCPPoll routine                                                   
 253:userinterface.c **** *             Format:  RX8 [h=55] @0speed @1speed [t=AA]                      
 254:userinterface.c **** *   Parameters:   None                                                          
 255:userinterface.c **** *                                                                                 
 256:userinterface.c **** *   Returns:     None                                                                 
 257:userinterface.c **** *                                                                                   
 258:userinterface.c **** ****************************************************************************************/
 259:userinterface.c **** 
 260:userinterface.c **** void BCPPoll()
 261:userinterface.c **** {
 425              		.loc 1 261 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 8
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429 0000 90B5     		push	{r4, r7, lr}
 430              		.cfi_def_cfa_offset 12
 431              		.cfi_offset 4, -12
 432              		.cfi_offset 7, -8
 433              		.cfi_offset 14, -4
 434 0002 83B0     		sub	sp, sp, #12
 435              		.cfi_def_cfa_offset 24
 436 0004 00AF     		add	r7, sp, #0
 437              		.cfi_def_cfa_register 7
 262:userinterface.c ****     uint8 index = 0;
 438              		.loc 1 262 0
 439 0006 FB1D     		adds	r3, r7, #7
 440 0008 0022     		movs	r2, #0
 441 000a 1A70     		strb	r2, [r3]
 263:userinterface.c ****     
 264:userinterface.c ****     if(UART_BCP_SpiUartGetTxBufferSize())
 442              		.loc 1 264 0
 443 000c FFF7FEFF 		bl	UART_BCP_SpiUartGetTxBufferSize
 444 0010 031E     		subs	r3, r0, #0
 445 0012 00D0     		beq	.LCB342
 446 0014 F6E0     		b	.L33	@long jump
 447              	.LCB342:
 265:userinterface.c ****        return;
 266:userinterface.c ****     
 267:userinterface.c ****     /* package header */
 268:userinterface.c ****     bcpTxBuffer[index++] = 0x55;
 448              		.loc 1 268 0
 449 0016 FB1D     		adds	r3, r7, #7
 450 0018 1B78     		ldrb	r3, [r3]
 451 001a FA1D     		adds	r2, r7, #7
 452 001c 591C     		adds	r1, r3, #1
 453 001e 1170     		strb	r1, [r2]
 454 0020 1A00     		movs	r2, r3
 455 0022 7A4B     		ldr	r3, .L34
 456 0024 5521     		movs	r1, #85
 457 0026 9954     		strb	r1, [r3, r2]
 269:userinterface.c ****     
 270:userinterface.c ****     //if a message has been received, echo that message    
 271:userinterface.c ****     if (bcpRxFlag > 0 ) {
 458              		.loc 1 271 0
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 14


 459 0028 794B     		ldr	r3, .L34+4
 460 002a 1B78     		ldrb	r3, [r3]
 461 002c 002B     		cmp	r3, #0
 462 002e 24D0     		beq	.L30
 272:userinterface.c ****         for (index = 0; index < bcpRxBufferIx; index++)
 463              		.loc 1 272 0
 464 0030 FB1D     		adds	r3, r7, #7
 465 0032 0022     		movs	r2, #0
 466 0034 1A70     		strb	r2, [r3]
 467 0036 0CE0     		b	.L31
 468              	.L32:
 273:userinterface.c ****         {
 274:userinterface.c ****             bcpTxBuffer[index] = bcpRxBuffer[index];
 469              		.loc 1 274 0 discriminator 3
 470 0038 FB1D     		adds	r3, r7, #7
 471 003a 1B78     		ldrb	r3, [r3]
 472 003c FA1D     		adds	r2, r7, #7
 473 003e 1278     		ldrb	r2, [r2]
 474 0040 7449     		ldr	r1, .L34+8
 475 0042 895C     		ldrb	r1, [r1, r2]
 476 0044 714A     		ldr	r2, .L34
 477 0046 D154     		strb	r1, [r2, r3]
 272:userinterface.c ****         for (index = 0; index < bcpRxBufferIx; index++)
 478              		.loc 1 272 0 discriminator 3
 479 0048 FB1D     		adds	r3, r7, #7
 480 004a 1A78     		ldrb	r2, [r3]
 481 004c FB1D     		adds	r3, r7, #7
 482 004e 0132     		adds	r2, r2, #1
 483 0050 1A70     		strb	r2, [r3]
 484              	.L31:
 272:userinterface.c ****         for (index = 0; index < bcpRxBufferIx; index++)
 485              		.loc 1 272 0 is_stmt 0 discriminator 1
 486 0052 714B     		ldr	r3, .L34+12
 487 0054 1B78     		ldrb	r3, [r3]
 488 0056 FA1D     		adds	r2, r7, #7
 489 0058 1278     		ldrb	r2, [r2]
 490 005a 9A42     		cmp	r2, r3
 491 005c ECD3     		bcc	.L32
 275:userinterface.c ****         }    
 276:userinterface.c ****         UART_BCP_SpiUartPutArray(bcpTxBuffer, index);
 492              		.loc 1 276 0 is_stmt 1
 493 005e FB1D     		adds	r3, r7, #7
 494 0060 1A78     		ldrb	r2, [r3]
 495 0062 6A4B     		ldr	r3, .L34
 496 0064 1100     		movs	r1, r2
 497 0066 1800     		movs	r0, r3
 498 0068 FFF7FEFF 		bl	UART_BCP_SpiUartPutArray
 277:userinterface.c ****         bcpRxBufferIx=0;
 499              		.loc 1 277 0
 500 006c 6A4B     		ldr	r3, .L34+12
 501 006e 0022     		movs	r2, #0
 502 0070 1A70     		strb	r2, [r3]
 278:userinterface.c ****         
 279:userinterface.c ****         bcpRxFlag = 0;
 503              		.loc 1 279 0
 504 0072 674B     		ldr	r3, .L34+4
 505 0074 0022     		movs	r2, #0
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 15


 506 0076 1A70     		strb	r2, [r3]
 507 0078 C5E0     		b	.L27
 508              	.L30:
 280:userinterface.c ****     }
 281:userinterface.c ****     // else send back meaured data
 282:userinterface.c ****     else {
 283:userinterface.c ****     
 284:userinterface.c ****         /* construct BCP data package with speed value, MSB first */    
 285:userinterface.c ****         
 286:userinterface.c ****         /* UI_Data.test */
 287:userinterface.c ****         bcpTxBuffer[index++] = (uint8)((UI_Data.test & 0xFF00) >> 8);
 509              		.loc 1 287 0
 510 007a FB1D     		adds	r3, r7, #7
 511 007c 1B78     		ldrb	r3, [r3]
 512 007e FA1D     		adds	r2, r7, #7
 513 0080 591C     		adds	r1, r3, #1
 514 0082 1170     		strb	r1, [r2]
 515 0084 1A00     		movs	r2, r3
 516 0086 654B     		ldr	r3, .L34+16
 517 0088 0021     		movs	r1, #0
 518 008a 5B5E     		ldrsh	r3, [r3, r1]
 519 008c 1B12     		asrs	r3, r3, #8
 520 008e D9B2     		uxtb	r1, r3
 521 0090 5E4B     		ldr	r3, .L34
 522 0092 9954     		strb	r1, [r3, r2]
 288:userinterface.c ****         bcpTxBuffer[index++] = (uint8)(UI_Data.test & 0x00FF); 
 523              		.loc 1 288 0
 524 0094 FB1D     		adds	r3, r7, #7
 525 0096 1B78     		ldrb	r3, [r3]
 526 0098 FA1D     		adds	r2, r7, #7
 527 009a 591C     		adds	r1, r3, #1
 528 009c 1170     		strb	r1, [r2]
 529 009e 1A00     		movs	r2, r3
 530 00a0 5E4B     		ldr	r3, .L34+16
 531 00a2 0021     		movs	r1, #0
 532 00a4 5B5E     		ldrsh	r3, [r3, r1]
 533 00a6 D9B2     		uxtb	r1, r3
 534 00a8 584B     		ldr	r3, .L34
 535 00aa 9954     		strb	r1, [r3, r2]
 289:userinterface.c ****         
 290:userinterface.c ****         /* UI_Data.test2 */
 291:userinterface.c ****         bcpTxBuffer[index++] = (uint8)((UI_Data.test2 & 0xFF00) >> 8);
 536              		.loc 1 291 0
 537 00ac FB1D     		adds	r3, r7, #7
 538 00ae 1B78     		ldrb	r3, [r3]
 539 00b0 FA1D     		adds	r2, r7, #7
 540 00b2 591C     		adds	r1, r3, #1
 541 00b4 1170     		strb	r1, [r2]
 542 00b6 1A00     		movs	r2, r3
 543 00b8 584B     		ldr	r3, .L34+16
 544 00ba 0221     		movs	r1, #2
 545 00bc 5B5E     		ldrsh	r3, [r3, r1]
 546 00be 1B12     		asrs	r3, r3, #8
 547 00c0 D9B2     		uxtb	r1, r3
 548 00c2 524B     		ldr	r3, .L34
 549 00c4 9954     		strb	r1, [r3, r2]
 292:userinterface.c ****         bcpTxBuffer[index++] = (uint8)(UI_Data.test2 & 0x00FF); 
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 16


 550              		.loc 1 292 0
 551 00c6 FB1D     		adds	r3, r7, #7
 552 00c8 1B78     		ldrb	r3, [r3]
 553 00ca FA1D     		adds	r2, r7, #7
 554 00cc 591C     		adds	r1, r3, #1
 555 00ce 1170     		strb	r1, [r2]
 556 00d0 1A00     		movs	r2, r3
 557 00d2 524B     		ldr	r3, .L34+16
 558 00d4 0221     		movs	r1, #2
 559 00d6 5B5E     		ldrsh	r3, [r3, r1]
 560 00d8 D9B2     		uxtb	r1, r3
 561 00da 4C4B     		ldr	r3, .L34
 562 00dc 9954     		strb	r1, [r3, r2]
 293:userinterface.c ****         
 294:userinterface.c ****         /* UI_Data.programStateManchineState */
 295:userinterface.c ****         bcpTxBuffer[index++] = (uint8)((UI_Data.programStateManchineState & 0xFF00) >> 8);
 563              		.loc 1 295 0
 564 00de FB1D     		adds	r3, r7, #7
 565 00e0 1B78     		ldrb	r3, [r3]
 566 00e2 FA1D     		adds	r2, r7, #7
 567 00e4 591C     		adds	r1, r3, #1
 568 00e6 1170     		strb	r1, [r2]
 569 00e8 1A00     		movs	r2, r3
 570 00ea 484B     		ldr	r3, .L34
 571 00ec 0021     		movs	r1, #0
 572 00ee 9954     		strb	r1, [r3, r2]
 296:userinterface.c ****         bcpTxBuffer[index++] = (uint8)(UI_Data.programStateManchineState & 0x00FF); 
 573              		.loc 1 296 0
 574 00f0 FB1D     		adds	r3, r7, #7
 575 00f2 1B78     		ldrb	r3, [r3]
 576 00f4 FA1D     		adds	r2, r7, #7
 577 00f6 591C     		adds	r1, r3, #1
 578 00f8 1170     		strb	r1, [r2]
 579 00fa 1900     		movs	r1, r3
 580 00fc 474B     		ldr	r3, .L34+16
 581 00fe 2322     		movs	r2, #35
 582 0100 9A5C     		ldrb	r2, [r3, r2]
 583 0102 424B     		ldr	r3, .L34
 584 0104 5A54     		strb	r2, [r3, r1]
 297:userinterface.c ****         
 298:userinterface.c ****         /* current measured speed */
 299:userinterface.c ****         bcpTxBuffer[index++] = (uint8)((UI_Data.speedRpm & 0xFF00) >> 8);
 585              		.loc 1 299 0
 586 0106 FB1D     		adds	r3, r7, #7
 587 0108 1B78     		ldrb	r3, [r3]
 588 010a FA1D     		adds	r2, r7, #7
 589 010c 591C     		adds	r1, r3, #1
 590 010e 1170     		strb	r1, [r2]
 591 0110 1A00     		movs	r2, r3
 592 0112 424B     		ldr	r3, .L34+16
 593 0114 1B89     		ldrh	r3, [r3, #8]
 594 0116 1B0A     		lsrs	r3, r3, #8
 595 0118 9BB2     		uxth	r3, r3
 596 011a D9B2     		uxtb	r1, r3
 597 011c 3B4B     		ldr	r3, .L34
 598 011e 9954     		strb	r1, [r3, r2]
 300:userinterface.c ****         bcpTxBuffer[index++] = (uint8)(UI_Data.speedRpm & 0x00FF); 
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 17


 599              		.loc 1 300 0
 600 0120 FB1D     		adds	r3, r7, #7
 601 0122 1B78     		ldrb	r3, [r3]
 602 0124 FA1D     		adds	r2, r7, #7
 603 0126 591C     		adds	r1, r3, #1
 604 0128 1170     		strb	r1, [r2]
 605 012a 1A00     		movs	r2, r3
 606 012c 3B4B     		ldr	r3, .L34+16
 607 012e 1B89     		ldrh	r3, [r3, #8]
 608 0130 D9B2     		uxtb	r1, r3
 609 0132 364B     		ldr	r3, .L34
 610 0134 9954     		strb	r1, [r3, r2]
 301:userinterface.c ****         
 302:userinterface.c ****         /* gearbox output speed reference */
 303:userinterface.c **** //        bcpTxBuffer[index++] = (uint8)((UI_Data.speedRpmRef & 0xFF00) >> 8);
 304:userinterface.c **** //        bcpTxBuffer[index++] = (uint8)(UI_Data.speedRpmRef & 0x00FF); 
 305:userinterface.c ****         
 306:userinterface.c ****         /* motor output speed target */
 307:userinterface.c ****         tempOutputSpeedRef = (uint16)UI_Data.speedRpmRef * (uint16)UI_Data.gearRatio;
 611              		.loc 1 307 0
 612 0136 394B     		ldr	r3, .L34+16
 613 0138 5B89     		ldrh	r3, [r3, #10]
 614 013a 1A00     		movs	r2, r3
 615 013c 374B     		ldr	r3, .L34+16
 616 013e DB88     		ldrh	r3, [r3, #6]
 617 0140 5343     		muls	r3, r2
 618 0142 1A00     		movs	r2, r3
 619 0144 364B     		ldr	r3, .L34+20
 620 0146 1A60     		str	r2, [r3]
 308:userinterface.c ****         bcpTxBuffer[index++] = ((tempOutputSpeedRef & 0x0000FF00) >> 8);
 621              		.loc 1 308 0
 622 0148 FB1D     		adds	r3, r7, #7
 623 014a 1B78     		ldrb	r3, [r3]
 624 014c FA1D     		adds	r2, r7, #7
 625 014e 591C     		adds	r1, r3, #1
 626 0150 1170     		strb	r1, [r2]
 627 0152 1A00     		movs	r2, r3
 628 0154 324B     		ldr	r3, .L34+20
 629 0156 1B68     		ldr	r3, [r3]
 630 0158 1B0A     		lsrs	r3, r3, #8
 631 015a D9B2     		uxtb	r1, r3
 632 015c 2B4B     		ldr	r3, .L34
 633 015e 9954     		strb	r1, [r3, r2]
 309:userinterface.c ****         bcpTxBuffer[index++] = (tempOutputSpeedRef & 0x000000FF); 
 634              		.loc 1 309 0
 635 0160 FB1D     		adds	r3, r7, #7
 636 0162 1B78     		ldrb	r3, [r3]
 637 0164 FA1D     		adds	r2, r7, #7
 638 0166 591C     		adds	r1, r3, #1
 639 0168 1170     		strb	r1, [r2]
 640 016a 1A00     		movs	r2, r3
 641 016c 2C4B     		ldr	r3, .L34+20
 642 016e 1B68     		ldr	r3, [r3]
 643 0170 D9B2     		uxtb	r1, r3
 644 0172 264B     		ldr	r3, .L34
 645 0174 9954     		strb	r1, [r3, r2]
 310:userinterface.c ****         
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 18


 311:userinterface.c ****         /* motor direction */
 312:userinterface.c ****         bcpTxBuffer[index++] = ((UI_Data.Dir & 0xFF00) >> 8);
 646              		.loc 1 312 0
 647 0176 FB1D     		adds	r3, r7, #7
 648 0178 1B78     		ldrb	r3, [r3]
 649 017a FA1D     		adds	r2, r7, #7
 650 017c 591C     		adds	r1, r3, #1
 651 017e 1170     		strb	r1, [r2]
 652 0180 1A00     		movs	r2, r3
 653 0182 224B     		ldr	r3, .L34
 654 0184 0021     		movs	r1, #0
 655 0186 9954     		strb	r1, [r3, r2]
 313:userinterface.c ****         bcpTxBuffer[index++] = (UI_Data.Dir & 0x00FF);     
 656              		.loc 1 313 0
 657 0188 FB1D     		adds	r3, r7, #7
 658 018a 1B78     		ldrb	r3, [r3]
 659 018c FA1D     		adds	r2, r7, #7
 660 018e 591C     		adds	r1, r3, #1
 661 0190 1170     		strb	r1, [r2]
 662 0192 1A00     		movs	r2, r3
 663 0194 214B     		ldr	r3, .L34+16
 664 0196 1979     		ldrb	r1, [r3, #4]
 665 0198 1C4B     		ldr	r3, .L34
 666 019a 9954     		strb	r1, [r3, r2]
 314:userinterface.c ****         
 315:userinterface.c ****         /* gearbox output angular position */
 316:userinterface.c ****         tempAngularPos = (uint16)UI_Data.angularPos;
 667              		.loc 1 316 0
 668 019c 1F4B     		ldr	r3, .L34+16
 669 019e DC69     		ldr	r4, [r3, #28]
 670 01a0 9B69     		ldr	r3, [r3, #24]
 671 01a2 1800     		movs	r0, r3
 672 01a4 2100     		movs	r1, r4
 673 01a6 FFF7FEFF 		bl	__aeabi_d2uiz
 674 01aa 0300     		movs	r3, r0
 675 01ac 9AB2     		uxth	r2, r3
 676 01ae 1D4B     		ldr	r3, .L34+24
 677 01b0 1A80     		strh	r2, [r3]
 317:userinterface.c ****         bcpTxBuffer[index++] = ((tempAngularPos & 0xFF00) >> 8);
 678              		.loc 1 317 0
 679 01b2 FB1D     		adds	r3, r7, #7
 680 01b4 1B78     		ldrb	r3, [r3]
 681 01b6 FA1D     		adds	r2, r7, #7
 682 01b8 591C     		adds	r1, r3, #1
 683 01ba 1170     		strb	r1, [r2]
 684 01bc 1A00     		movs	r2, r3
 685 01be 194B     		ldr	r3, .L34+24
 686 01c0 1B88     		ldrh	r3, [r3]
 687 01c2 1B0A     		lsrs	r3, r3, #8
 688 01c4 9BB2     		uxth	r3, r3
 689 01c6 D9B2     		uxtb	r1, r3
 690 01c8 104B     		ldr	r3, .L34
 691 01ca 9954     		strb	r1, [r3, r2]
 318:userinterface.c ****         bcpTxBuffer[index++] = (tempAngularPos & 0x00FF);      
 692              		.loc 1 318 0
 693 01cc FB1D     		adds	r3, r7, #7
 694 01ce 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 19


 695 01d0 FA1D     		adds	r2, r7, #7
 696 01d2 591C     		adds	r1, r3, #1
 697 01d4 1170     		strb	r1, [r2]
 698 01d6 1A00     		movs	r2, r3
 699 01d8 124B     		ldr	r3, .L34+24
 700 01da 1B88     		ldrh	r3, [r3]
 701 01dc D9B2     		uxtb	r1, r3
 702 01de 0B4B     		ldr	r3, .L34
 703 01e0 9954     		strb	r1, [r3, r2]
 319:userinterface.c ****         
 320:userinterface.c ****         /* gearbox output complete rotation count */
 321:userinterface.c **** //        bcpTxBuffer[index++] = ((UI_Data.spinCount & 0xFF00) >> 8);
 322:userinterface.c **** //        bcpTxBuffer[index++] = (UI_Data.spinCount & 0x00FF);    
 323:userinterface.c **** 
 324:userinterface.c ****         /* motor winding current (currently not functional) */
 325:userinterface.c **** //        bcpTxBuffer[index++] = ((Pin_Ibus_ReadDataReg() & 0xFF00) >> 8);
 326:userinterface.c **** //        bcpTxBuffer[index++] = (Pin_Ibus_ReadDataReg() & 0x00FF);
 327:userinterface.c ****         
 328:userinterface.c ****         /* UI_Data.timeBetweenHallSamples */
 329:userinterface.c **** //        bcpTxBuffer[index++] = (uint8)((UI_Data.timeBetweenHallSamples & 0xFF00) >> 8);
 330:userinterface.c **** //        bcpTxBuffer[index++] = (uint8)(UI_Data.timeBetweenHallSamples & 0x00FF); 
 331:userinterface.c ****         
 332:userinterface.c ****         /* test to ensure data is being dynamically read by serial communication on external connec
 333:userinterface.c **** //        bcpTxBuffer[index++] = (uint8)((test & 0xFF00) >> 8);
 334:userinterface.c **** //        bcpTxBuffer[index++] = (uint8)((test & 0x00FF));
 335:userinterface.c **** //        bcpTxBuffer[index++] = (uint8)((test & 0xFF00) >> 8);
 336:userinterface.c **** //        bcpTxBuffer[index++] = (uint8)((test & 0x00FF));
 337:userinterface.c **** //        
 338:userinterface.c **** //        test++;
 339:userinterface.c ****         
 340:userinterface.c ****         /* package tail */
 341:userinterface.c ****         bcpTxBuffer[index++] = 0xAA;
 704              		.loc 1 341 0
 705 01e2 FB1D     		adds	r3, r7, #7
 706 01e4 1B78     		ldrb	r3, [r3]
 707 01e6 FA1D     		adds	r2, r7, #7
 708 01e8 591C     		adds	r1, r3, #1
 709 01ea 1170     		strb	r1, [r2]
 710 01ec 1A00     		movs	r2, r3
 711 01ee 074B     		ldr	r3, .L34
 712 01f0 AA21     		movs	r1, #170
 713 01f2 9954     		strb	r1, [r3, r2]
 342:userinterface.c ****         
 343:userinterface.c ****         UART_BCP_SpiUartPutArray(bcpTxBuffer, index);
 714              		.loc 1 343 0
 715 01f4 FB1D     		adds	r3, r7, #7
 716 01f6 1A78     		ldrb	r2, [r3]
 717 01f8 044B     		ldr	r3, .L34
 718 01fa 1100     		movs	r1, r2
 719 01fc 1800     		movs	r0, r3
 720 01fe FFF7FEFF 		bl	UART_BCP_SpiUartPutArray
 721 0202 00E0     		b	.L27
 722              	.L33:
 265:userinterface.c ****     
 723              		.loc 1 265 0
 724 0204 C046     		nop
 725              	.L27:
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 20


 344:userinterface.c ****     }
 345:userinterface.c **** }
 726              		.loc 1 345 0
 727 0206 BD46     		mov	sp, r7
 728 0208 03B0     		add	sp, sp, #12
 729              		@ sp needed
 730 020a 90BD     		pop	{r4, r7, pc}
 731              	.L35:
 732              		.align	2
 733              	.L34:
 734 020c 04000000 		.word	bcpTxBuffer
 735 0210 00000000 		.word	bcpRxFlag
 736 0214 24000000 		.word	bcpRxBuffer
 737 0218 34000000 		.word	bcpRxBufferIx
 738 021c 00000000 		.word	UI_Data
 739 0220 00000000 		.word	tempOutputSpeedRef
 740 0224 00000000 		.word	tempAngularPos
 741              		.cfi_endproc
 742              	.LFE37:
 743              		.size	BCPPoll, .-BCPPoll
 744              		.section	.text.BCPRxPoll,"ax",%progbits
 745              		.align	2
 746              		.global	BCPRxPoll
 747              		.code	16
 748              		.thumb_func
 749              		.type	BCPRxPoll, %function
 750              	BCPRxPoll:
 751              	.LFB38:
 346:userinterface.c **** 
 347:userinterface.c **** /****************************************************************************************
 348:userinterface.c **** *																			  			*
 349:userinterface.c **** *   Function:    BCPRxPoll								  								*
 350:userinterface.c **** *																			  			*
 351:userinterface.c **** *   Description: Polls receive buffer. Copies and processes data   						*
 352:userinterface.c **** *				 Format:  RX8 [h=55] 'M' mode 'm' submode [t=AA]                        *
 353:userinterface.c **** *                Where mode = 0 (standby), 1 BLAC, 2 DC mmotor, 3 Inductor              *
 354:userinterface.c **** *                submode =1 (open loop AC), 2 (open loop DC), 3 (closed loop DC)        *
 355:userinterface.c **** *                only used for inductor                                                 *
 356:userinterface.c **** *                                                                                       *
 357:userinterface.c **** *                This is from example Rx Tx code                                        *
 358:userinterface.c **** *                                                                                       *
 359:userinterface.c **** *   Parameters:  None																	*
 360:userinterface.c **** *				  							  			                                *
 361:userinterface.c **** *   Returns:     None - but changes global variables									*		
 362:userinterface.c **** *																			  			*		
 363:userinterface.c **** ****************************************************************************************/
 364:userinterface.c **** 
 365:userinterface.c **** void BCPRxPoll()
 366:userinterface.c **** {
 752              		.loc 1 366 0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 8
 755              		@ frame_needed = 1, uses_anonymous_args = 0
 756 0000 80B5     		push	{r7, lr}
 757              		.cfi_def_cfa_offset 8
 758              		.cfi_offset 7, -8
 759              		.cfi_offset 14, -4
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 21


 760 0002 82B0     		sub	sp, sp, #8
 761              		.cfi_def_cfa_offset 16
 762 0004 00AF     		add	r7, sp, #0
 763              		.cfi_def_cfa_register 7
 367:userinterface.c **** uint8 temp;
 368:userinterface.c **** 
 369:userinterface.c ****     if (UART_BCP_SpiUartGetRxBufferSize() > 16) // buffer overflow
 764              		.loc 1 369 0
 765 0006 FFF7FEFF 		bl	UART_BCP_SpiUartGetRxBufferSize
 766 000a 0300     		movs	r3, r0
 767 000c 102B     		cmp	r3, #16
 768 000e 02D9     		bls	.L37
 370:userinterface.c ****     {
 371:userinterface.c **** //        MotorCtrl_stcRunPar.u32ErroType |= COMMS_ERROR; // buffer overflow
 372:userinterface.c ****         UART_BCP_SpiUartClearRxBuffer();
 769              		.loc 1 372 0
 770 0010 FFF7FEFF 		bl	UART_BCP_SpiUartClearRxBuffer
 373:userinterface.c ****         return;
 771              		.loc 1 373 0
 772 0014 49E0     		b	.L36
 773              	.L37:
 374:userinterface.c ****     }
 375:userinterface.c ****     if (bcpRxFlag == 1)  //not processed previous command
 774              		.loc 1 375 0
 775 0016 264B     		ldr	r3, .L44
 776 0018 1B78     		ldrb	r3, [r3]
 777 001a 012B     		cmp	r3, #1
 778 001c 44D0     		beq	.L43
 376:userinterface.c ****     { 
 377:userinterface.c ****         return;
 378:userinterface.c ****     }
 379:userinterface.c ****     while (UART_BCP_SpiUartGetRxBufferSize() > 0 )
 779              		.loc 1 379 0
 780 001e 3EE0     		b	.L40
 781              	.L42:
 380:userinterface.c ****     {
 381:userinterface.c ****         temp = (uint8)UART_BCP_SpiUartReadRxData();
 782              		.loc 1 381 0
 783 0020 FFF7FEFF 		bl	UART_BCP_SpiUartReadRxData
 784 0024 0200     		movs	r2, r0
 785 0026 FB1D     		adds	r3, r7, #7
 786 0028 1A70     		strb	r2, [r3]
 382:userinterface.c ****         if ((temp == 0x55) | (bcpRxBufferIx > 0))
 787              		.loc 1 382 0
 788 002a FB1D     		adds	r3, r7, #7
 789 002c 1B78     		ldrb	r3, [r3]
 790 002e 553B     		subs	r3, r3, #85
 791 0030 5A42     		rsbs	r2, r3, #0
 792 0032 5341     		adcs	r3, r3, r2
 793 0034 DAB2     		uxtb	r2, r3
 794 0036 1F4B     		ldr	r3, .L44+4
 795 0038 1B78     		ldrb	r3, [r3]
 796 003a 591E     		subs	r1, r3, #1
 797 003c 8B41     		sbcs	r3, r3, r1
 798 003e DBB2     		uxtb	r3, r3
 799 0040 1343     		orrs	r3, r2
 800 0042 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 22


 801 0044 002B     		cmp	r3, #0
 802 0046 0CD0     		beq	.L41
 383:userinterface.c ****         {
 384:userinterface.c ****             bcpRxBuffer[bcpRxBufferIx]=temp;
 803              		.loc 1 384 0
 804 0048 1A4B     		ldr	r3, .L44+4
 805 004a 1B78     		ldrb	r3, [r3]
 806 004c 1900     		movs	r1, r3
 807 004e 1A4B     		ldr	r3, .L44+8
 808 0050 FA1D     		adds	r2, r7, #7
 809 0052 1278     		ldrb	r2, [r2]
 810 0054 5A54     		strb	r2, [r3, r1]
 385:userinterface.c ****             bcpRxBufferIx++;
 811              		.loc 1 385 0
 812 0056 174B     		ldr	r3, .L44+4
 813 0058 1B78     		ldrb	r3, [r3]
 814 005a 0133     		adds	r3, r3, #1
 815 005c DAB2     		uxtb	r2, r3
 816 005e 154B     		ldr	r3, .L44+4
 817 0060 1A70     		strb	r2, [r3]
 818              	.L41:
 386:userinterface.c ****         }
 387:userinterface.c ****         if ((temp == 0xaa) |(bcpRxBufferIx > 6))
 819              		.loc 1 387 0
 820 0062 FB1D     		adds	r3, r7, #7
 821 0064 1B78     		ldrb	r3, [r3]
 822 0066 AA3B     		subs	r3, r3, #170
 823 0068 5A42     		rsbs	r2, r3, #0
 824 006a 5341     		adcs	r3, r3, r2
 825 006c DAB2     		uxtb	r2, r3
 826 006e 114B     		ldr	r3, .L44+4
 827 0070 1B78     		ldrb	r3, [r3]
 828 0072 0621     		movs	r1, #6
 829 0074 9942     		cmp	r1, r3
 830 0076 9B41     		sbcs	r3, r3, r3
 831 0078 5B42     		rsbs	r3, r3, #0
 832 007a DBB2     		uxtb	r3, r3
 833 007c 1343     		orrs	r3, r2
 834 007e DBB2     		uxtb	r3, r3
 835 0080 002B     		cmp	r3, #0
 836 0082 0CD0     		beq	.L40
 388:userinterface.c ****         {
 389:userinterface.c ****             bcpRxBuffer[bcpRxBufferIx]=temp;
 837              		.loc 1 389 0
 838 0084 0B4B     		ldr	r3, .L44+4
 839 0086 1B78     		ldrb	r3, [r3]
 840 0088 1900     		movs	r1, r3
 841 008a 0B4B     		ldr	r3, .L44+8
 842 008c FA1D     		adds	r2, r7, #7
 843 008e 1278     		ldrb	r2, [r2]
 844 0090 5A54     		strb	r2, [r3, r1]
 390:userinterface.c ****             bcpRxFlag=1;
 845              		.loc 1 390 0
 846 0092 074B     		ldr	r3, .L44
 847 0094 0122     		movs	r2, #1
 848 0096 1A70     		strb	r2, [r3]
 391:userinterface.c ****             UART_BCP_SpiUartClearRxBuffer();
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 23


 849              		.loc 1 391 0
 850 0098 FFF7FEFF 		bl	UART_BCP_SpiUartClearRxBuffer
 392:userinterface.c ****             break;
 851              		.loc 1 392 0
 852 009c 05E0     		b	.L36
 853              	.L40:
 379:userinterface.c ****     {
 854              		.loc 1 379 0
 855 009e FFF7FEFF 		bl	UART_BCP_SpiUartGetRxBufferSize
 856 00a2 031E     		subs	r3, r0, #0
 857 00a4 BCD1     		bne	.L42
 858 00a6 00E0     		b	.L36
 859              	.L43:
 377:userinterface.c ****     }
 860              		.loc 1 377 0
 861 00a8 C046     		nop
 862              	.L36:
 393:userinterface.c ****         }
 394:userinterface.c ****     }
 395:userinterface.c ****     
 396:userinterface.c **** }
 863              		.loc 1 396 0
 864 00aa BD46     		mov	sp, r7
 865 00ac 02B0     		add	sp, sp, #8
 866              		@ sp needed
 867 00ae 80BD     		pop	{r7, pc}
 868              	.L45:
 869              		.align	2
 870              	.L44:
 871 00b0 00000000 		.word	bcpRxFlag
 872 00b4 34000000 		.word	bcpRxBufferIx
 873 00b8 24000000 		.word	bcpRxBuffer
 874              		.cfi_endproc
 875              	.LFE38:
 876              		.size	BCPRxPoll, .-BCPRxPoll
 877              		.text
 878              	.Letext0:
 879              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 880              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 881              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 882              		.file 5 "motor.h"
 883              		.file 6 "userinterface.h"
 884              		.section	.debug_info,"",%progbits
 885              	.Ldebug_info0:
 886 0000 1F040000 		.4byte	0x41f
 887 0004 0400     		.2byte	0x4
 888 0006 00000000 		.4byte	.Ldebug_abbrev0
 889 000a 04       		.byte	0x4
 890 000b 01       		.uleb128 0x1
 891 000c 7E010000 		.4byte	.LASF66
 892 0010 0C       		.byte	0xc
 893 0011 87030000 		.4byte	.LASF67
 894 0015 EA020000 		.4byte	.LASF68
 895 0019 00000000 		.4byte	.Ldebug_ranges0+0
 896 001d 00000000 		.4byte	0
 897 0021 00000000 		.4byte	.Ldebug_line0
 898 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 24


 899 0026 01       		.byte	0x1
 900 0027 06       		.byte	0x6
 901 0028 47020000 		.4byte	.LASF0
 902 002c 03       		.uleb128 0x3
 903 002d 74010000 		.4byte	.LASF9
 904 0031 02       		.byte	0x2
 905 0032 1D       		.byte	0x1d
 906 0033 37000000 		.4byte	0x37
 907 0037 02       		.uleb128 0x2
 908 0038 01       		.byte	0x1
 909 0039 08       		.byte	0x8
 910 003a 2D020000 		.4byte	.LASF1
 911 003e 02       		.uleb128 0x2
 912 003f 02       		.byte	0x2
 913 0040 05       		.byte	0x5
 914 0041 8B000000 		.4byte	.LASF2
 915 0045 02       		.uleb128 0x2
 916 0046 02       		.byte	0x2
 917 0047 07       		.byte	0x7
 918 0048 D7020000 		.4byte	.LASF3
 919 004c 02       		.uleb128 0x2
 920 004d 04       		.byte	0x4
 921 004e 05       		.byte	0x5
 922 004f 55010000 		.4byte	.LASF4
 923 0053 02       		.uleb128 0x2
 924 0054 04       		.byte	0x4
 925 0055 07       		.byte	0x7
 926 0056 40030000 		.4byte	.LASF5
 927 005a 02       		.uleb128 0x2
 928 005b 08       		.byte	0x8
 929 005c 05       		.byte	0x5
 930 005d 47010000 		.4byte	.LASF6
 931 0061 02       		.uleb128 0x2
 932 0062 08       		.byte	0x8
 933 0063 07       		.byte	0x7
 934 0064 53020000 		.4byte	.LASF7
 935 0068 04       		.uleb128 0x4
 936 0069 04       		.byte	0x4
 937 006a 05       		.byte	0x5
 938 006b 696E7400 		.ascii	"int\000"
 939 006f 02       		.uleb128 0x2
 940 0070 04       		.byte	0x4
 941 0071 07       		.byte	0x7
 942 0072 74020000 		.4byte	.LASF8
 943 0076 03       		.uleb128 0x3
 944 0077 59030000 		.4byte	.LASF10
 945 007b 03       		.byte	0x3
 946 007c 18       		.byte	0x18
 947 007d 2C000000 		.4byte	0x2c
 948 0081 05       		.uleb128 0x5
 949 0082 BF000000 		.4byte	.LASF11
 950 0086 04       		.byte	0x4
 951 0087 E401     		.2byte	0x1e4
 952 0089 37000000 		.4byte	0x37
 953 008d 05       		.uleb128 0x5
 954 008e A4000000 		.4byte	.LASF12
 955 0092 04       		.byte	0x4
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 25


 956 0093 E501     		.2byte	0x1e5
 957 0095 45000000 		.4byte	0x45
 958 0099 05       		.uleb128 0x5
 959 009a 39030000 		.4byte	.LASF13
 960 009e 04       		.byte	0x4
 961 009f E601     		.2byte	0x1e6
 962 00a1 53000000 		.4byte	0x53
 963 00a5 05       		.uleb128 0x5
 964 00a6 B9000000 		.4byte	.LASF14
 965 00aa 04       		.byte	0x4
 966 00ab E801     		.2byte	0x1e8
 967 00ad 3E000000 		.4byte	0x3e
 968 00b1 05       		.uleb128 0x5
 969 00b2 26000000 		.4byte	.LASF15
 970 00b6 04       		.byte	0x4
 971 00b7 EA01     		.2byte	0x1ea
 972 00b9 BD000000 		.4byte	0xbd
 973 00bd 02       		.uleb128 0x2
 974 00be 04       		.byte	0x4
 975 00bf 04       		.byte	0x4
 976 00c0 18010000 		.4byte	.LASF16
 977 00c4 05       		.uleb128 0x5
 978 00c5 61030000 		.4byte	.LASF17
 979 00c9 04       		.byte	0x4
 980 00ca EE01     		.2byte	0x1ee
 981 00cc D0000000 		.4byte	0xd0
 982 00d0 02       		.uleb128 0x2
 983 00d1 08       		.byte	0x8
 984 00d2 04       		.byte	0x4
 985 00d3 52030000 		.4byte	.LASF18
 986 00d7 02       		.uleb128 0x2
 987 00d8 01       		.byte	0x1
 988 00d9 08       		.byte	0x8
 989 00da AC020000 		.4byte	.LASF19
 990 00de 02       		.uleb128 0x2
 991 00df 08       		.byte	0x8
 992 00e0 04       		.byte	0x4
 993 00e1 18020000 		.4byte	.LASF20
 994 00e5 02       		.uleb128 0x2
 995 00e6 04       		.byte	0x4
 996 00e7 07       		.byte	0x7
 997 00e8 5D000000 		.4byte	.LASF21
 998 00ec 06       		.uleb128 0x6
 999 00ed 04       		.byte	0x4
 1000 00ee 81000000 		.4byte	0x81
 1001 00f2 07       		.uleb128 0x7
 1002 00f3 01       		.byte	0x1
 1003 00f4 05       		.byte	0x5
 1004 00f5 49       		.byte	0x49
 1005 00f6 07010000 		.4byte	0x107
 1006 00fa 08       		.uleb128 0x8
 1007 00fb 72756E00 		.ascii	"run\000"
 1008 00ff 05       		.byte	0x5
 1009 0100 4B       		.byte	0x4b
 1010 0101 81000000 		.4byte	0x81
 1011 0105 00       		.byte	0
 1012 0106 00       		.byte	0
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 26


 1013 0107 03       		.uleb128 0x3
 1014 0108 69030000 		.4byte	.LASF22
 1015 010c 05       		.byte	0x5
 1016 010d 4C       		.byte	0x4c
 1017 010e F2000000 		.4byte	0xf2
 1018 0112 07       		.uleb128 0x7
 1019 0113 30       		.byte	0x30
 1020 0114 05       		.byte	0x5
 1021 0115 4F       		.byte	0x4f
 1022 0116 FD010000 		.4byte	0x1fd
 1023 011a 09       		.uleb128 0x9
 1024 011b 34030000 		.4byte	.LASF23
 1025 011f 05       		.byte	0x5
 1026 0120 51       		.byte	0x51
 1027 0121 A5000000 		.4byte	0xa5
 1028 0125 00       		.byte	0
 1029 0126 09       		.uleb128 0x9
 1030 0127 C5000000 		.4byte	.LASF24
 1031 012b 05       		.byte	0x5
 1032 012c 52       		.byte	0x52
 1033 012d A5000000 		.4byte	0xa5
 1034 0131 02       		.byte	0x2
 1035 0132 08       		.uleb128 0x8
 1036 0133 44697200 		.ascii	"Dir\000"
 1037 0137 05       		.byte	0x5
 1038 0138 54       		.byte	0x54
 1039 0139 81000000 		.4byte	0x81
 1040 013d 04       		.byte	0x4
 1041 013e 09       		.uleb128 0x9
 1042 013f 1E010000 		.4byte	.LASF25
 1043 0143 05       		.byte	0x5
 1044 0144 56       		.byte	0x56
 1045 0145 8D000000 		.4byte	0x8d
 1046 0149 06       		.byte	0x6
 1047 014a 09       		.uleb128 0x9
 1048 014b 97030000 		.4byte	.LASF26
 1049 014f 05       		.byte	0x5
 1050 0150 57       		.byte	0x57
 1051 0151 8D000000 		.4byte	0x8d
 1052 0155 08       		.byte	0x8
 1053 0156 09       		.uleb128 0x9
 1054 0157 0C020000 		.4byte	.LASF27
 1055 015b 05       		.byte	0x5
 1056 015c 58       		.byte	0x58
 1057 015d 8D000000 		.4byte	0x8d
 1058 0161 0A       		.byte	0xa
 1059 0162 08       		.uleb128 0x8
 1060 0163 6B7000   		.ascii	"kp\000"
 1061 0166 05       		.byte	0x5
 1062 0167 5A       		.byte	0x5a
 1063 0168 8D000000 		.4byte	0x8d
 1064 016c 0C       		.byte	0xc
 1065 016d 08       		.uleb128 0x8
 1066 016e 6B6900   		.ascii	"ki\000"
 1067 0171 05       		.byte	0x5
 1068 0172 5B       		.byte	0x5b
 1069 0173 8D000000 		.4byte	0x8d
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 27


 1070 0177 0E       		.byte	0xe
 1071 0178 09       		.uleb128 0x9
 1072 0179 74000000 		.4byte	.LASF28
 1073 017d 05       		.byte	0x5
 1074 017e 5D       		.byte	0x5d
 1075 017f 8D000000 		.4byte	0x8d
 1076 0183 10       		.byte	0x10
 1077 0184 09       		.uleb128 0x9
 1078 0185 3B020000 		.4byte	.LASF29
 1079 0189 05       		.byte	0x5
 1080 018a 5E       		.byte	0x5e
 1081 018b 8D000000 		.4byte	0x8d
 1082 018f 12       		.byte	0x12
 1083 0190 09       		.uleb128 0x9
 1084 0191 6A020000 		.4byte	.LASF30
 1085 0195 05       		.byte	0x5
 1086 0196 5F       		.byte	0x5f
 1087 0197 81000000 		.4byte	0x81
 1088 019b 14       		.byte	0x14
 1089 019c 09       		.uleb128 0x9
 1090 019d 03010000 		.4byte	.LASF31
 1091 01a1 05       		.byte	0x5
 1092 01a2 60       		.byte	0x60
 1093 01a3 81000000 		.4byte	0x81
 1094 01a7 15       		.byte	0x15
 1095 01a8 09       		.uleb128 0x9
 1096 01a9 70030000 		.4byte	.LASF32
 1097 01ad 05       		.byte	0x5
 1098 01ae 62       		.byte	0x62
 1099 01af 8D000000 		.4byte	0x8d
 1100 01b3 16       		.byte	0x16
 1101 01b4 09       		.uleb128 0x9
 1102 01b5 CC020000 		.4byte	.LASF33
 1103 01b9 05       		.byte	0x5
 1104 01ba 63       		.byte	0x63
 1105 01bb C4000000 		.4byte	0xc4
 1106 01bf 18       		.byte	0x18
 1107 01c0 09       		.uleb128 0x9
 1108 01c1 00000000 		.4byte	.LASF34
 1109 01c5 05       		.byte	0x5
 1110 01c6 64       		.byte	0x64
 1111 01c7 A5000000 		.4byte	0xa5
 1112 01cb 20       		.byte	0x20
 1113 01cc 09       		.uleb128 0x9
 1114 01cd 0A000000 		.4byte	.LASF35
 1115 01d1 05       		.byte	0x5
 1116 01d2 65       		.byte	0x65
 1117 01d3 81000000 		.4byte	0x81
 1118 01d7 22       		.byte	0x22
 1119 01d8 09       		.uleb128 0x9
 1120 01d9 B2030000 		.4byte	.LASF36
 1121 01dd 05       		.byte	0x5
 1122 01de 66       		.byte	0x66
 1123 01df 81000000 		.4byte	0x81
 1124 01e3 23       		.byte	0x23
 1125 01e4 09       		.uleb128 0x9
 1126 01e5 CB000000 		.4byte	.LASF37
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 28


 1127 01e9 05       		.byte	0x5
 1128 01ea 67       		.byte	0x67
 1129 01eb B1000000 		.4byte	0xb1
 1130 01ef 24       		.byte	0x24
 1131 01f0 09       		.uleb128 0x9
 1132 01f1 D7000000 		.4byte	.LASF38
 1133 01f5 05       		.byte	0x5
 1134 01f6 69       		.byte	0x69
 1135 01f7 8D000000 		.4byte	0x8d
 1136 01fb 28       		.byte	0x28
 1137 01fc 00       		.byte	0
 1138 01fd 03       		.uleb128 0x3
 1139 01fe AB000000 		.4byte	.LASF39
 1140 0202 05       		.byte	0x5
 1141 0203 6A       		.byte	0x6a
 1142 0204 12010000 		.4byte	0x112
 1143 0208 0A       		.uleb128 0xa
 1144 0209 28010000 		.4byte	.LASF69
 1145 020d 03       		.byte	0x3
 1146 020e 01       		.byte	0x1
 1147 020f 52       		.byte	0x52
 1148 0210 39020000 		.4byte	0x239
 1149 0214 09       		.uleb128 0x9
 1150 0215 92020000 		.4byte	.LASF40
 1151 0219 01       		.byte	0x1
 1152 021a 54       		.byte	0x54
 1153 021b 81000000 		.4byte	0x81
 1154 021f 00       		.byte	0
 1155 0220 09       		.uleb128 0x9
 1156 0221 DE030000 		.4byte	.LASF41
 1157 0225 01       		.byte	0x1
 1158 0226 55       		.byte	0x55
 1159 0227 81000000 		.4byte	0x81
 1160 022b 01       		.byte	0x1
 1161 022c 09       		.uleb128 0x9
 1162 022d 1A030000 		.4byte	.LASF42
 1163 0231 01       		.byte	0x1
 1164 0232 56       		.byte	0x56
 1165 0233 81000000 		.4byte	0x81
 1166 0237 02       		.byte	0x2
 1167 0238 00       		.byte	0
 1168 0239 03       		.uleb128 0x3
 1169 023a 9F020000 		.4byte	.LASF43
 1170 023e 01       		.byte	0x1
 1171 023f 57       		.byte	0x57
 1172 0240 08020000 		.4byte	0x208
 1173 0244 0B       		.uleb128 0xb
 1174 0245 80000000 		.4byte	.LASF44
 1175 0249 01       		.byte	0x1
 1176 024a 73       		.byte	0x73
 1177 024b 00000000 		.4byte	.LFB32
 1178 024f 6C000000 		.4byte	.LFE32-.LFB32
 1179 0253 01       		.uleb128 0x1
 1180 0254 9C       		.byte	0x9c
 1181 0255 66020000 		.4byte	0x266
 1182 0259 0C       		.uleb128 0xc
 1183 025a 6900     		.ascii	"i\000"
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 29


 1184 025c 01       		.byte	0x1
 1185 025d 75       		.byte	0x75
 1186 025e 81000000 		.4byte	0x81
 1187 0262 02       		.uleb128 0x2
 1188 0263 91       		.byte	0x91
 1189 0264 77       		.sleb128 -9
 1190 0265 00       		.byte	0
 1191 0266 0B       		.uleb128 0xb
 1192 0267 A0030000 		.4byte	.LASF45
 1193 026b 01       		.byte	0x1
 1194 026c 8C       		.byte	0x8c
 1195 026d 00000000 		.4byte	.LFB33
 1196 0271 BC000000 		.4byte	.LFE33-.LFB33
 1197 0275 01       		.uleb128 0x1
 1198 0276 9C       		.byte	0x9c
 1199 0277 B4020000 		.4byte	0x2b4
 1200 027b 0D       		.uleb128 0xd
 1201 027c 2A030000 		.4byte	.LASF46
 1202 0280 01       		.byte	0x1
 1203 0281 8C       		.byte	0x8c
 1204 0282 81000000 		.4byte	0x81
 1205 0286 02       		.uleb128 0x2
 1206 0287 91       		.byte	0x91
 1207 0288 6F       		.sleb128 -17
 1208 0289 0D       		.uleb128 0xd
 1209 028a C0020000 		.4byte	.LASF47
 1210 028e 01       		.byte	0x1
 1211 028f 8C       		.byte	0x8c
 1212 0290 B4020000 		.4byte	0x2b4
 1213 0294 02       		.uleb128 0x2
 1214 0295 91       		.byte	0x91
 1215 0296 68       		.sleb128 -24
 1216 0297 0D       		.uleb128 0xd
 1217 0298 0B010000 		.4byte	.LASF48
 1218 029c 01       		.byte	0x1
 1219 029d 8C       		.byte	0x8c
 1220 029e EC000000 		.4byte	0xec
 1221 02a2 02       		.uleb128 0x2
 1222 02a3 91       		.byte	0x91
 1223 02a4 64       		.sleb128 -28
 1224 02a5 0E       		.uleb128 0xe
 1225 02a6 3D000000 		.4byte	.LASF49
 1226 02aa 01       		.byte	0x1
 1227 02ab 8E       		.byte	0x8e
 1228 02ac 81000000 		.4byte	0x81
 1229 02b0 02       		.uleb128 0x2
 1230 02b1 91       		.byte	0x91
 1231 02b2 77       		.sleb128 -9
 1232 02b3 00       		.byte	0
 1233 02b4 06       		.uleb128 0x6
 1234 02b5 04       		.byte	0x4
 1235 02b6 39020000 		.4byte	0x239
 1236 02ba 0F       		.uleb128 0xf
 1237 02bb 66000000 		.4byte	.LASF50
 1238 02bf 01       		.byte	0x1
 1239 02c0 C8       		.byte	0xc8
 1240 02c1 00000000 		.4byte	.LFB34
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 30


 1241 02c5 50000000 		.4byte	.LFE34-.LFB34
 1242 02c9 01       		.uleb128 0x1
 1243 02ca 9C       		.byte	0x9c
 1244 02cb 10       		.uleb128 0x10
 1245 02cc 36010000 		.4byte	.LASF51
 1246 02d0 01       		.byte	0x1
 1247 02d1 E2       		.byte	0xe2
 1248 02d2 00000000 		.4byte	.LFB35
 1249 02d6 20000000 		.4byte	.LFE35-.LFB35
 1250 02da 01       		.uleb128 0x1
 1251 02db 9C       		.byte	0x9c
 1252 02dc 10       		.uleb128 0x10
 1253 02dd CC030000 		.4byte	.LASF52
 1254 02e1 01       		.byte	0x1
 1255 02e2 F3       		.byte	0xf3
 1256 02e3 00000000 		.4byte	.LFB36
 1257 02e7 14000000 		.4byte	.LFE36-.LFB36
 1258 02eb 01       		.uleb128 0x1
 1259 02ec 9C       		.byte	0x9c
 1260 02ed 11       		.uleb128 0x11
 1261 02ee 8A020000 		.4byte	.LASF53
 1262 02f2 01       		.byte	0x1
 1263 02f3 0401     		.2byte	0x104
 1264 02f5 00000000 		.4byte	.LFB37
 1265 02f9 28020000 		.4byte	.LFE37-.LFB37
 1266 02fd 01       		.uleb128 0x1
 1267 02fe 9C       		.byte	0x9c
 1268 02ff 13030000 		.4byte	0x313
 1269 0303 12       		.uleb128 0x12
 1270 0304 B3000000 		.4byte	.LASF54
 1271 0308 01       		.byte	0x1
 1272 0309 0601     		.2byte	0x106
 1273 030b 81000000 		.4byte	0x81
 1274 030f 02       		.uleb128 0x2
 1275 0310 91       		.byte	0x91
 1276 0311 6F       		.sleb128 -17
 1277 0312 00       		.byte	0
 1278 0313 13       		.uleb128 0x13
 1279 0314 2E000000 		.4byte	.LASF70
 1280 0318 01       		.byte	0x1
 1281 0319 6D01     		.2byte	0x16d
 1282 031b 00000000 		.4byte	.LFB38
 1283 031f BC000000 		.4byte	.LFE38-.LFB38
 1284 0323 01       		.uleb128 0x1
 1285 0324 9C       		.byte	0x9c
 1286 0325 39030000 		.4byte	0x339
 1287 0329 12       		.uleb128 0x12
 1288 032a 38000000 		.4byte	.LASF55
 1289 032e 01       		.byte	0x1
 1290 032f 6F01     		.2byte	0x16f
 1291 0331 81000000 		.4byte	0x81
 1292 0335 02       		.uleb128 0x2
 1293 0336 91       		.byte	0x91
 1294 0337 77       		.sleb128 -9
 1295 0338 00       		.byte	0
 1296 0339 14       		.uleb128 0x14
 1297 033a 39020000 		.4byte	0x239
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 31


 1298 033e 49030000 		.4byte	0x349
 1299 0342 15       		.uleb128 0x15
 1300 0343 E5000000 		.4byte	0xe5
 1301 0347 00       		.byte	0
 1302 0348 00       		.byte	0
 1303 0349 0E       		.uleb128 0xe
 1304 034a 81020000 		.4byte	.LASF56
 1305 034e 01       		.byte	0x1
 1306 034f 59       		.byte	0x59
 1307 0350 39030000 		.4byte	0x339
 1308 0354 05       		.uleb128 0x5
 1309 0355 03       		.byte	0x3
 1310 0356 00000000 		.4byte	btnArray
 1311 035a 14       		.uleb128 0x14
 1312 035b 81000000 		.4byte	0x81
 1313 035f 6A030000 		.4byte	0x36a
 1314 0363 15       		.uleb128 0x15
 1315 0364 E5000000 		.4byte	0xe5
 1316 0368 1F       		.byte	0x1f
 1317 0369 00       		.byte	0
 1318 036a 0E       		.uleb128 0xe
 1319 036b 1A000000 		.4byte	.LASF57
 1320 036f 01       		.byte	0x1
 1321 0370 5B       		.byte	0x5b
 1322 0371 5A030000 		.4byte	0x35a
 1323 0375 05       		.uleb128 0x5
 1324 0376 03       		.byte	0x3
 1325 0377 04000000 		.4byte	bcpTxBuffer
 1326 037b 14       		.uleb128 0x14
 1327 037c 81000000 		.4byte	0x81
 1328 0380 8B030000 		.4byte	0x38b
 1329 0384 15       		.uleb128 0x15
 1330 0385 E5000000 		.4byte	0xe5
 1331 0389 0F       		.byte	0xf
 1332 038a 00       		.byte	0
 1333 038b 0E       		.uleb128 0xe
 1334 038c 5E010000 		.4byte	.LASF58
 1335 0390 01       		.byte	0x1
 1336 0391 5E       		.byte	0x5e
 1337 0392 7B030000 		.4byte	0x37b
 1338 0396 05       		.uleb128 0x5
 1339 0397 03       		.byte	0x3
 1340 0398 24000000 		.4byte	bcpRxBuffer
 1341 039c 0E       		.uleb128 0xe
 1342 039d F5000000 		.4byte	.LASF59
 1343 03a1 01       		.byte	0x1
 1344 03a2 5F       		.byte	0x5f
 1345 03a3 81000000 		.4byte	0x81
 1346 03a7 05       		.uleb128 0x5
 1347 03a8 03       		.byte	0x3
 1348 03a9 34000000 		.4byte	bcpRxBufferIx
 1349 03ad 16       		.uleb128 0x16
 1350 03ae 95000000 		.4byte	.LASF60
 1351 03b2 05       		.byte	0x5
 1352 03b3 79       		.byte	0x79
 1353 03b4 07010000 		.4byte	0x107
 1354 03b8 16       		.uleb128 0x16
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 32


 1355 03b9 9C000000 		.4byte	.LASF61
 1356 03bd 05       		.byte	0x5
 1357 03be 7A       		.byte	0x7a
 1358 03bf FD010000 		.4byte	0x1fd
 1359 03c3 16       		.uleb128 0x16
 1360 03c4 24020000 		.4byte	.LASF62
 1361 03c8 06       		.byte	0x6
 1362 03c9 45       		.byte	0x45
 1363 03ca 81000000 		.4byte	0x81
 1364 03ce 14       		.uleb128 0x14
 1365 03cf 81000000 		.4byte	0x81
 1366 03d3 DE030000 		.4byte	0x3de
 1367 03d7 15       		.uleb128 0x15
 1368 03d8 E5000000 		.4byte	0xe5
 1369 03dc 00       		.byte	0
 1370 03dd 00       		.byte	0
 1371 03de 17       		.uleb128 0x17
 1372 03df 2A030000 		.4byte	.LASF46
 1373 03e3 01       		.byte	0x1
 1374 03e4 37       		.byte	0x37
 1375 03e5 CE030000 		.4byte	0x3ce
 1376 03e9 05       		.uleb128 0x5
 1377 03ea 03       		.byte	0x3
 1378 03eb 00000000 		.4byte	btnStatus
 1379 03ef 17       		.uleb128 0x17
 1380 03f0 6A010000 		.4byte	.LASF63
 1381 03f4 01       		.byte	0x1
 1382 03f5 60       		.byte	0x60
 1383 03f6 76000000 		.4byte	0x76
 1384 03fa 05       		.uleb128 0x5
 1385 03fb 03       		.byte	0x3
 1386 03fc 00000000 		.4byte	bcpRxFlag
 1387 0400 17       		.uleb128 0x17
 1388 0401 4A000000 		.4byte	.LASF64
 1389 0405 01       		.byte	0x1
 1390 0406 63       		.byte	0x63
 1391 0407 99000000 		.4byte	0x99
 1392 040b 05       		.uleb128 0x5
 1393 040c 03       		.byte	0x3
 1394 040d 00000000 		.4byte	tempOutputSpeedRef
 1395 0411 17       		.uleb128 0x17
 1396 0412 B1020000 		.4byte	.LASF65
 1397 0416 01       		.byte	0x1
 1398 0417 64       		.byte	0x64
 1399 0418 8D000000 		.4byte	0x8d
 1400 041c 05       		.uleb128 0x5
 1401 041d 03       		.byte	0x3
 1402 041e 00000000 		.4byte	tempAngularPos
 1403 0422 00       		.byte	0
 1404              		.section	.debug_abbrev,"",%progbits
 1405              	.Ldebug_abbrev0:
 1406 0000 01       		.uleb128 0x1
 1407 0001 11       		.uleb128 0x11
 1408 0002 01       		.byte	0x1
 1409 0003 25       		.uleb128 0x25
 1410 0004 0E       		.uleb128 0xe
 1411 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 33


 1412 0006 0B       		.uleb128 0xb
 1413 0007 03       		.uleb128 0x3
 1414 0008 0E       		.uleb128 0xe
 1415 0009 1B       		.uleb128 0x1b
 1416 000a 0E       		.uleb128 0xe
 1417 000b 55       		.uleb128 0x55
 1418 000c 17       		.uleb128 0x17
 1419 000d 11       		.uleb128 0x11
 1420 000e 01       		.uleb128 0x1
 1421 000f 10       		.uleb128 0x10
 1422 0010 17       		.uleb128 0x17
 1423 0011 00       		.byte	0
 1424 0012 00       		.byte	0
 1425 0013 02       		.uleb128 0x2
 1426 0014 24       		.uleb128 0x24
 1427 0015 00       		.byte	0
 1428 0016 0B       		.uleb128 0xb
 1429 0017 0B       		.uleb128 0xb
 1430 0018 3E       		.uleb128 0x3e
 1431 0019 0B       		.uleb128 0xb
 1432 001a 03       		.uleb128 0x3
 1433 001b 0E       		.uleb128 0xe
 1434 001c 00       		.byte	0
 1435 001d 00       		.byte	0
 1436 001e 03       		.uleb128 0x3
 1437 001f 16       		.uleb128 0x16
 1438 0020 00       		.byte	0
 1439 0021 03       		.uleb128 0x3
 1440 0022 0E       		.uleb128 0xe
 1441 0023 3A       		.uleb128 0x3a
 1442 0024 0B       		.uleb128 0xb
 1443 0025 3B       		.uleb128 0x3b
 1444 0026 0B       		.uleb128 0xb
 1445 0027 49       		.uleb128 0x49
 1446 0028 13       		.uleb128 0x13
 1447 0029 00       		.byte	0
 1448 002a 00       		.byte	0
 1449 002b 04       		.uleb128 0x4
 1450 002c 24       		.uleb128 0x24
 1451 002d 00       		.byte	0
 1452 002e 0B       		.uleb128 0xb
 1453 002f 0B       		.uleb128 0xb
 1454 0030 3E       		.uleb128 0x3e
 1455 0031 0B       		.uleb128 0xb
 1456 0032 03       		.uleb128 0x3
 1457 0033 08       		.uleb128 0x8
 1458 0034 00       		.byte	0
 1459 0035 00       		.byte	0
 1460 0036 05       		.uleb128 0x5
 1461 0037 16       		.uleb128 0x16
 1462 0038 00       		.byte	0
 1463 0039 03       		.uleb128 0x3
 1464 003a 0E       		.uleb128 0xe
 1465 003b 3A       		.uleb128 0x3a
 1466 003c 0B       		.uleb128 0xb
 1467 003d 3B       		.uleb128 0x3b
 1468 003e 05       		.uleb128 0x5
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 34


 1469 003f 49       		.uleb128 0x49
 1470 0040 13       		.uleb128 0x13
 1471 0041 00       		.byte	0
 1472 0042 00       		.byte	0
 1473 0043 06       		.uleb128 0x6
 1474 0044 0F       		.uleb128 0xf
 1475 0045 00       		.byte	0
 1476 0046 0B       		.uleb128 0xb
 1477 0047 0B       		.uleb128 0xb
 1478 0048 49       		.uleb128 0x49
 1479 0049 13       		.uleb128 0x13
 1480 004a 00       		.byte	0
 1481 004b 00       		.byte	0
 1482 004c 07       		.uleb128 0x7
 1483 004d 13       		.uleb128 0x13
 1484 004e 01       		.byte	0x1
 1485 004f 0B       		.uleb128 0xb
 1486 0050 0B       		.uleb128 0xb
 1487 0051 3A       		.uleb128 0x3a
 1488 0052 0B       		.uleb128 0xb
 1489 0053 3B       		.uleb128 0x3b
 1490 0054 0B       		.uleb128 0xb
 1491 0055 01       		.uleb128 0x1
 1492 0056 13       		.uleb128 0x13
 1493 0057 00       		.byte	0
 1494 0058 00       		.byte	0
 1495 0059 08       		.uleb128 0x8
 1496 005a 0D       		.uleb128 0xd
 1497 005b 00       		.byte	0
 1498 005c 03       		.uleb128 0x3
 1499 005d 08       		.uleb128 0x8
 1500 005e 3A       		.uleb128 0x3a
 1501 005f 0B       		.uleb128 0xb
 1502 0060 3B       		.uleb128 0x3b
 1503 0061 0B       		.uleb128 0xb
 1504 0062 49       		.uleb128 0x49
 1505 0063 13       		.uleb128 0x13
 1506 0064 38       		.uleb128 0x38
 1507 0065 0B       		.uleb128 0xb
 1508 0066 00       		.byte	0
 1509 0067 00       		.byte	0
 1510 0068 09       		.uleb128 0x9
 1511 0069 0D       		.uleb128 0xd
 1512 006a 00       		.byte	0
 1513 006b 03       		.uleb128 0x3
 1514 006c 0E       		.uleb128 0xe
 1515 006d 3A       		.uleb128 0x3a
 1516 006e 0B       		.uleb128 0xb
 1517 006f 3B       		.uleb128 0x3b
 1518 0070 0B       		.uleb128 0xb
 1519 0071 49       		.uleb128 0x49
 1520 0072 13       		.uleb128 0x13
 1521 0073 38       		.uleb128 0x38
 1522 0074 0B       		.uleb128 0xb
 1523 0075 00       		.byte	0
 1524 0076 00       		.byte	0
 1525 0077 0A       		.uleb128 0xa
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 35


 1526 0078 13       		.uleb128 0x13
 1527 0079 01       		.byte	0x1
 1528 007a 03       		.uleb128 0x3
 1529 007b 0E       		.uleb128 0xe
 1530 007c 0B       		.uleb128 0xb
 1531 007d 0B       		.uleb128 0xb
 1532 007e 3A       		.uleb128 0x3a
 1533 007f 0B       		.uleb128 0xb
 1534 0080 3B       		.uleb128 0x3b
 1535 0081 0B       		.uleb128 0xb
 1536 0082 01       		.uleb128 0x1
 1537 0083 13       		.uleb128 0x13
 1538 0084 00       		.byte	0
 1539 0085 00       		.byte	0
 1540 0086 0B       		.uleb128 0xb
 1541 0087 2E       		.uleb128 0x2e
 1542 0088 01       		.byte	0x1
 1543 0089 3F       		.uleb128 0x3f
 1544 008a 19       		.uleb128 0x19
 1545 008b 03       		.uleb128 0x3
 1546 008c 0E       		.uleb128 0xe
 1547 008d 3A       		.uleb128 0x3a
 1548 008e 0B       		.uleb128 0xb
 1549 008f 3B       		.uleb128 0x3b
 1550 0090 0B       		.uleb128 0xb
 1551 0091 27       		.uleb128 0x27
 1552 0092 19       		.uleb128 0x19
 1553 0093 11       		.uleb128 0x11
 1554 0094 01       		.uleb128 0x1
 1555 0095 12       		.uleb128 0x12
 1556 0096 06       		.uleb128 0x6
 1557 0097 40       		.uleb128 0x40
 1558 0098 18       		.uleb128 0x18
 1559 0099 9742     		.uleb128 0x2117
 1560 009b 19       		.uleb128 0x19
 1561 009c 01       		.uleb128 0x1
 1562 009d 13       		.uleb128 0x13
 1563 009e 00       		.byte	0
 1564 009f 00       		.byte	0
 1565 00a0 0C       		.uleb128 0xc
 1566 00a1 34       		.uleb128 0x34
 1567 00a2 00       		.byte	0
 1568 00a3 03       		.uleb128 0x3
 1569 00a4 08       		.uleb128 0x8
 1570 00a5 3A       		.uleb128 0x3a
 1571 00a6 0B       		.uleb128 0xb
 1572 00a7 3B       		.uleb128 0x3b
 1573 00a8 0B       		.uleb128 0xb
 1574 00a9 49       		.uleb128 0x49
 1575 00aa 13       		.uleb128 0x13
 1576 00ab 02       		.uleb128 0x2
 1577 00ac 18       		.uleb128 0x18
 1578 00ad 00       		.byte	0
 1579 00ae 00       		.byte	0
 1580 00af 0D       		.uleb128 0xd
 1581 00b0 05       		.uleb128 0x5
 1582 00b1 00       		.byte	0
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 36


 1583 00b2 03       		.uleb128 0x3
 1584 00b3 0E       		.uleb128 0xe
 1585 00b4 3A       		.uleb128 0x3a
 1586 00b5 0B       		.uleb128 0xb
 1587 00b6 3B       		.uleb128 0x3b
 1588 00b7 0B       		.uleb128 0xb
 1589 00b8 49       		.uleb128 0x49
 1590 00b9 13       		.uleb128 0x13
 1591 00ba 02       		.uleb128 0x2
 1592 00bb 18       		.uleb128 0x18
 1593 00bc 00       		.byte	0
 1594 00bd 00       		.byte	0
 1595 00be 0E       		.uleb128 0xe
 1596 00bf 34       		.uleb128 0x34
 1597 00c0 00       		.byte	0
 1598 00c1 03       		.uleb128 0x3
 1599 00c2 0E       		.uleb128 0xe
 1600 00c3 3A       		.uleb128 0x3a
 1601 00c4 0B       		.uleb128 0xb
 1602 00c5 3B       		.uleb128 0x3b
 1603 00c6 0B       		.uleb128 0xb
 1604 00c7 49       		.uleb128 0x49
 1605 00c8 13       		.uleb128 0x13
 1606 00c9 02       		.uleb128 0x2
 1607 00ca 18       		.uleb128 0x18
 1608 00cb 00       		.byte	0
 1609 00cc 00       		.byte	0
 1610 00cd 0F       		.uleb128 0xf
 1611 00ce 2E       		.uleb128 0x2e
 1612 00cf 00       		.byte	0
 1613 00d0 3F       		.uleb128 0x3f
 1614 00d1 19       		.uleb128 0x19
 1615 00d2 03       		.uleb128 0x3
 1616 00d3 0E       		.uleb128 0xe
 1617 00d4 3A       		.uleb128 0x3a
 1618 00d5 0B       		.uleb128 0xb
 1619 00d6 3B       		.uleb128 0x3b
 1620 00d7 0B       		.uleb128 0xb
 1621 00d8 27       		.uleb128 0x27
 1622 00d9 19       		.uleb128 0x19
 1623 00da 11       		.uleb128 0x11
 1624 00db 01       		.uleb128 0x1
 1625 00dc 12       		.uleb128 0x12
 1626 00dd 06       		.uleb128 0x6
 1627 00de 40       		.uleb128 0x40
 1628 00df 18       		.uleb128 0x18
 1629 00e0 9642     		.uleb128 0x2116
 1630 00e2 19       		.uleb128 0x19
 1631 00e3 00       		.byte	0
 1632 00e4 00       		.byte	0
 1633 00e5 10       		.uleb128 0x10
 1634 00e6 2E       		.uleb128 0x2e
 1635 00e7 00       		.byte	0
 1636 00e8 3F       		.uleb128 0x3f
 1637 00e9 19       		.uleb128 0x19
 1638 00ea 03       		.uleb128 0x3
 1639 00eb 0E       		.uleb128 0xe
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 37


 1640 00ec 3A       		.uleb128 0x3a
 1641 00ed 0B       		.uleb128 0xb
 1642 00ee 3B       		.uleb128 0x3b
 1643 00ef 0B       		.uleb128 0xb
 1644 00f0 27       		.uleb128 0x27
 1645 00f1 19       		.uleb128 0x19
 1646 00f2 11       		.uleb128 0x11
 1647 00f3 01       		.uleb128 0x1
 1648 00f4 12       		.uleb128 0x12
 1649 00f5 06       		.uleb128 0x6
 1650 00f6 40       		.uleb128 0x40
 1651 00f7 18       		.uleb128 0x18
 1652 00f8 9742     		.uleb128 0x2117
 1653 00fa 19       		.uleb128 0x19
 1654 00fb 00       		.byte	0
 1655 00fc 00       		.byte	0
 1656 00fd 11       		.uleb128 0x11
 1657 00fe 2E       		.uleb128 0x2e
 1658 00ff 01       		.byte	0x1
 1659 0100 3F       		.uleb128 0x3f
 1660 0101 19       		.uleb128 0x19
 1661 0102 03       		.uleb128 0x3
 1662 0103 0E       		.uleb128 0xe
 1663 0104 3A       		.uleb128 0x3a
 1664 0105 0B       		.uleb128 0xb
 1665 0106 3B       		.uleb128 0x3b
 1666 0107 05       		.uleb128 0x5
 1667 0108 27       		.uleb128 0x27
 1668 0109 19       		.uleb128 0x19
 1669 010a 11       		.uleb128 0x11
 1670 010b 01       		.uleb128 0x1
 1671 010c 12       		.uleb128 0x12
 1672 010d 06       		.uleb128 0x6
 1673 010e 40       		.uleb128 0x40
 1674 010f 18       		.uleb128 0x18
 1675 0110 9642     		.uleb128 0x2116
 1676 0112 19       		.uleb128 0x19
 1677 0113 01       		.uleb128 0x1
 1678 0114 13       		.uleb128 0x13
 1679 0115 00       		.byte	0
 1680 0116 00       		.byte	0
 1681 0117 12       		.uleb128 0x12
 1682 0118 34       		.uleb128 0x34
 1683 0119 00       		.byte	0
 1684 011a 03       		.uleb128 0x3
 1685 011b 0E       		.uleb128 0xe
 1686 011c 3A       		.uleb128 0x3a
 1687 011d 0B       		.uleb128 0xb
 1688 011e 3B       		.uleb128 0x3b
 1689 011f 05       		.uleb128 0x5
 1690 0120 49       		.uleb128 0x49
 1691 0121 13       		.uleb128 0x13
 1692 0122 02       		.uleb128 0x2
 1693 0123 18       		.uleb128 0x18
 1694 0124 00       		.byte	0
 1695 0125 00       		.byte	0
 1696 0126 13       		.uleb128 0x13
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 38


 1697 0127 2E       		.uleb128 0x2e
 1698 0128 01       		.byte	0x1
 1699 0129 3F       		.uleb128 0x3f
 1700 012a 19       		.uleb128 0x19
 1701 012b 03       		.uleb128 0x3
 1702 012c 0E       		.uleb128 0xe
 1703 012d 3A       		.uleb128 0x3a
 1704 012e 0B       		.uleb128 0xb
 1705 012f 3B       		.uleb128 0x3b
 1706 0130 05       		.uleb128 0x5
 1707 0131 11       		.uleb128 0x11
 1708 0132 01       		.uleb128 0x1
 1709 0133 12       		.uleb128 0x12
 1710 0134 06       		.uleb128 0x6
 1711 0135 40       		.uleb128 0x40
 1712 0136 18       		.uleb128 0x18
 1713 0137 9642     		.uleb128 0x2116
 1714 0139 19       		.uleb128 0x19
 1715 013a 01       		.uleb128 0x1
 1716 013b 13       		.uleb128 0x13
 1717 013c 00       		.byte	0
 1718 013d 00       		.byte	0
 1719 013e 14       		.uleb128 0x14
 1720 013f 01       		.uleb128 0x1
 1721 0140 01       		.byte	0x1
 1722 0141 49       		.uleb128 0x49
 1723 0142 13       		.uleb128 0x13
 1724 0143 01       		.uleb128 0x1
 1725 0144 13       		.uleb128 0x13
 1726 0145 00       		.byte	0
 1727 0146 00       		.byte	0
 1728 0147 15       		.uleb128 0x15
 1729 0148 21       		.uleb128 0x21
 1730 0149 00       		.byte	0
 1731 014a 49       		.uleb128 0x49
 1732 014b 13       		.uleb128 0x13
 1733 014c 2F       		.uleb128 0x2f
 1734 014d 0B       		.uleb128 0xb
 1735 014e 00       		.byte	0
 1736 014f 00       		.byte	0
 1737 0150 16       		.uleb128 0x16
 1738 0151 34       		.uleb128 0x34
 1739 0152 00       		.byte	0
 1740 0153 03       		.uleb128 0x3
 1741 0154 0E       		.uleb128 0xe
 1742 0155 3A       		.uleb128 0x3a
 1743 0156 0B       		.uleb128 0xb
 1744 0157 3B       		.uleb128 0x3b
 1745 0158 0B       		.uleb128 0xb
 1746 0159 49       		.uleb128 0x49
 1747 015a 13       		.uleb128 0x13
 1748 015b 3F       		.uleb128 0x3f
 1749 015c 19       		.uleb128 0x19
 1750 015d 3C       		.uleb128 0x3c
 1751 015e 19       		.uleb128 0x19
 1752 015f 00       		.byte	0
 1753 0160 00       		.byte	0
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 39


 1754 0161 17       		.uleb128 0x17
 1755 0162 34       		.uleb128 0x34
 1756 0163 00       		.byte	0
 1757 0164 03       		.uleb128 0x3
 1758 0165 0E       		.uleb128 0xe
 1759 0166 3A       		.uleb128 0x3a
 1760 0167 0B       		.uleb128 0xb
 1761 0168 3B       		.uleb128 0x3b
 1762 0169 0B       		.uleb128 0xb
 1763 016a 49       		.uleb128 0x49
 1764 016b 13       		.uleb128 0x13
 1765 016c 3F       		.uleb128 0x3f
 1766 016d 19       		.uleb128 0x19
 1767 016e 02       		.uleb128 0x2
 1768 016f 18       		.uleb128 0x18
 1769 0170 00       		.byte	0
 1770 0171 00       		.byte	0
 1771 0172 00       		.byte	0
 1772              		.section	.debug_aranges,"",%progbits
 1773 0000 4C000000 		.4byte	0x4c
 1774 0004 0200     		.2byte	0x2
 1775 0006 00000000 		.4byte	.Ldebug_info0
 1776 000a 04       		.byte	0x4
 1777 000b 00       		.byte	0
 1778 000c 0000     		.2byte	0
 1779 000e 0000     		.2byte	0
 1780 0010 00000000 		.4byte	.LFB32
 1781 0014 6C000000 		.4byte	.LFE32-.LFB32
 1782 0018 00000000 		.4byte	.LFB33
 1783 001c BC000000 		.4byte	.LFE33-.LFB33
 1784 0020 00000000 		.4byte	.LFB34
 1785 0024 50000000 		.4byte	.LFE34-.LFB34
 1786 0028 00000000 		.4byte	.LFB35
 1787 002c 20000000 		.4byte	.LFE35-.LFB35
 1788 0030 00000000 		.4byte	.LFB36
 1789 0034 14000000 		.4byte	.LFE36-.LFB36
 1790 0038 00000000 		.4byte	.LFB37
 1791 003c 28020000 		.4byte	.LFE37-.LFB37
 1792 0040 00000000 		.4byte	.LFB38
 1793 0044 BC000000 		.4byte	.LFE38-.LFB38
 1794 0048 00000000 		.4byte	0
 1795 004c 00000000 		.4byte	0
 1796              		.section	.debug_ranges,"",%progbits
 1797              	.Ldebug_ranges0:
 1798 0000 00000000 		.4byte	.LFB32
 1799 0004 6C000000 		.4byte	.LFE32
 1800 0008 00000000 		.4byte	.LFB33
 1801 000c BC000000 		.4byte	.LFE33
 1802 0010 00000000 		.4byte	.LFB34
 1803 0014 50000000 		.4byte	.LFE34
 1804 0018 00000000 		.4byte	.LFB35
 1805 001c 20000000 		.4byte	.LFE35
 1806 0020 00000000 		.4byte	.LFB36
 1807 0024 14000000 		.4byte	.LFE36
 1808 0028 00000000 		.4byte	.LFB37
 1809 002c 28020000 		.4byte	.LFE37
 1810 0030 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 40


 1811 0034 BC000000 		.4byte	.LFE38
 1812 0038 00000000 		.4byte	0
 1813 003c 00000000 		.4byte	0
 1814              		.section	.debug_line,"",%progbits
 1815              	.Ldebug_line0:
 1816 0000 71020000 		.section	.debug_str,"MS",%progbits,1
 1816      02006501 
 1816      00000201 
 1816      FB0E0D00 
 1816      01010101 
 1817              	.LASF34:
 1818 0000 7370696E 		.ascii	"spinCount\000"
 1818      436F756E 
 1818      7400
 1819              	.LASF35:
 1820 000a 6368616E 		.ascii	"changeDirection\000"
 1820      67654469 
 1820      72656374 
 1820      696F6E00 
 1821              	.LASF57:
 1822 001a 62637054 		.ascii	"bcpTxBuffer\000"
 1822      78427566 
 1822      66657200 
 1823              	.LASF15:
 1824 0026 666C6F61 		.ascii	"float32\000"
 1824      74333200 
 1825              	.LASF70:
 1826 002e 42435052 		.ascii	"BCPRxPoll\000"
 1826      78506F6C 
 1826      6C00
 1827              	.LASF55:
 1828 0038 74656D70 		.ascii	"temp\000"
 1828      00
 1829              	.LASF49:
 1830 003d 63757242 		.ascii	"curBtnStatus\000"
 1830      746E5374 
 1830      61747573 
 1830      00
 1831              	.LASF64:
 1832 004a 74656D70 		.ascii	"tempOutputSpeedRef\000"
 1832      4F757470 
 1832      75745370 
 1832      65656452 
 1832      656600
 1833              	.LASF21:
 1834 005d 73697A65 		.ascii	"sizetype\000"
 1834      74797065 
 1834      00
 1835              	.LASF50:
 1836 0066 42757474 		.ascii	"ButtonProcess\000"
 1836      6F6E5072 
 1836      6F636573 
 1836      7300
 1837              	.LASF28:
 1838 0074 6D617853 		.ascii	"maxSpeedRpm\000"
 1838      70656564 
 1838      52706D00 
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 41


 1839              	.LASF44:
 1840 0080 42757474 		.ascii	"ButtonInit\000"
 1840      6F6E496E 
 1840      697400
 1841              	.LASF2:
 1842 008b 73686F72 		.ascii	"short int\000"
 1842      7420696E 
 1842      7400
 1843              	.LASF60:
 1844 0095 55495F43 		.ascii	"UI_Cmd\000"
 1844      6D6400
 1845              	.LASF61:
 1846 009c 55495F44 		.ascii	"UI_Data\000"
 1846      61746100 
 1847              	.LASF12:
 1848 00a4 75696E74 		.ascii	"uint16\000"
 1848      313600
 1849              	.LASF39:
 1850 00ab 55495F44 		.ascii	"UI_DATA\000"
 1850      41544100 
 1851              	.LASF54:
 1852 00b3 696E6465 		.ascii	"index\000"
 1852      7800
 1853              	.LASF14:
 1854 00b9 696E7431 		.ascii	"int16\000"
 1854      3600
 1855              	.LASF11:
 1856 00bf 75696E74 		.ascii	"uint8\000"
 1856      3800
 1857              	.LASF24:
 1858 00c5 74657374 		.ascii	"test2\000"
 1858      3200
 1859              	.LASF37:
 1860 00cb 73776974 		.ascii	"switchAngle\000"
 1860      6368416E 
 1860      676C6500 
 1861              	.LASF38:
 1862 00d7 6D6F746F 		.ascii	"motorWindupOvercurrentDisable\000"
 1862      7257696E 
 1862      6475704F 
 1862      76657263 
 1862      75727265 
 1863              	.LASF59:
 1864 00f5 62637052 		.ascii	"bcpRxBufferIx\000"
 1864      78427566 
 1864      66657249 
 1864      7800
 1865              	.LASF31:
 1866 0103 6D617843 		.ascii	"maxCurr\000"
 1866      75727200 
 1867              	.LASF48:
 1868 010b 62746E53 		.ascii	"btnStatusPtr\000"
 1868      74617475 
 1868      73507472 
 1868      00
 1869              	.LASF16:
 1870 0118 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 42


 1870      7400
 1871              	.LASF25:
 1872 011e 67656172 		.ascii	"gearRatio\000"
 1872      52617469 
 1872      6F00
 1873              	.LASF69:
 1874 0128 5F42746E 		.ascii	"_Btn_Status_T\000"
 1874      5F537461 
 1874      7475735F 
 1874      5400
 1875              	.LASF51:
 1876 0136 55706461 		.ascii	"UpdateStatusInit\000"
 1876      74655374 
 1876      61747573 
 1876      496E6974 
 1876      00
 1877              	.LASF6:
 1878 0147 6C6F6E67 		.ascii	"long long int\000"
 1878      206C6F6E 
 1878      6720696E 
 1878      7400
 1879              	.LASF4:
 1880 0155 6C6F6E67 		.ascii	"long int\000"
 1880      20696E74 
 1880      00
 1881              	.LASF58:
 1882 015e 62637052 		.ascii	"bcpRxBuffer\000"
 1882      78427566 
 1882      66657200 
 1883              	.LASF63:
 1884 016a 62637052 		.ascii	"bcpRxFlag\000"
 1884      78466C61 
 1884      6700
 1885              	.LASF9:
 1886 0174 5F5F7569 		.ascii	"__uint8_t\000"
 1886      6E74385F 
 1886      7400
 1887              	.LASF66:
 1888 017e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1888      43313120 
 1888      352E342E 
 1888      31203230 
 1888      31363036 
 1889 01b1 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1889      20726576 
 1889      6973696F 
 1889      6E203233 
 1889      37373135 
 1890 01e4 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1890      66756E63 
 1890      74696F6E 
 1890      2D736563 
 1890      74696F6E 
 1891              	.LASF27:
 1892 020c 73706565 		.ascii	"speedRpmRef\000"
 1892      6452706D 
 1892      52656600 
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 43


 1893              	.LASF20:
 1894 0218 6C6F6E67 		.ascii	"long double\000"
 1894      20646F75 
 1894      626C6500 
 1895              	.LASF62:
 1896 0224 73746174 		.ascii	"stateSys\000"
 1896      65537973 
 1896      00
 1897              	.LASF1:
 1898 022d 756E7369 		.ascii	"unsigned char\000"
 1898      676E6564 
 1898      20636861 
 1898      7200
 1899              	.LASF29:
 1900 023b 6D696E53 		.ascii	"minSpeedRpm\000"
 1900      70656564 
 1900      52706D00 
 1901              	.LASF0:
 1902 0247 7369676E 		.ascii	"signed char\000"
 1902      65642063 
 1902      68617200 
 1903              	.LASF7:
 1904 0253 6C6F6E67 		.ascii	"long long unsigned int\000"
 1904      206C6F6E 
 1904      6720756E 
 1904      7369676E 
 1904      65642069 
 1905              	.LASF30:
 1906 026a 706F6C65 		.ascii	"polePairs\000"
 1906      50616972 
 1906      7300
 1907              	.LASF8:
 1908 0274 756E7369 		.ascii	"unsigned int\000"
 1908      676E6564 
 1908      20696E74 
 1908      00
 1909              	.LASF56:
 1910 0281 62746E41 		.ascii	"btnArray\000"
 1910      72726179 
 1910      00
 1911              	.LASF53:
 1912 028a 42435050 		.ascii	"BCPPoll\000"
 1912      6F6C6C00 
 1913              	.LASF40:
 1914 0292 70726542 		.ascii	"preBtnStatus\000"
 1914      746E5374 
 1914      61747573 
 1914      00
 1915              	.LASF43:
 1916 029f 42746E5F 		.ascii	"Btn_Status_T\000"
 1916      53746174 
 1916      75735F54 
 1916      00
 1917              	.LASF19:
 1918 02ac 63686172 		.ascii	"char\000"
 1918      00
 1919              	.LASF65:
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 44


 1920 02b1 74656D70 		.ascii	"tempAngularPos\000"
 1920      416E6775 
 1920      6C617250 
 1920      6F7300
 1921              	.LASF47:
 1922 02c0 62746E41 		.ascii	"btnArrayPtr\000"
 1922      72726179 
 1922      50747200 
 1923              	.LASF33:
 1924 02cc 616E6775 		.ascii	"angularPos\000"
 1924      6C617250 
 1924      6F7300
 1925              	.LASF3:
 1926 02d7 73686F72 		.ascii	"short unsigned int\000"
 1926      7420756E 
 1926      7369676E 
 1926      65642069 
 1926      6E7400
 1927              	.LASF68:
 1928 02ea 443A5C53 		.ascii	"D:\\Sensored BLDC Motor Control\\control_v3.cydsn\000"
 1928      656E736F 
 1928      72656420 
 1928      424C4443 
 1928      204D6F74 
 1929              	.LASF42:
 1930 031a 62746E49 		.ascii	"btnIsDetectFlag\000"
 1930      73446574 
 1930      65637446 
 1930      6C616700 
 1931              	.LASF46:
 1932 032a 62746E53 		.ascii	"btnStatus\000"
 1932      74617475 
 1932      7300
 1933              	.LASF23:
 1934 0334 74657374 		.ascii	"test\000"
 1934      00
 1935              	.LASF13:
 1936 0339 75696E74 		.ascii	"uint32\000"
 1936      333200
 1937              	.LASF5:
 1938 0340 6C6F6E67 		.ascii	"long unsigned int\000"
 1938      20756E73 
 1938      69676E65 
 1938      6420696E 
 1938      7400
 1939              	.LASF18:
 1940 0352 646F7562 		.ascii	"double\000"
 1940      6C6500
 1941              	.LASF10:
 1942 0359 75696E74 		.ascii	"uint8_t\000"
 1942      385F7400 
 1943              	.LASF17:
 1944 0361 666C6F61 		.ascii	"float64\000"
 1944      74363400 
 1945              	.LASF22:
 1946 0369 55495F43 		.ascii	"UI_CMD\000"
 1946      4D4400
ARM GAS  C:\Users\IlyR\AppData\Local\Temp\ccDikLJn.s 			page 45


 1947              	.LASF32:
 1948 0370 74696D65 		.ascii	"timeBetweenHallSamples\000"
 1948      42657477 
 1948      65656E48 
 1948      616C6C53 
 1948      616D706C 
 1949              	.LASF67:
 1950 0387 75736572 		.ascii	"userinterface.c\000"
 1950      696E7465 
 1950      72666163 
 1950      652E6300 
 1951              	.LASF26:
 1952 0397 73706565 		.ascii	"speedRpm\000"
 1952      6452706D 
 1952      00
 1953              	.LASF45:
 1954 03a0 42757474 		.ascii	"ButtonPressDetect\000"
 1954      6F6E5072 
 1954      65737344 
 1954      65746563 
 1954      7400
 1955              	.LASF36:
 1956 03b2 70726F67 		.ascii	"programStateManchineState\000"
 1956      72616D53 
 1956      74617465 
 1956      4D616E63 
 1956      68696E65 
 1957              	.LASF52:
 1958 03cc 55706461 		.ascii	"UpdateStatusError\000"
 1958      74655374 
 1958      61747573 
 1958      4572726F 
 1958      7200
 1959              	.LASF41:
 1960 03de 676C6974 		.ascii	"glitchFilter\000"
 1960      63684669 
 1960      6C746572 
 1960      00
 1961              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
